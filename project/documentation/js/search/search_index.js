var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AcceptEmergencyDto.html",[0,0.125,1,2.157]],["body/classes/AcceptEmergencyDto.html",[0,0.229,1,3.203,2,1.266,3,0.189,4,0.189,5,0.169,6,2.757,7,0.29,8,1.119,9,4.026,10,0.794,11,3.096,12,0.496,13,0.015,14,1.07,15,1.419,16,3.383,17,0.688,18,4.458,19,2.095,20,4.458,21,0.249,22,2.457,23,2.479,24,4.063,25,2.392,26,1.544,27,1.369,28,0.303,29,1.676,30,3.864,31,2.882,32,3.203,33,3.203,34,3.203,35,0.755,36,2.317,37,2.317,38,2.446,39,2.591,40,1.749,41,1.886,42,1.749,43,2.446,44,2.446,45,4.169,46,4.169,47,4.169,48,4.169,49,2.446,50,2.591,51,3.184,52,1.266,53,2.446,54,0.011,55,0.011]],["title/controllers/AppController.html",[56,1.418,57,2.807]],["body/controllers/AppController.html",[0,0.16,3,0.212,4,0.212,5,0.19,7,0.326,12,0.534,13,0.015,14,0.981,15,1.528,17,0.741,21,0.383,28,0.212,52,1.785,54,0.012,55,0.012,56,2.268,57,4.489,58,1.805,59,4.338,60,1.717,61,6.252,62,7.211,63,5.003,64,5.003,65,1.785,66,4.161,67,5.003,68,5.003,69,0.813,70,4.251,71,4.338,72,3.572,73,5.003,74,2.351,75,2.243,76,4.338,77,5.45,78,3.449,79,4.161,80,1.717,81,6.286]],["title/modules/AppModule.html",[82,1.161,83,2.807]],["body/modules/AppModule.html",[0,0.132,3,0.175,4,0.175,5,0.157,13,0.015,21,0.436,28,0.175,54,0.01,55,0.01,57,4.477,58,2.003,69,0.671,70,4.453,71,3.584,82,1.852,83,5.786,84,1.77,85,1.77,86,1.942,87,1.942,88,1.77,89,2.262,90,1.942,91,3.584,92,3.584,93,3.584,94,4.453,95,4.766,96,4.453,97,3.95,98,3.228,99,4.453,100,4.453,101,4.766,102,4.453,103,2.609,104,1.942,105,1.942,106,4.133,107,3.046,108,3.584,109,2.556,110,4.133,111,2.268,112,3.584,113,3.584,114,3.584,115,3.584,116,3.584,117,4.133,118,2.952,119,4.133,120,4.133,121,4.133,122,1.693,123,4.133,124,3.222]],["title/injectables/AppService.html",[70,2.431,125,0.884]],["body/injectables/AppService.html",[0,0.179,3,0.237,4,0.237,5,0.213,7,0.366,12,0.477,13,0.015,14,0.918,17,0.662,21,0.313,28,0.237,52,1.916,54,0.013,55,0.013,60,1.843,61,6.507,65,1.594,66,3.715,69,0.911,70,4.172,79,4.465,80,1.533,125,1.517,126,2.299,127,4.866,128,5.612,129,5.612,130,5.612,131,5.612,132,1.943,133,4.008]],["title/controllers/AuthController.html",[56,1.418,134,2.807]],["body/controllers/AuthController.html",[0,0.052,3,0.069,4,0.069,5,0.062,7,0.107,8,0.315,10,0.722,12,0.554,13,0.015,14,0.887,15,1.29,17,0.626,21,0.333,28,0.069,35,1.012,52,1.852,54,0.005,55,0.005,56,0.592,58,0.592,60,0.751,65,1.507,66,1.82,69,0.267,72,2.597,75,1.59,78,0.901,80,1.716,89,0.992,109,1.015,122,1.126,132,1.731,134,1.963,135,1.423,136,1.087,137,2.384,138,2.695,139,4.237,140,3.547,141,2.749,142,2.412,143,4.333,144,2.749,145,1.642,146,1.642,147,2.749,148,2.131,149,1.642,150,4.897,151,3.517,152,3.076,153,1.642,154,5.567,155,2.749,156,1.642,157,2.749,158,2.384,159,2.384,160,1.82,161,1.765,162,3.547,163,1.423,164,2.758,165,6.796,166,3.164,167,1.642,168,2.093,169,1.642,170,1.642,171,3.547,172,3.308,173,1.642,174,2.685,175,2.349,176,1.642,177,3.516,178,4.006,179,1.642,180,2.749,181,3.841,182,1.642,183,3.261,184,2.597,185,1.508,186,1.508,187,1.642,188,2.156,189,2.062,190,1.642,191,4.063,192,1.82,193,2.808,194,3.547,195,1.642,196,3.447,197,4.149,198,3.598,199,1.642,200,3.076,201,1.642,202,2.143,203,1.642,204,2.912,205,1.642,206,4.006,207,1.642,208,1.642,209,1.843,210,1.642,211,1.642,212,2.384,213,2.742,214,2.749,215,2.749,216,1.423,217,1.642,218,2.412,219,2.412,220,1.642,221,1.642,222,2.749,223,2.143,224,1.642,225,2.384,226,2.143,227,1.423,228,2.758,229,1.642,230,1.642,231,1.642,232,2.749,233,3.085,234,1.642,235,3.076,236,1.642,237,1.642,238,1.642,239,2.963,240,1.642,241,1.642,242,4.339,243,1.642,244,1.751,245,1.015,246,1.087,247,1.423,248,1.172,249,1.598,250,0.954,251,1.28,252,1.946,253,1.423,254,1.946,255,1.423,256,0.81,257,1.642,258,0.954,259,2.533,260,1.642,261,0.617,262,0.592,263,1.292,264,1.28,265,1.642,266,5.567,267,6.521,268,2.749,269,4.998,270,4.149,271,0.954,272,1.642,273,1.642,274,1.667,275,1.642,276,0.644,277,1.642,278,5.308,279,1.642,280,2.412,281,1.765,282,2.24,283,1.642,284,1.642,285,4.827,286,0.525,287,1.598,288,2.384,289,0.672,290,1.423,291,0.672,292,1.423,293,0.672,294,1.423,295,0.879,296,1.172,297,1.28,298,1.423,299,1.642,300,2.276,301,2.758,302,3.598,303,1.963,304,3.085,305,3.598,306,3.547,307,1.642,308,1.642,309,4.149,310,1.642,311,3.547,312,2.749,313,2.348,314,2.749,315,2.348,316,2.749,317,2.348,318,2.749,319,2.749,320,1.642,321,1.423,322,1.642,323,2.749,324,1.642,325,0.81,326,1.423,327,1.642,328,0.901,329,1.642,330,1.642,331,1.642,332,1.642,333,1.642,334,2.749,335,1.642,336,1.28,337,1.642,338,0.954,339,1.642,340,1.642,341,1.087,342,0.901,343,1.423,344,2.384,345,1.642,346,1.423,347,1.423,348,1.423,349,0.954,350,1.423,351,1.642,352,1.642,353,1.642,354,1.642,355,1.642,356,1.642,357,1.642,358,1.642,359,1.423,360,1.642,361,1.642]],["title/modules/AuthModule.html",[82,1.161,94,2.431]],["body/modules/AuthModule.html",[0,0.139,3,0.184,4,0.184,5,0.166,13,0.015,21,0.427,28,0.184,54,0.011,55,0.011,58,2.076,69,0.708,82,1.902,84,1.868,85,1.868,86,2.05,87,2.05,88,1.868,89,2.323,90,3.027,94,4.9,98,3.277,102,4.521,103,2.704,104,2.05,105,2.05,107,3.533,108,4.989,109,2.697,111,2.393,113,3.782,134,4.599,219,2.535,252,4.302,253,3.782,259,4.89,362,3.782,363,4.361,364,3.782,365,3.782,366,5.19,367,4.361,368,4.989,369,2.697,370,5.754,371,3.115,372,4.361,373,4.361,374,4.361,375,4.361,376,4.361,377,4.361,378,4.361,379,3.782,380,3.782,381,4.361,382,3.782,383,4.361,384,4.361]],["title/injectables/AuthService.html",[125,0.884,252,2.157]],["body/injectables/AuthService.html",[0,0.038,3,0.051,4,0.051,5,0.045,7,0.078,8,0.402,10,0.741,12,0.477,13,0.015,14,0.932,17,0.679,21,0.293,28,0.051,31,0.59,32,2.305,35,0.923,52,0.794,54,0.004,55,0.004,60,0.572,65,1.494,69,0.194,72,2.623,75,1.883,80,1.488,89,0.755,109,0.739,122,1.564,125,0.471,126,0.49,132,2.515,136,2.222,138,2.708,139,2.793,142,2.442,143,3.31,148,2.449,159,1.816,160,1.386,161,1.812,163,1.816,164,2.184,168,2.537,172,0.791,174,3.498,175,0.984,177,2.484,178,3.31,181,3.08,183,3.221,185,0.656,186,0.656,189,1.217,191,2.781,192,3.181,193,3.305,196,1.842,200,1.816,202,1.633,206,1.036,209,2.498,213,0.656,216,1.816,218,3.057,219,2.442,225,1.816,226,2.179,227,1.816,228,2.184,233,1.217,235,1.816,239,3.605,242,1.633,248,1.996,249,1.951,252,1.149,255,1.036,259,3,261,0.788,262,0.431,263,2.372,264,0.932,274,2.372,276,0.822,280,3.166,281,2.424,282,2.792,286,0.893,287,3.166,288,3.31,289,1.721,291,1.721,293,1.145,295,1.884,297,2.617,298,2.424,300,2.77,301,3.535,302,3.925,303,1.496,304,2.934,305,4.167,313,2.222,315,1.85,317,1.85,321,1.036,325,3.331,326,2.424,328,0.656,336,0.932,338,3.263,341,3.181,342,2.094,343,3.31,344,1.816,346,2.424,347,2.424,348,2.424,369,0.739,379,2.424,382,1.816,385,1.036,386,2.094,387,2.094,388,2.094,389,2.094,390,2.094,391,2.094,392,1.816,393,1.036,394,3.233,395,1.314,396,1.317,397,2.094,398,2.094,399,1.195,400,3.357,401,2.094,402,1.85,403,2.094,404,1.496,405,2.708,406,2.094,407,1.195,408,2.094,409,2.094,410,3.647,411,2.094,412,1.195,413,2.094,414,1.195,415,1.195,416,2.094,417,1.195,418,1.195,419,1.195,420,2.094,421,1.195,422,1.633,423,1.195,424,2.094,425,0.656,426,0.656,427,2.094,428,2.424,429,1.195,430,1.195,431,0.932,432,2.094,433,1.816,434,0.932,435,0.932,436,0.59,437,0.739,438,0.932,439,1.816,440,1.816,441,0.932,442,1.195,443,1.195,444,1.195,445,1.195,446,1.195,447,2.424,448,0.854,449,2.094,450,2.094,451,1.195,452,0.59,453,0.621,454,0.621,455,1.295,456,1.195,457,1.195,458,1.195,459,1.195,460,1.195,461,1.816,462,2.795,463,1.816,464,2.094,465,3.275,466,1.195,467,1.195,468,1.195,469,2.094,470,0.791,471,2.094,472,1.195,473,2.094,474,0.791,475,4.202,476,2.094,477,1.036,478,2.795,479,4.527,480,1.195,481,1.195,482,1.295,483,2.094,484,2.094,485,2.637,486,0.932,487,3.817,488,2.094,489,1.195,490,1.195,491,1.195,492,1.036,493,1.195,494,3.817,495,4.527,496,2.795,497,2.094,498,2.094,499,1.195,500,1.195,501,1.195,502,1.195,503,1.195,504,1.195,505,1.729,506,1.195,507,1.195,508,1.195,509,1.195,510,1.195,511,1.195,512,1.195,513,1.195,514,1.195,515,2.795,516,2.094,517,1.036,518,1.195,519,1.195,520,1.195,521,2.094,522,1.195,523,1.195,524,2.795,525,1.195,526,1.816,527,1.195,528,2.795,529,2.795,530,1.195,531,2.094,532,2.094,533,2.795,534,1.195,535,0.695,536,2.094,537,1.036,538,2.094,539,1.195,540,0.854,541,1.195,542,2.094,543,1.195,544,2.094,545,2.094,546,1.195,547,1.195,548,1.195,549,1.195,550,0.932,551,1.195,552,1.195,553,1.195,554,1.195,555,2.094,556,1.195,557,2.795,558,2.795,559,2.424,560,1.195,561,0.932,562,1.195,563,1.195,564,1.195,565,1.195,566,1.195,567,1.195,568,1.195,569,1.195,570,1.195,571,0.739,572,1.195,573,2.094,574,2.094,575,1.036,576,1.195,577,1.195]],["title/interfaces/AuthTokens.html",[437,2.431,578,1.684]],["body/interfaces/AuthTokens.html",[3,0.206,4,0.206,5,0.185,7,0.317,8,1.185,10,1.025,12,0.607,13,0.015,14,1.116,28,0.287,35,0.825,41,1.792,54,0.012,55,0.012,89,1.757,168,2.553,183,2.289,191,4.727,263,2.289,286,1.556,293,1.995,295,1.975,313,4.727,315,4.727,317,4.727,338,2.831,342,2.672,437,3.822,540,3.478,578,2.908,579,3.012,580,3.478,581,3.224,582,3.224,583,3.797,584,3.797,585,3.797,586,3.797,587,3.224,588,3.797,589,3.797]],["title/classes/CreateEmergencyRequestDto.html",[0,0.125,590,2.431]],["body/classes/CreateEmergencyRequestDto.html",[0,0.2,2,1.17,3,0.174,4,0.174,5,0.156,7,0.268,8,1.062,10,1.016,11,1.846,12,0.65,13,0.015,14,0.95,15,1.787,17,0.866,19,1.935,21,0.23,22,2.232,23,2.298,24,3.252,26,1.426,27,1.265,28,0.295,29,2.353,40,2.455,41,1.627,42,2.455,52,1.17,54,0.01,55,0.01,151,2.941,590,3.425,591,2.941,592,4.878,593,4.469,594,3.433,595,4.118,596,4.878,597,4.802,598,4.118,599,3.666,600,4.118,601,4.118,602,4.118,603,3.219,604,3.21,605,4.118,606,4.878,607,4.802,608,4.118,609,3.425,610,4.317,611,4.317,612,4.317,613,4.317,614,4.317,615,4.317,616,4.317,617,3.219,618,3.955,619,4.317,620,4.317,621,3.955,622,4.317,623,2.547,624,3.57]],["title/classes/CreateHospitalDto.html",[0,0.125,34,2.157]],["body/classes/CreateHospitalDto.html",[0,0.212,1,1.969,2,1.02,3,0.152,4,0.152,5,0.136,6,2.22,7,0.234,8,0.966,9,2.22,10,1.033,11,2.259,12,0.651,13,0.015,14,1.065,15,1.861,16,2.619,17,0.903,19,1.687,21,0.2,22,2.463,23,2.379,24,3.979,25,2.065,26,1.243,27,1.103,28,0.281,29,1.35,30,3.336,31,2.488,32,2.765,33,2.765,34,3.195,35,0.987,36,3.027,37,3.027,38,3.195,39,3.385,40,2.285,41,1.895,42,2.285,43,3.195,44,3.195,45,4.51,46,4.51,47,4.51,48,4.51,49,1.969,50,2.086,51,2.563,52,1.02,53,1.969,54,0.009,55,0.009,599,4.18,625,3.59,626,3.59,627,3.59,628,3.59,629,2.563,630,3.59,631,3.59,632,3.59,633,3.59,634,3.59,635,3.59,636,3.59,637,3.59,638,3.59]],["title/classes/CreateNotificationDto.html",[0,0.125,639,2.602]],["body/classes/CreateNotificationDto.html",[0,0.219,2,1.411,3,0.21,4,0.21,5,0.189,7,0.324,8,1.2,10,0.852,12,0.66,13,0.015,14,1.067,15,1.803,16,3.738,17,0.874,21,0.277,22,2.456,23,2,27,1.526,28,0.265,54,0.012,55,0.012,244,3.383,603,3.638,604,3.873,609,3.871,639,4.143,640,3.873,641,3.983,642,4.536,643,3.759,644,4.969,645,4.969,646,4.969,647,4.969,648,4.969,649,3.549,650,4.309]],["title/classes/CreateRescueTeamDto.html",[0,0.125,651,2.285]],["body/classes/CreateRescueTeamDto.html",[0,0.205,2,1.055,3,0.157,4,0.157,5,0.141,7,0.242,8,0.99,10,1.02,11,1.666,12,0.637,13,0.015,14,1.096,15,1.823,16,2.683,17,0.884,19,1.747,21,0.207,22,2.532,23,2.523,24,3.501,25,2.431,26,1.287,27,1.142,28,0.271,29,1.397,33,2.833,35,1.086,36,3.332,37,3.332,38,3.517,39,3.726,40,2.515,41,1.695,42,2.515,43,3.517,44,3.517,52,1.055,54,0.01,55,0.01,599,3.418,629,2.654,651,3.001,652,2.46,653,4.998,654,3.716,655,3.716,656,3.716,657,3.716,658,3.716,659,3.716,660,3.716,661,3.716,662,3.716,663,3.222,664,3.716,665,4.625,666,3.687,667,3.418,668,3.687,669,3.687,670,2.16,671,2.16,672,2.897,673,2.654]],["title/controllers/DashboardController.html",[56,1.418,674,2.807]],["body/controllers/DashboardController.html",[0,0.149,3,0.197,4,0.197,5,0.177,7,0.304,13,0.015,15,1.708,17,0.828,21,0.415,28,0.197,54,0.011,55,0.011,56,1.683,58,1.683,60,1.642,65,1.996,69,0.758,74,2.192,75,2.091,78,2.559,80,1.92,250,2.711,256,2.303,258,2.711,261,1.754,262,1.683,349,2.711,452,2.303,674,4.294,675,4.045,676,4.045,677,6.093,678,6.093,679,6.093,680,6.093,681,4.665,682,4.687,683,4.665,684,4.665,685,6.012,686,4.665,687,4.665,688,4.665,689,4.665,690,6.012,691,4.665,692,4.115,693,4.045,694,2.885,695,3.494,696,3.331,697,2.711,698,3.331,699,4.665,700,3.636,701,4.665,702,4.665,703,4.665,704,4.665,705,4.665,706,4.665,707,4.665,708,4.665]],["title/modules/DashboardModule.html",[82,1.161,95,2.602]],["body/modules/DashboardModule.html",[0,0.154,3,0.205,4,0.205,5,0.184,13,0.015,21,0.426,28,0.205,54,0.011,55,0.011,58,2.22,69,0.786,82,1.999,84,2.072,85,2.072,86,2.274,87,2.274,88,2.072,89,2.442,90,2.274,95,5.313,96,4.65,98,3.37,99,4.65,100,4.65,103,2.893,104,2.274,105,2.274,107,3.377,111,2.655,114,4.195,115,4.195,116,4.195,674,4.834,692,4.65,693,4.195,709,4.195,710,4.195,711,4.839,712,4.839,713,4.839]],["title/injectables/DashboardService.html",[125,0.884,692,2.431]],["body/injectables/DashboardService.html",[0,0.117,3,0.155,4,0.155,5,0.139,7,0.238,10,0.498,12,0.569,13,0.016,17,0.79,21,0.328,28,0.155,31,3.516,35,0.997,40,1.436,42,1.436,52,2.064,54,0.01,55,0.01,60,1.396,65,1.809,69,0.595,74,1.721,80,1.74,122,3.167,125,1.149,126,1.5,138,2.991,161,1.218,175,2.994,276,1.436,281,1.218,282,1.641,286,1.881,289,1.5,291,1.5,293,1.5,395,2.401,396,2.499,436,1.807,448,2.614,482,3.64,594,2.803,617,2.128,621,2.614,677,5.523,678,5.523,679,5.523,680,5.523,682,4.588,692,3.16,714,3.174,715,2.264,716,3.661,717,3.661,718,3.661,719,3.661,720,3.661,721,2.854,722,3.983,723,3.983,724,3.983,725,3.983,726,4.203,727,3.661,728,3.661,729,5.886,730,3.983,731,4.43,732,5.109,733,3.661,734,2.614,735,2.614,736,5.109,737,4.43,738,3.983,739,3.174,740,3.649,741,2.854,742,3.174,743,3.174,744,2.614,745,3.174,746,3.983]],["title/classes/DashboardStatsResponseDto.html",[0,0.125,747,2.807]],["body/classes/DashboardStatsResponseDto.html",[0,0.213,2,1.331,3,0.198,4,0.198,5,0.178,7,0.305,8,1.156,12,0.653,13,0.015,14,0.958,17,0.894,21,0.261,22,2.13,23,2.327,26,1.622,27,1.439,28,0.255,29,1.762,41,1.944,54,0.011,55,0.011,722,5.197,723,5.197,724,5.197,725,5.197,747,4.305,748,3.346,749,5.78,750,5.78,751,5.78,752,4.685,753,4.685,754,4.685,755,4.685,756,4.685,757,4.685,758,4.685,759,5.78,760,4.7,761,4.7,762,4.7,763,4.7,764,4.7,765,3.346,766,4.062,767,4.062,768,4.062,769,4.062,770,4.062]],["title/controllers/HospitalController.html",[56,1.418,771,2.807]],["body/controllers/HospitalController.html",[0,0.078,1,3.545,3,0.103,4,0.103,5,0.093,7,0.159,10,0.954,12,0.596,13,0.015,14,1.07,15,1.705,17,0.827,21,0.348,28,0.103,34,3.287,35,1.188,40,1.485,41,1.613,42,2.051,49,3.545,52,1.701,53,2.869,54,0.007,55,0.007,56,0.879,58,0.879,60,1.034,65,1.992,69,0.396,74,1.146,75,1.697,78,1.338,80,1.916,132,0.844,138,2.848,158,2.114,161,2.332,175,2.66,244,2.581,245,2.869,246,1.614,249,2.2,250,1.417,256,1.203,258,1.417,261,0.917,262,0.879,274,1.146,286,2.065,349,1.417,402,2.505,453,3.358,694,1.508,695,2.2,696,1.741,697,1.417,698,1.741,700,4.67,726,3.313,734,2.703,771,2.703,772,2.114,773,4.022,774,2.341,775,4.022,776,2.505,777,3.281,778,3.281,779,3.281,780,1.967,781,4.022,782,3.281,783,4.022,784,2.114,785,2.438,786,2.438,787,2.438,788,3.281,789,2.114,790,2.114,791,2.438,792,1.741,793,2.114,794,2.438,795,3.734,796,1.741,797,2.114,798,4.278,799,2.438,800,2.438,801,1.614,802,2.114,803,2.438,804,2.114,805,2.438,806,3.785,807,2.438,808,5.602,809,2.114,810,2.438,811,3.785,812,2.438,813,2.438,814,2.114,815,2.438,816,2.438,817,1.741,818,2.114,819,2.438,820,2.114,821,4.534,822,2.438,823,2.438,824,2.114,825,2.438,826,2.438,827,2.114,828,2.438,829,2.438,830,2.438,831,1.614,832,4.639,833,2.114,834,1.614,835,2.869,836,2.114,837,2.114,838,2.438,839,2.438,840,2.438,841,1.741,842,2.114,843,2.438,844,5.008,845,2.438,846,2.114,847,4.639,848,2.438,849,2.114,850,2.114,851,4.639,852,2.438,853,2.114,854,2.438,855,4.639,856,2.438,857,2.438,858,2.438,859,2.438,860,2.438,861,2.438,862,5.991,863,3.616,864,2.438,865,2.438,866,2.438,867,2.505,868,2.438,869,2.438,870,2.438,871,2.438,872,2.438,873,2.438,874,2.114,875,4.022,876,2.438,877,2.438,878,2.438,879,3.785,880,2.438,881,5.661,882,3.785,883,2.438,884,2.438,885,2.438,886,2.438,887,2.438,888,2.438,889,2.438,890,2.438,891,3.785,892,2.438,893,2.438,894,2.438,895,2.438]],["title/modules/HospitalModule.html",[82,1.161,96,2.431]],["body/modules/HospitalModule.html",[0,0.158,3,0.21,4,0.21,5,0.188,13,0.015,21,0.413,28,0.21,54,0.012,55,0.012,58,2.255,69,0.805,82,2.022,84,2.123,85,2.123,86,2.33,87,2.33,88,2.123,89,2.469,90,3.217,96,4.914,97,4.151,98,3.391,103,2.938,104,2.33,105,2.33,107,3.429,111,2.72,118,3.541,771,4.888,835,4.938,836,4.299,896,4.299,897,4.299,898,4.958,899,4.299,900,4.958,901,4.958]],["title/injectables/HospitalService.html",[125,0.884,835,2.431]],["body/injectables/HospitalService.html",[0,0.063,1,3.157,3,0.083,4,0.083,5,0.075,7,0.128,8,0.613,9,1.22,10,0.918,11,0.884,12,0.617,13,0.015,14,1.029,17,0.807,21,0.284,28,0.083,31,0.974,32,1.082,34,2.997,35,1.175,36,1.025,37,1.662,38,1.755,40,1.821,41,1.506,42,2.001,43,1.082,44,1.082,49,3.288,52,1.634,53,2.546,54,0.006,55,0.006,60,0.874,65,1.885,69,0.32,75,1.809,80,1.572,122,2.607,125,0.719,126,0.808,132,1.892,138,3.008,161,2.244,166,1.579,175,3.119,244,0.974,249,2.698,274,2.398,276,1.255,281,2.165,282,2.853,286,2.399,289,1.31,291,1.31,295,1.022,325,1.992,395,1.503,396,1.821,402,2.117,405,2.567,425,2.214,426,1.755,431,1.538,436,0.974,448,1.409,470,2.117,474,1.306,482,2.495,485,2.546,537,2.774,594,2.546,603,1.146,617,1.146,618,2.284,641,1.146,642,1.306,643,1.082,715,1.22,721,1.538,726,2.881,730,1.538,731,1.71,738,5.573,740,3.315,746,1.538,773,3.499,774,1.978,775,3.499,776,2.117,777,2.774,778,2.774,779,2.774,780,1.662,781,3.499,782,2.774,783,2.774,784,1.71,788,4.423,789,2.774,792,2.284,795,3.901,796,1.409,797,1.71,798,3.643,801,2.117,804,1.71,808,4.024,809,1.71,814,2.774,817,2.284,820,1.71,821,4.024,824,1.71,827,1.71,835,1.978,837,1.71,841,1.409,867,3.377,875,1.71,902,1.538,903,2.84,904,3.199,905,1.972,906,1.972,907,1.972,908,1.972,909,1.972,910,1.972,911,1.972,912,1.972,913,1.972,914,1.972,915,1.972,916,1.972,917,3.199,918,1.409,919,1.538,920,3.315,921,3.145,922,1.972,923,1.972,924,1.71,925,2.774,926,2.774,927,1.978,928,1.71,929,1.71,930,1.538,931,1.972,932,1.972,933,3.199,934,3.199,935,3.499,936,3.499,937,1.972,938,2.774,939,3.199,940,1.972,941,1.972,942,1.71,943,4.035,944,3.199,945,2.965,946,1.71,947,3.199,948,1.538,949,1.972,950,1.972,951,1.972,952,4.035,953,1.972,954,1.538,955,1.972,956,3.499,957,1.972,958,1.71,959,1.972,960,3.199,961,1.972,962,1.972,963,1.972,964,1.972,965,1.972,966,1.972,967,1.972,968,1.71,969,1.71,970,1.71,971,1.71,972,1.71,973,1.71,974,1.71,975,1.71,976,1.71,977,2.774,978,1.972,979,1.71]],["title/classes/HttpExceptionFilter.html",[0,0.125,980,3.064]],["body/classes/HttpExceptionFilter.html",[0,0.141,2,1.256,3,0.187,4,0.187,5,0.168,7,0.288,8,1.114,10,0.602,12,0.376,13,0.015,17,0.685,21,0.324,28,0.187,35,0.749,52,1.842,54,0.011,55,0.011,60,1.586,65,1.256,69,0.718,75,2.907,79,2.927,132,2.245,133,3.158,161,1.471,166,3.201,247,3.835,249,4.002,251,3.447,274,3.047,281,2.441,285,3.835,300,3.557,301,3.37,359,5.035,425,2.426,426,2.426,517,3.835,945,3.375,980,4.527,981,5.622,982,3.835,983,3.375,984,6.484,985,5.807,986,4.422,987,5.807,988,6.885,989,6.484,990,6.885,991,4.422,992,3.835,993,3.835,994,4.422,995,3.835,996,4.422,997,4.422,998,4.422,999,4.422,1000,7.339,1001,4.422,1002,3.447,1003,5.807,1004,5.807,1005,5.035,1006,4.422,1007,3.835,1008,4.422,1009,3.447,1010,4.422,1011,3.835,1012,4.422]],["title/injectables/JwtAuthGuard.html",[125,0.884,256,1.941]],["body/injectables/JwtAuthGuard.html",[0,0.122,3,0.288,4,0.162,5,0.145,7,0.249,10,0.819,12,0.511,13,0.015,17,0.71,21,0.362,28,0.162,35,1.02,50,3.058,54,0.01,55,0.01,60,1.437,65,1.842,69,0.62,72,1.985,74,1.795,80,1.644,122,1.564,125,1.183,126,1.564,132,1.322,148,2.339,151,2.473,160,4.859,161,2.002,172,2.528,184,1.985,192,2.528,193,1.795,202,4.101,219,2.22,248,2.727,256,2.597,276,1.498,281,1.27,301,2.734,325,1.885,336,2.977,371,2.727,410,3.254,461,4.562,485,2.095,587,3.483,641,2.22,834,3.984,945,3.058,948,4.101,992,4.562,1013,5.624,1014,3.311,1015,5.261,1016,5.219,1017,5.261,1018,3.311,1019,6.097,1020,3.819,1021,3.311,1022,4.293,1023,3.819,1024,5.261,1025,6.486,1026,5.261,1027,4.858,1028,5.261,1029,4.692,1030,5.261,1031,5.261,1032,5.261,1033,5.261,1034,3.819,1035,5.261,1036,6.486,1037,5.261,1038,5.261,1039,5.261,1040,5.261,1041,5.261,1042,2.977,1043,2.727,1044,2.977,1045,2.977,1046,4.562,1047,3.819,1048,3.311,1049,3.311,1050,3.819,1051,3.819,1052,3.819,1053,3.819,1054,3.819,1055,3.819,1056,3.819]],["title/injectables/JwtStrategy.html",[125,0.884,366,2.602]],["body/injectables/JwtStrategy.html",[0,0.123,3,0.163,4,0.163,5,0.146,7,0.251,10,0.72,12,0.45,13,0.015,17,0.624,21,0.393,28,0.163,31,2.613,32,2.113,35,0.897,50,3.076,52,1.094,54,0.01,55,0.01,60,1.446,65,1.094,69,0.626,75,2.373,80,1.052,109,2.382,122,2.888,125,1.19,126,1.578,132,2.094,138,2.372,148,2.536,161,1.76,168,1.449,172,2.55,175,1.81,188,2.002,219,2.239,242,3.003,246,2.55,248,2.751,259,5.035,263,3.06,264,3.003,274,2.488,276,2.076,280,2.239,281,1.76,282,1.727,286,2.08,289,1.578,291,1.578,295,1.231,297,3.003,300,2.113,301,3.383,303,2.751,304,3.076,325,2.985,341,4.667,342,2.113,366,3.503,371,2.751,380,4.589,393,3.34,395,2.842,396,2.554,436,1.902,447,4.589,465,3.003,482,2.382,485,2.904,559,4.589,561,4.126,643,3.744,1002,5.075,1044,3.003,1057,3.34,1058,5.293,1059,3.852,1060,5.293,1061,3.852,1062,3.852,1063,3.852,1064,3.852,1065,3.34,1066,3.852,1067,3.852,1068,3.852,1069,3.852,1070,5.293,1071,6.824,1072,3.852,1073,6.047,1074,3.852]],["title/classes/LoginDto.html",[0,0.125,164,2.043]],["body/classes/LoginDto.html",[0,0.219,2,1.002,3,0.149,4,0.149,5,0.134,7,0.23,8,0.954,10,0.677,12,0.423,13,0.015,14,1.039,15,1.21,17,0.587,21,0.349,22,2.371,23,2.002,25,2.363,26,1.221,27,1.083,28,0.279,29,1.872,35,0.843,41,0.857,54,0.009,55,0.009,139,3.642,142,2.05,148,2.539,151,3.588,164,2.587,168,2.65,174,4.096,177,2.731,181,3.438,183,2.711,184,2.998,185,1.935,186,2.731,188,2.998,189,2.05,193,1.657,196,1.935,204,1.935,209,1.833,213,1.935,218,2.05,228,1.833,233,2.05,254,1.935,261,2.169,262,1.272,271,2.05,289,1.445,291,1.445,293,2.039,295,1.59,328,2.731,452,2.457,453,1.833,454,1.833,455,2.181,505,2.181,535,2.05,571,2.181,1075,2.181,1076,4.539,1077,3.818,1078,3.294,1079,4.588,1080,3.058,1081,3.527,1082,3.058,1083,3.527,1084,4.91,1085,3.294,1086,5.053,1087,2.334,1088,2.334,1089,2.334,1090,2.05,1091,3.294,1092,3.294,1093,2.334,1094,2.334,1095,2.334,1096,2.334,1097,2.334,1098,2.334,1099,2.181]],["title/classes/MarkAsReadDto.html",[0,0.125,649,2.807]],["body/classes/MarkAsReadDto.html",[0,0.229,2,1.558,3,0.232,4,0.232,5,0.208,7,0.357,8,1.276,12,0.565,13,0.015,14,1.055,15,1.334,16,3.87,17,0.647,21,0.306,22,2.38,23,2.127,27,1.685,28,0.281,54,0.012,55,0.012,244,2.709,603,3.189,609,4.116,639,3.632,640,4.277,641,3.189,642,3.632,643,3.01,649,4.752,650,6.211,1100,5.487]],["title/controllers/NotificationController.html",[56,1.418,1101,2.807]],["body/controllers/NotificationController.html",[0,0.15,3,0.199,4,0.199,5,0.179,7,0.307,10,0.91,12,0.568,13,0.015,14,0.91,15,1.626,17,0.788,21,0.393,28,0.199,35,1.133,54,0.011,55,0.011,56,1.701,58,1.701,60,1.654,65,1.899,69,0.766,74,2.216,75,2.114,78,2.587,80,1.827,148,2.526,161,2.224,250,2.74,256,2.327,258,2.74,286,1.934,287,2.74,349,2.74,694,2.916,774,3.744,831,3.121,834,3.121,903,3.301,1101,4.323,1102,4.088,1103,3.121,1104,5.249,1105,5.249,1106,4.715,1107,4.715,1108,4.715,1109,4.715,1110,4.715,1111,4.088,1112,4.715,1113,4.715,1114,4.088,1115,4.007,1116,3.675,1117,3.675,1118,4.715,1119,4.715,1120,4.715,1121,4.715,1122,4.715,1123,4.715,1124,4.715,1125,4.715,1126,4.715]],["title/classes/NotificationGateway.html",[0,0.125,1127,2.157]],["body/classes/NotificationGateway.html",[0,0.075,2,0.665,3,0.099,4,0.099,5,0.089,7,0.152,8,0.703,10,0.958,12,0.612,13,0.015,14,1.058,15,0.569,17,0.857,21,0.328,28,0.099,35,1.193,41,0.891,54,0.007,55,0.007,60,1.397,65,1.972,69,0.38,72,1.216,80,1.609,122,0.959,132,1.923,136,2.426,138,2.31,148,1.701,161,2.341,168,0.88,193,2.124,245,1.447,249,2.972,252,3.378,263,2.124,274,3.583,276,1.438,280,2.13,281,1.847,282,1.643,286,0.748,287,1.36,295,1.444,296,1.671,300,2.011,301,1.905,304,1.36,341,2.426,342,1.284,369,1.447,392,3.178,394,4.206,395,2.124,396,2.006,404,1.671,405,3.263,410,2.267,422,2.857,425,2.011,426,2.011,436,1.155,474,3.385,486,1.824,578,1.57,581,1.549,582,1.549,643,2.479,780,1.216,841,1.671,983,2.13,993,5.681,1103,2.426,1127,2.011,1128,1.824,1129,3.918,1130,3.918,1131,3.918,1132,5.812,1133,3.918,1134,3.665,1135,3.665,1136,3.665,1137,3.665,1138,3.665,1139,3.665,1140,3.665,1141,3.665,1142,3.665,1143,3.665,1144,3.665,1145,2.34,1146,3.665,1147,3.178,1148,2.34,1149,3.918,1150,2.34,1151,3.652,1152,3.178,1153,2.34,1154,3.178,1155,2.34,1156,3.178,1157,2.34,1158,3.178,1159,6.178,1160,2.34,1161,4.434,1162,3.178,1163,2.34,1164,3.178,1165,2.34,1166,3.178,1167,2.34,1168,3.178,1169,2.34,1170,4.434,1171,3.178,1172,4.591,1173,2.34,1174,3.178,1175,2.34,1176,3.178,1177,2.34,1178,2.34,1179,3.178,1180,1.824,1181,1.671,1182,2.029,1183,2.029,1184,2.029,1185,1.824,1186,2.029,1187,2.029,1188,1.824,1189,2.029,1190,2.029,1191,2.029,1192,2.029,1193,1.824,1194,2.029,1195,2.029,1196,3.918,1197,2.029,1198,2.029,1199,1.824,1200,2.029,1201,3.918,1202,3.178,1203,2.029,1204,3.178,1205,2.029,1206,2.029,1207,3.178,1208,1.671,1209,2.029,1210,2.029,1211,1.824,1212,2.029,1213,2.029,1214,2.029,1215,2.029,1216,2.029,1217,2.029,1218,2.029,1219,2.029,1220,2.029,1221,2.029,1222,2.029,1223,2.029,1224,1.549,1225,2.029,1226,2.029,1227,2.029,1228,2.029,1229,2.029,1230,2.029,1231,2.029,1232,2.029,1233,2.029,1234,2.029,1235,2.029,1236,2.029]],["title/modules/NotificationModule.html",[82,1.161,97,2.157]],["body/modules/NotificationModule.html",[0,0.15,3,0.199,4,0.199,5,0.179,13,0.015,21,0.423,28,0.199,54,0.011,55,0.011,58,2.184,69,0.766,82,1.975,84,2.019,85,2.019,86,2.216,87,2.216,88,2.019,89,2.412,90,3.143,94,4.618,97,4.351,98,3.348,103,2.845,104,2.216,105,2.216,107,3.321,111,2.587,112,4.088,368,5.249,369,2.916,394,3.367,903,3.915,1101,4.775,1114,4.088,1127,4.22,1237,4.088,1238,4.088,1239,4.715,1240,4.088,1241,4.715,1242,4.715,1243,4.088,1244,4.715]],["title/injectables/NotificationService.html",[125,0.884,903,1.941]],["body/injectables/NotificationService.html",[0,0.123,3,0.163,4,0.163,5,0.146,7,0.251,10,0.929,12,0.599,13,0.015,14,1.046,17,0.805,21,0.363,28,0.163,35,1.157,54,0.01,55,0.01,60,1.448,65,1.85,69,0.627,80,1.78,122,2.171,125,1.192,126,1.581,138,3.017,161,2.271,175,3.062,188,2.005,244,1.905,274,2.491,276,2.079,281,1.283,282,1.73,286,1.693,395,2.491,396,2.556,405,2.844,436,1.905,639,4.52,641,2.243,642,2.554,643,4.096,715,2.387,743,3.346,744,2.756,745,3.346,774,3.277,903,2.616,1104,4.595,1105,4.595,1111,4.595,1127,3.964,1193,3.008,1243,3.346,1245,3.346,1246,5.299,1247,3.859,1248,5.299,1249,3.859,1250,5.299,1251,3.859,1252,5.299,1253,3.859,1254,3.859,1255,3.859,1256,5.921,1257,3.859,1258,3.859,1259,3.859,1260,3.859,1261,5.299,1262,3.859,1263,3.859,1264,3.346,1265,3.346,1266,3.346,1267,3.859,1268,3.859,1269,6.052,1270,3.859,1271,3.859]],["title/classes/OAuthCallbackDto.html",[0,0.125,1090,2.285]],["body/classes/OAuthCallbackDto.html",[0,0.22,2,1.025,3,0.153,4,0.153,5,0.137,7,0.235,8,0.97,10,0.688,12,0.306,13,0.015,14,1.034,15,0.877,17,0.425,21,0.353,22,2.382,23,2.022,25,2.392,26,1.249,27,1.108,28,0.282,29,1.902,35,0.857,41,0.877,54,0.009,55,0.009,139,3.394,142,2.097,148,2.479,151,3.601,164,1.875,168,2.38,174,3.678,177,3.656,181,3.79,183,2.744,184,3.035,185,1.979,186,2.774,188,3.035,189,2.939,193,1.695,196,2.774,204,1.979,209,1.875,213,1.979,218,2.097,228,1.875,233,2.097,254,1.979,261,2.196,262,1.301,271,2.097,289,1.478,291,1.478,293,2.072,295,1.616,328,2.774,452,2.496,453,1.875,454,1.875,455,2.231,505,2.231,535,2.939,571,2.231,1075,2.231,1076,4.572,1077,3.347,1078,2.388,1079,4.477,1084,4.933,1085,3.347,1086,5.072,1087,2.388,1088,2.388,1089,2.388,1090,2.939,1091,3.347,1092,3.347,1093,2.388,1094,2.388,1095,2.388,1096,2.388,1097,2.388,1098,2.388,1099,2.231,1272,3.607,1273,3.607]],["title/classes/OAuthLoginDto.html",[0,0.125,204,2.157]],["body/classes/OAuthLoginDto.html",[0,0.218,2,0.991,3,0.147,4,0.147,5,0.132,7,0.227,8,0.947,10,0.895,12,0.42,13,0.015,14,1.037,15,1.201,17,0.582,21,0.348,22,2.365,23,1.992,25,2.349,26,1.208,27,1.071,28,0.278,29,2.156,35,0.837,41,0.848,54,0.009,55,0.009,139,3.825,142,2.027,148,2.461,151,3.581,164,1.813,168,2.345,174,3.624,177,2.709,181,3.749,183,3.211,184,3.24,185,1.913,186,3.145,188,2.979,189,2.027,193,1.639,196,1.913,204,2.709,209,2.566,213,2.709,218,2.027,228,1.813,233,2.027,254,1.913,261,2.156,262,1.258,271,2.027,289,1.429,291,1.429,293,2.023,295,1.578,328,3.145,452,2.438,453,1.813,454,1.813,455,2.157,505,3.546,535,2.027,571,2.157,1075,2.157,1076,4.523,1077,3.269,1078,3.269,1079,4.439,1084,4.899,1085,3.269,1086,5.044,1087,3.269,1088,2.309,1089,3.269,1090,2.027,1091,3.269,1092,3.269,1093,2.309,1094,2.309,1095,2.309,1096,2.309,1097,2.309,1098,2.309,1099,2.157,1274,3.488,1275,3.488,1276,3.024,1277,3.488]],["title/modules/PrismaModule.html",[82,1.161,98,1.762]],["body/modules/PrismaModule.html",[0,0.174,3,0.23,4,0.23,5,0.207,13,0.015,21,0.369,28,0.23,54,0.012,55,0.012,69,0.885,77,5.744,82,2.109,84,2.332,85,2.332,86,2.56,87,2.56,88,2.332,89,2.576,90,3.356,98,3.513,103,3.114,104,2.56,105,2.56,396,3.171,1278,4.722,1279,4.722,1280,4.722,1281,5.446,1282,5.446]],["title/injectables/PrismaService.html",[125,0.884,396,1.542]],["body/injectables/PrismaService.html",[0,0.132,3,0.234,4,0.174,5,0.157,7,0.269,13,0.015,17,0.789,21,0.309,28,0.174,50,3.223,54,0.01,55,0.01,60,1.515,65,1.779,69,0.67,125,1.247,126,1.69,138,2.97,223,4.883,246,2.731,262,1.488,276,2.457,280,3.64,281,1.372,282,2.808,300,3.436,301,3.977,304,3.64,325,2.737,396,2.175,927,2.551,983,2.398,1002,4.323,1044,3.216,1103,2.731,1185,3.216,1208,2.946,1211,3.216,1283,3.577,1284,6.264,1285,6.698,1286,7.196,1287,7.196,1288,4.125,1289,4.125,1290,4.125,1291,4.125,1292,5.545,1293,3.577,1294,4.125,1295,5.545,1296,7.352,1297,4.125,1298,5.545,1299,6.565,1300,4.125,1301,6.264,1302,5.545,1303,4.125,1304,4.125,1305,4.125,1306,4.125,1307,3.577,1308,5.545,1309,4.125,1310,4.125,1311,4.125,1312,4.808,1313,4.125,1314,4.125]],["title/classes/RefreshTokenDto.html",[0,0.125,254,2.157]],["body/classes/RefreshTokenDto.html",[0,0.221,2,1.03,3,0.153,4,0.153,5,0.138,7,0.236,8,0.973,10,0.69,12,0.308,13,0.015,14,1.035,15,0.881,17,0.427,21,0.354,22,2.384,23,2.027,25,2.398,26,1.255,27,1.113,28,0.282,29,1.908,35,0.86,41,0.881,54,0.009,55,0.009,139,3.403,142,3.403,148,2.481,151,3.604,164,1.884,168,2.385,174,3.686,177,2.784,181,3.48,183,2.752,184,3.043,185,1.989,186,2.784,188,3.043,189,2.107,193,1.704,196,1.989,204,1.989,209,1.884,213,1.989,218,2.949,228,1.884,233,2.107,254,2.784,261,2.202,262,1.308,271,2.107,289,1.485,291,1.485,293,2.079,295,1.622,328,2.784,452,2.505,453,1.884,454,1.884,455,2.242,505,2.242,535,2.107,571,3.138,1075,2.242,1076,4.579,1077,3.359,1078,2.399,1079,4.482,1084,4.938,1085,3.359,1086,5.076,1087,2.399,1088,2.399,1089,2.399,1090,2.107,1091,3.359,1092,3.359,1093,2.399,1094,2.399,1095,2.399,1096,2.399,1097,2.399,1098,2.399,1099,3.138,1315,3.625,1316,3.625]],["title/classes/RegisterDto.html",[0,0.125,228,2.043]],["body/classes/RegisterDto.html",[0,0.211,2,0.897,3,0.134,4,0.134,5,0.12,7,0.206,8,0.882,10,0.928,12,0.561,13,0.015,14,1.041,15,1.607,17,0.779,21,0.332,22,2.314,23,1.904,25,2.222,26,1.094,27,0.97,28,0.268,29,2.04,35,1.009,41,1.118,54,0.009,55,0.009,139,3.152,142,1.836,148,2.559,151,3.52,164,1.642,168,2.565,174,3.964,177,2.523,181,3.269,183,2.549,184,3.291,185,1.733,186,2.523,188,2.819,189,1.836,193,1.485,196,1.733,204,1.733,209,1.642,213,1.733,218,1.836,228,2.39,233,2.673,254,1.733,261,2.381,262,1.139,271,1.836,289,2.222,291,2.222,293,2.594,295,2.023,328,2.523,452,2.27,453,1.642,454,1.642,455,1.954,505,1.954,535,1.836,571,1.954,1075,1.954,1076,4.374,1077,3.59,1078,4.374,1079,4.67,1080,2.739,1082,2.739,1084,4.793,1085,3.044,1086,4.957,1087,2.091,1088,2.091,1089,2.091,1090,1.836,1091,3.044,1092,3.044,1093,3.044,1094,2.091,1095,3.044,1096,2.091,1097,3.044,1098,2.091,1099,1.954,1276,2.739,1317,3.159,1318,3.159,1319,3.159,1320,3.159,1321,3.159,1322,3.159,1323,3.159,1324,5.958,1325,3.159,1326,3.159]],["title/classes/ReportQueryDto.html",[0,0.125,765,2.807]],["body/classes/ReportQueryDto.html",[0,0.211,2,1.306,3,0.194,4,0.194,5,0.174,7,0.299,8,1.142,10,1.041,12,0.65,13,0.015,14,1.041,15,1.76,17,0.853,19,2.799,21,0.256,22,2.111,23,2.313,26,1.592,27,1.412,28,0.252,29,1.729,41,1.835,54,0.011,55,0.011,722,3.584,723,3.584,724,3.584,725,3.584,747,3.283,748,3.283,749,3.986,750,3.986,751,3.986,759,5.729,760,5.15,761,4.643,762,4.643,763,4.643,764,4.643,765,4.253,766,5.164,767,5.729,768,5.729,769,5.729,770,5.729,1327,4.597,1328,5.956,1329,4.597,1330,4.597,1331,4.597,1332,4.597]],["title/controllers/RescueController.html",[56,1.418,1333,2.807]],["body/controllers/RescueController.html",[0,0.112,3,0.148,4,0.148,5,0.133,7,0.229,10,0.931,12,0.582,13,0.015,14,1.029,15,1.665,17,0.807,21,0.392,28,0.148,35,1.16,40,1.946,41,1.777,42,2.453,54,0.009,55,0.009,56,1.266,58,1.266,60,1.355,65,1.945,69,0.57,74,1.65,75,1.573,78,1.926,80,1.87,161,2.277,244,2.84,245,3.068,246,2.323,250,2.04,256,1.733,258,2.04,261,1.32,262,1.266,286,2.188,349,2.04,402,3.283,425,1.926,426,1.926,452,3.087,454,3.249,470,3.283,651,3.979,670,4.178,671,3.634,694,2.171,695,2.883,696,2.506,697,2.04,698,2.506,700,4.874,734,2.506,735,3.542,774,3.068,776,3.283,780,2.99,790,3.043,792,2.506,793,3.043,795,3.542,796,2.506,798,4.465,801,2.323,802,3.043,817,2.506,818,3.043,831,2.323,833,3.043,834,2.323,842,3.043,846,3.043,849,3.043,850,3.043,853,3.043,863,3.867,874,3.043,1333,3.542,1334,3.043,1335,4.988,1336,4.108,1337,3.043,1338,3.51,1339,3.51,1340,3.043,1341,3.51,1342,3.51,1343,3.51,1344,3.51,1345,2.506,1346,4.465,1347,3.51,1348,3.51,1349,3.558,1350,3.043,1351,3.043,1352,3.51,1353,3.51,1354,3.51,1355,3.51,1356,3.51,1357,3.043,1358,3.51,1359,3.51,1360,3.51,1361,3.043,1362,3.51,1363,3.51,1364,3.51]],["title/modules/RescueModule.html",[82,1.161,99,2.431]],["body/modules/RescueModule.html",[0,0.157,3,0.208,4,0.208,5,0.186,13,0.015,21,0.412,28,0.208,54,0.012,55,0.012,58,2.242,69,0.798,82,2.013,84,2.104,85,2.104,86,2.309,87,2.309,88,2.104,89,2.459,90,3.204,97,4.141,98,3.384,99,4.907,103,2.921,104,2.309,105,2.309,107,3.41,111,2.696,118,3.509,903,2.426,1333,4.868,1349,4.954,1350,4.261,1365,4.261,1366,4.261,1367,4.914,1368,4.261,1369,4.914,1370,4.914]],["title/injectables/RescueService.html",[125,0.884,1349,2.431]],["body/injectables/RescueService.html",[0,0.089,3,0.118,4,0.118,5,0.106,7,0.181,10,0.891,11,1.247,12,0.621,13,0.016,14,0.983,17,0.772,21,0.335,28,0.118,35,1.168,36,1.445,37,2.175,40,1.974,41,1.676,42,2.197,52,1.429,54,0.008,55,0.008,60,1.143,65,1.792,69,0.452,80,1.64,122,2.824,125,0.941,126,1.139,132,0.963,138,2.979,161,2.177,175,2.965,226,2.168,274,1.967,276,1.642,281,1.997,282,2.51,286,2.203,289,1.715,291,1.715,295,1.338,325,1.373,395,1.967,396,2.197,402,2.771,405,2.365,425,2.296,426,1.526,431,2.168,436,1.373,470,2.771,474,1.841,482,3.112,485,1.526,594,3.072,603,1.617,617,1.617,651,3.667,667,1.841,670,3.916,671,3.254,673,1.986,715,1.72,721,2.168,735,1.986,737,4.855,740,3.594,746,2.168,774,2.589,776,2.771,780,2.175,792,2.989,795,3.999,796,1.986,798,3.594,801,2.771,817,2.989,903,3.232,918,1.986,919,2.168,920,3.999,921,3.923,924,2.412,925,3.629,926,3.629,927,2.589,928,2.412,929,2.412,930,2.168,935,3.629,936,3.629,968,2.412,969,2.412,970,2.412,971,2.412,972,2.412,973,2.412,974,2.412,975,2.412,976,2.412,977,4.364,979,2.412,1307,2.412,1335,4.364,1336,2.989,1337,3.629,1340,2.412,1345,2.989,1346,3.594,1349,2.589,1351,2.412,1371,2.168,1372,2.781,1373,2.781,1374,2.781,1375,2.781,1376,2.781,1377,2.781,1378,2.781,1379,5.599,1380,2.781,1381,2.412,1382,4.186,1383,2.412,1384,2.781,1385,2.412,1386,2.781,1387,2.781,1388,2.781]],["title/interfaces/Response.html",[166,1.941,578,1.684]],["body/interfaces/Response.html",[0,0.159,3,0.21,4,0.21,5,0.189,7,0.324,8,1.2,12,0.582,13,0.015,14,0.932,21,0.382,28,0.265,41,1.666,54,0.012,55,0.012,69,0.807,79,4.908,80,1.357,125,1.407,132,1.721,133,3.549,150,3.873,166,3.383,281,2.082,405,3.485,578,2.128,579,3.073,983,2.888,1009,5.78,1022,4.143,1027,3.549,1029,4.879,1043,3.549,1151,3.549,1389,3.873,1390,5.942,1391,5.427,1392,5.427,1393,4.309,1394,3.549,1395,4.309,1396,4.309,1397,4.309,1398,4.309,1399,4.309,1400,4.309,1401,4.309,1402,4.309]],["title/guards/RolesGuard.html",[695,2.285,1403,3.064]],["body/guards/RolesGuard.html",[0,0.129,3,0.172,4,0.172,5,0.154,7,0.264,10,0.746,12,0.565,13,0.015,17,0.646,21,0.371,28,0.172,35,0.929,54,0.01,55,0.01,60,1.498,65,1.152,69,0.659,74,1.907,80,1.817,122,1.662,125,1.233,148,2.476,161,1.824,184,3.457,188,2.85,192,2.686,261,1.526,262,1.464,276,1.592,280,2.358,281,2.311,295,2.379,296,4.751,300,2.226,301,3.457,303,2.897,304,2.358,485,2.226,561,3.163,587,3.629,695,3.187,697,3.866,844,2.897,945,3.866,983,2.358,1005,4.754,1011,3.518,1016,5.768,1018,3.518,1019,6.209,1021,4.754,1022,4.403,1027,2.897,1042,3.163,1048,3.518,1049,3.518,1224,2.686,1404,3.518,1405,3.518,1406,4.057,1407,4.057,1408,4.274,1409,4.057,1410,5.483,1411,4.057,1412,7.446,1413,4.057,1414,6.652,1415,4.057,1416,4.057,1417,4.057,1418,4.057,1419,6.211,1420,4.057,1421,7.161,1422,4.057,1423,4.057,1424,4.057]],["title/controllers/SosController.html",[56,1.418,1425,2.807]],["body/controllers/SosController.html",[0,0.117,3,0.155,4,0.155,5,0.139,7,0.239,10,0.868,12,0.542,13,0.015,14,0.945,15,1.631,17,0.791,21,0.405,28,0.155,35,1.081,54,0.01,55,0.01,56,1.325,58,1.325,60,1.399,65,1.905,69,0.597,74,1.726,75,1.647,78,2.015,80,1.832,138,2.898,148,2.456,161,2.121,175,2.771,244,2.911,245,3.167,250,2.135,256,1.813,258,2.135,261,1.381,262,1.325,286,2.324,287,3.427,349,2.135,452,1.813,453,3.486,454,3.486,590,3.945,623,3.945,694,2.272,695,2.977,696,2.623,697,2.977,698,2.623,831,2.431,834,2.431,844,4.79,863,2.863,1115,3.903,1116,2.863,1117,2.863,1336,4.211,1345,2.623,1346,4.555,1357,3.185,1361,4.441,1425,3.657,1426,3.185,1427,3.185,1428,5.112,1429,5.531,1430,4.441,1431,4.441,1432,3.185,1433,3.673,1434,3.673,1435,4.441,1436,3.673,1437,3.673,1438,3.185,1439,3.673,1440,3.673,1441,3.673,1442,3.673,1443,3.673,1444,3.673,1445,3.673,1446,3.646,1447,3.185,1448,3.185,1449,3.673,1450,5.896,1451,3.673,1452,3.673,1453,3.673,1454,3.673,1455,3.673,1456,3.673,1457,3.673,1458,3.673,1459,3.673,1460,3.673,1461,3.673,1462,3.673,1463,3.673,1464,3.673,1465,3.673]],["title/modules/SosModule.html",[82,1.161,100,2.431]],["body/modules/SosModule.html",[0,0.16,3,0.212,4,0.212,5,0.19,13,0.015,21,0.414,28,0.212,54,0.012,55,0.012,58,2.268,69,0.813,82,2.03,84,2.142,85,2.142,86,2.351,87,2.351,88,2.142,89,2.48,90,3.23,97,4.16,98,3.399,100,4.92,103,2.954,104,2.351,105,2.351,107,3.449,111,2.745,118,3.573,1425,4.909,1446,4.944,1447,4.338,1466,4.338,1467,4.338,1468,4.338,1469,5.003,1470,5.003,1471,5.003]],["title/injectables/SosService.html",[125,0.884,1446,2.431]],["body/injectables/SosService.html",[0,0.074,3,0.098,4,0.098,5,0.088,7,0.151,9,3.144,10,0.752,11,2.012,12,0.579,13,0.015,14,0.977,17,0.691,21,0.327,28,0.098,31,1.143,35,0.936,40,1.761,42,1.761,52,1.935,54,0.007,55,0.007,60,0.993,65,1.569,69,0.376,80,1.602,122,3.039,125,0.817,126,0.949,132,2.03,138,2.819,148,1.209,151,1.708,161,1.837,166,1.143,175,2.597,244,2.215,261,0.871,262,0.835,274,2.109,276,1.426,281,2.266,282,3.054,286,1.96,287,1.346,295,0.74,325,2.727,395,2.109,396,1.995,405,1.708,436,1.143,448,4.187,452,1.143,453,1.203,454,1.203,482,1.432,485,3.031,590,3.144,592,3.963,593,3.631,594,1.994,617,1.346,623,3.144,641,2.608,642,2.971,643,3.853,715,1.432,730,1.805,739,3.152,740,4.945,741,4.307,742,4.79,780,2.642,867,4.756,903,3.027,918,1.653,919,1.805,927,2.248,930,4.571,942,2.008,945,3.564,946,3.891,956,3.891,958,3.891,1127,3.364,1224,2.406,1336,2.596,1345,2.596,1346,3.205,1383,5.084,1385,3.891,1428,3.891,1429,4.409,1430,3.152,1431,3.152,1432,2.008,1435,3.152,1438,3.152,1446,2.248,1448,2.008,1472,2.008,1473,2.315,1474,2.315,1475,2.315,1476,2.315,1477,3.635,1478,2.315,1479,2.315,1480,2.315,1481,2.315,1482,2.315,1483,2.315,1484,2.315,1485,2.315,1486,2.315,1487,5.084,1488,5.084,1489,4.488,1490,3.635,1491,2.315,1492,2.315,1493,2.315,1494,3.635,1495,3.635,1496,2.315,1497,2.315,1498,2.315,1499,2.315,1500,2.008,1501,2.315,1502,2.315,1503,3.635,1504,2.315,1505,2.315,1506,2.315,1507,5.863,1508,2.315,1509,2.315,1510,3.635,1511,2.315,1512,2.315,1513,2.315,1514,2.315,1515,2.315,1516,5.863,1517,3.635,1518,3.635,1519,3.152,1520,2.315,1521,2.315]],["title/modules/SupabaseModule.html",[82,1.161,101,2.602]],["body/modules/SupabaseModule.html",[0,0.175,3,0.231,4,0.231,5,0.208,13,0.015,21,0.37,28,0.231,54,0.012,55,0.012,69,0.889,82,2.113,84,2.344,85,2.344,86,2.572,87,2.572,88,2.344,89,2.581,90,3.363,101,5.192,103,3.123,104,2.572,105,2.572,1522,4.746,1523,4.746,1524,4.746,1525,5.353,1526,5.473,1527,5.473]],["title/injectables/SupabaseService.html",[125,0.884,1525,2.602]],["body/injectables/SupabaseService.html",[0,0.153,3,0.202,4,0.202,5,0.182,7,0.312,8,1.172,12,0.407,13,0.015,17,0.72,21,0.375,28,0.202,54,0.011,55,0.011,69,0.777,72,3.5,124,3.731,125,1.374,126,1.961,132,1.657,172,3.168,198,5.3,209,2.487,223,3.731,239,5.235,276,2.642,281,2.033,325,2.363,428,5.839,433,4.15,434,3.731,435,3.731,440,5.839,441,3.731,463,4.15,477,4.15,526,4.15,575,4.15,1161,6.152,1208,3.418,1525,4.046,1528,4.15,1529,6.112,1530,6.734,1531,4.786,1532,7.331,1533,4.786,1534,4.786,1535,7.095,1536,4.786,1537,6.112,1538,4.786,1539,4.786,1540,4.786,1541,4.786,1542,4.786,1543,4.15]],["title/interfaces/SupabaseUser.html",[338,2.285,578,1.684]],["body/interfaces/SupabaseUser.html",[3,0.2,4,0.2,5,0.179,7,0.308,8,1.162,10,0.825,12,0.666,13,0.015,14,1.116,28,0.283,35,0.801,41,1.627,54,0.011,55,0.011,66,4.674,89,1.704,168,2.81,183,2.221,191,3.127,263,2.221,286,2.256,293,1.936,295,2.333,313,3.127,315,3.127,317,3.127,338,3.523,342,2.592,437,2.922,540,5.043,578,2.866,579,2.922,580,3.374,581,3.127,582,3.127,583,5.504,584,3.683,585,3.683,586,3.683,587,3.127,588,3.683,589,5.504]],["title/interfaces/TokenPayload.html",[263,1.848,578,1.684]],["body/interfaces/TokenPayload.html",[0,0.099,3,0.132,4,0.132,5,0.118,7,0.203,8,0.872,10,0.805,12,0.558,13,0.015,14,1.063,21,0.366,28,0.132,41,1.598,54,0.008,55,0.008,60,1.242,69,0.505,72,1.616,80,1.795,122,1.274,132,1.861,136,3.01,138,1.784,148,1.967,168,2.224,193,2.137,245,1.923,249,2.643,252,2.949,263,2.779,274,3.391,276,1.22,280,2.643,281,2.093,282,2.038,286,1.89,287,1.808,295,2.011,296,2.221,300,2.495,301,2.363,304,1.808,341,3.01,342,3.245,369,1.923,394,3.839,395,1.462,396,1.784,404,2.221,405,3.089,410,1.923,422,2.424,436,1.535,474,3.558,486,2.424,578,1.947,579,1.923,581,3.914,582,3.914,643,1.706,780,1.616,841,2.221,983,1.808,1103,3.01,1127,1.706,1128,2.424,1129,3.943,1130,3.943,1131,3.943,1132,5.128,1133,2.697,1147,2.697,1149,3.943,1151,3.247,1152,2.697,1154,2.697,1156,2.697,1158,2.697,1159,5.699,1162,2.697,1164,2.697,1166,2.697,1168,2.697,1170,2.697,1171,2.697,1172,3.545,1174,2.697,1176,2.697,1179,3.943,1180,2.424,1181,2.221,1182,2.697,1183,2.697,1184,2.697,1185,2.424,1186,2.697,1187,2.697,1188,2.424,1189,2.697,1190,2.697,1191,2.697,1192,2.697,1193,2.424,1194,2.697,1195,2.697,1196,4.661,1197,2.697,1198,2.697,1199,2.424,1200,2.697,1201,4.661,1202,3.943,1203,2.697,1204,3.943,1205,2.697,1206,2.697,1207,3.943,1208,2.221,1209,2.697,1210,2.697,1211,2.424,1212,2.697,1213,2.697,1214,2.697,1215,2.697,1216,2.697,1217,2.697,1218,2.697,1219,2.697,1220,2.697,1221,2.697,1222,2.697,1223,2.697,1224,2.059,1225,2.697,1226,2.697,1227,2.697,1228,2.697,1229,2.697,1230,2.697,1231,2.697,1232,2.697,1233,2.697,1234,2.697,1235,2.697,1236,2.697]],["title/interfaces/TokenPayload-1.html",[263,1.543,578,1.406,1544,2.846]],["body/interfaces/TokenPayload-1.html",[3,0.204,4,0.204,5,0.183,7,0.314,8,1.177,10,0.968,12,0.624,13,0.015,14,1.115,28,0.286,35,0.816,41,1.855,54,0.011,55,0.011,89,1.738,168,2.824,183,2.264,191,3.189,263,2.885,286,1.539,293,1.974,295,2.347,313,3.189,315,3.189,317,3.189,338,2.8,342,3.902,437,2.979,540,3.44,578,2.893,579,2.979,580,3.44,581,4.708,582,4.708,583,3.755,584,3.755,585,3.755,586,3.755,587,3.189,588,3.755,589,3.755]],["title/injectables/TransformInterceptor.html",[125,0.884,1394,2.807]],["body/injectables/TransformInterceptor.html",[0,0.159,3,0.211,4,0.211,5,0.189,7,0.324,10,0.677,12,0.423,13,0.015,14,0.677,17,0.587,21,0.382,28,0.265,35,0.844,41,1.211,54,0.012,55,0.012,60,1.712,65,1.414,69,0.809,79,4.149,80,1.36,125,1.409,126,2.04,132,1.724,133,3.556,150,3.882,161,1.656,166,3.094,281,2.085,405,2.946,578,2.133,983,2.895,1009,4.886,1022,4.765,1027,4.476,1029,5.347,1043,3.556,1151,3.556,1389,3.882,1390,4.318,1391,5.435,1392,6.242,1393,4.318,1394,4.476,1395,5.948,1396,5.948,1397,4.318,1398,4.318,1399,4.318,1400,4.318,1401,4.318,1402,4.318,1545,4.98,1546,4.98]],["title/classes/UpdateEmergencyStatusDto.html",[0,0.125,623,2.431]],["body/classes/UpdateEmergencyStatusDto.html",[0,0.211,2,1.306,3,0.194,4,0.194,5,0.174,7,0.299,8,1.142,10,0.81,11,2.962,12,0.561,13,0.015,14,0.951,15,1.448,17,0.702,19,2.161,21,0.256,22,2.233,23,2.37,24,3.433,26,1.592,27,1.412,28,0.306,29,2.484,40,1.803,41,1.448,42,1.803,52,1.876,54,0.011,55,0.011,151,2.161,590,2.843,591,3.283,592,3.584,593,3.283,594,2.522,596,4.643,597,3.986,603,2.672,606,4.643,607,3.986,609,3.683,610,4.643,611,4.643,612,4.643,613,4.643,614,4.643,615,4.643,616,4.643,617,3.84,618,4.253,619,4.643,620,4.643,621,4.253,622,4.643,623,3.683,624,5.164,1547,4.597,1548,4.597]],["title/classes/UpdateHospitalCapacityDto.html",[0,0.125,53,2.157]],["body/classes/UpdateHospitalCapacityDto.html",[0,0.224,1,2.306,2,1.194,3,0.178,4,0.178,5,0.16,6,2.6,7,0.274,8,1.077,9,2.6,10,0.764,11,3.025,12,0.598,13,0.015,14,1.053,15,1.71,16,2.918,17,0.829,19,1.976,21,0.234,22,2.429,23,2.454,24,4.116,25,2.3,26,1.456,27,1.291,28,0.297,29,1.581,30,3.717,31,2.772,32,3.081,33,3.081,34,3.081,35,0.712,36,2.185,37,2.185,38,2.306,39,2.443,40,1.649,41,1.917,42,1.649,43,2.306,44,2.306,45,4.819,46,4.819,47,4.819,48,4.819,49,2.306,50,2.443,51,3.002,52,1.194,53,3.081,54,0.01,55,0.01,1549,4.204,1550,4.204,1551,4.204,1552,4.204,1553,4.204]],["title/classes/UpdateHospitalDto.html",[0,0.125,49,2.157]],["body/classes/UpdateHospitalDto.html",[0,0.207,1,1.849,2,0.957,3,0.143,4,0.143,5,0.128,6,2.085,7,0.22,8,0.924,9,2.085,10,1.038,11,2.161,12,0.648,13,0.015,14,1.056,15,1.856,16,2.505,17,0.9,19,1.584,21,0.188,22,2.439,23,2.348,24,3.937,25,1.975,26,1.167,27,1.035,28,0.275,29,1.268,30,3.724,31,2.379,32,2.644,33,2.644,34,4.239,35,0.953,36,2.924,37,2.924,38,3.087,39,3.27,40,2.207,41,1.878,42,2.207,43,3.087,44,3.087,45,4.384,46,4.384,47,4.384,48,4.384,49,2.644,50,2.801,51,2.407,52,1.598,53,1.849,54,0.009,55,0.009,599,4.064,629,2.407,1554,3.371,1555,3.371,1556,7.576,1557,3.371,1558,3.371,1559,3.371,1560,3.371,1561,3.371,1562,3.371,1563,3.371,1564,3.371,1565,3.371,1566,3.371,1567,3.371,1568,3.371,1569,3.371]],["title/classes/UpdateProfileDto.html",[0,0.125,1570,2.431]],["body/classes/UpdateProfileDto.html",[0,0.21,2,1.29,3,0.192,4,0.192,5,0.172,7,0.296,8,1.133,10,1.038,12,0.613,13,0.015,14,1.103,15,1.691,17,0.82,19,3.087,21,0.329,22,2.223,23,2.304,25,1.86,26,1.572,27,1.395,28,0.25,35,0.769,52,1.29,54,0.011,55,0.011,66,3.005,168,1.707,261,2.222,262,1.638,286,1.451,289,2.849,291,2.849,293,2.954,295,1.451,438,4.605,550,3.539,594,3.816,604,3.539,609,3.654,744,3.242,954,3.539,1570,3.654,1571,3.539,1572,4.54,1573,4.54,1574,4.54,1575,4.54,1576,3.937,1577,3.937,1578,3.937,1579,3.937,1580,3.937,1581,3.937,1582,2.808,1583,5.123,1584,3.937]],["title/classes/UpdateRescueTeamDto.html",[0,0.125,670,2.285]],["body/classes/UpdateRescueTeamDto.html",[0,0.203,2,1.038,3,0.155,4,0.155,5,0.139,7,0.238,8,0.979,10,1.079,11,1.638,12,0.635,13,0.015,14,1.095,15,1.817,16,2.652,17,0.881,19,3.26,21,0.204,22,2.47,23,2.518,24,3.48,25,2.409,26,1.266,27,1.123,28,0.269,29,1.374,33,2.8,35,1.079,36,3.308,37,3.308,38,3.492,39,3.699,40,2.497,41,1.686,42,2.497,43,3.492,44,3.492,52,1.038,54,0.01,55,0.01,599,3.378,629,2.61,651,2.124,652,2.419,653,4.962,663,3.169,665,4.584,666,3.645,667,3.378,668,3.645,669,3.645,670,2.966,671,2.124,672,2.849,673,2.61,1585,3.655,1586,3.655,1587,3.655,1588,3.655,1589,3.655,1590,3.655,1591,3.655,1592,3.655,1593,3.655,1594,3.655]],["title/classes/UpdateRescueTeamStatusDto.html",[0,0.125,671,2.285]],["body/classes/UpdateRescueTeamStatusDto.html",[0,0.216,2,1.21,3,0.18,4,0.18,5,0.162,7,0.277,8,1.086,10,0.923,11,2.854,12,0.541,13,0.015,14,1.096,15,1.548,16,2.945,17,0.75,19,2.002,21,0.238,22,2.524,23,2.562,24,3.671,25,2.608,26,1.475,27,1.309,28,0.287,29,1.602,33,3.108,35,0.96,36,2.945,37,2.945,38,3.108,39,3.293,40,2.223,41,1.65,42,2.223,43,3.108,44,3.108,52,1.808,54,0.011,55,0.011,651,2.476,652,2.82,653,4.417,665,4.962,666,4.546,667,3.75,668,4.046,669,4.046,670,2.476,671,3.293,672,4.417,673,4.546,1595,4.26,1596,4.26,1597,4.26,1598,4.26]],["title/controllers/UserController.html",[56,1.418,1599,2.807]],["body/controllers/UserController.html",[0,0.151,3,0.201,4,0.201,5,0.18,7,0.309,10,0.827,12,0.516,13,0.015,15,1.478,17,0.717,21,0.408,28,0.201,35,1.03,54,0.011,55,0.011,56,1.712,58,1.712,60,1.661,65,1.726,69,0.771,74,2.23,75,2.127,78,2.603,80,1.661,137,5.271,138,2.934,148,2.352,161,2.022,244,3.001,250,2.758,256,2.342,258,2.758,349,2.758,350,4.114,410,4.374,694,2.935,831,3.141,927,2.935,1115,4.023,1116,3.699,1117,3.699,1570,4.763,1582,2.935,1599,4.341,1600,4.114,1601,5.815,1602,4.745,1603,4.745,1604,4.745,1605,4.745,1606,4.745,1607,4.745,1608,4.148,1609,4.114,1610,4.114,1611,4.745,1612,4.745,1613,4.745,1614,4.745,1615,4.745]],["title/modules/UserModule.html",[82,1.161,102,2.431]],["body/modules/UserModule.html",[0,0.164,3,0.218,4,0.218,5,0.196,13,0.015,21,0.406,28,0.218,54,0.012,55,0.012,58,2.31,69,0.837,82,2.058,84,2.207,85,2.207,86,2.422,87,2.422,88,2.207,89,2.513,90,3.275,98,3.425,102,4.881,103,3.01,104,2.422,105,2.422,107,3.514,111,2.828,1599,4.976,1608,4.964,1609,4.469,1616,4.469,1617,4.469,1618,5.154,1619,4.469,1620,5.154,1621,5.154]],["title/classes/UserProfileResponseDto.html",[0,0.125,1582,2.431]],["body/classes/UserProfileResponseDto.html",[0,0.201,2,1.187,3,0.177,4,0.177,5,0.159,7,0.272,8,1.073,10,1.02,12,0.662,13,0.015,14,1.103,17,0.918,21,0.312,22,2.152,23,2.243,25,1.712,26,1.447,27,1.284,28,0.237,35,0.708,52,1.791,54,0.01,55,0.01,168,2.371,261,2.371,262,1.508,286,2.015,289,2.758,291,2.758,293,2.875,295,2.015,438,4.915,550,4.915,594,3.694,609,3.46,744,4.503,954,4.915,1570,2.585,1571,3.258,1576,3.624,1577,3.624,1578,3.624,1579,3.624,1580,3.624,1581,3.624,1582,3.46,1583,5.838,1584,5.467,1622,4.18,1623,4.18,1624,4.18,1625,4.18,1626,4.18,1627,4.18,1628,4.18,1629,4.18,1630,4.18,1631,4.18,1632,4.18,1633,4.18]],["title/injectables/UserService.html",[125,0.884,1608,2.431]],["body/injectables/UserService.html",[0,0.127,3,0.168,4,0.168,5,0.151,7,0.259,10,0.898,12,0.561,13,0.015,14,1.022,17,0.778,21,0.343,28,0.168,35,1.118,54,0.01,55,0.01,60,1.478,65,1.746,69,0.646,74,1.869,80,1.679,125,1.216,126,1.629,132,2.129,138,2.948,148,2.499,152,3.448,161,2.194,168,2.034,276,1.56,281,2.194,282,2.958,286,2.275,289,1.629,290,3.448,291,1.629,292,3.448,293,1.629,294,3.448,325,3.035,395,2.542,396,2.588,405,1.869,410,4.403,436,1.963,465,4.792,485,3.373,715,2.46,776,3.581,780,2.067,801,3.581,918,2.84,1570,4.504,1582,2.46,1601,5.33,1608,3.345,1610,3.448,1634,3.448,1635,5.409,1636,3.977,1637,5.409,1638,3.977,1639,3.977,1640,3.977,1641,3.977,1642,6.147,1643,5.409,1644,3.977,1645,3.977,1646,3.977,1647,3.977]],["title/coverage.html",[1648,4.653]],["body/coverage.html",[0,0.251,1,1.728,5,0.12,6,3.68,12,0.46,13,0.015,34,1.728,49,1.728,53,1.728,54,0.009,55,0.009,56,2.519,57,2.249,59,2.731,70,1.948,72,1.637,88,1.349,125,1.683,127,2.731,132,1.091,134,2.249,135,2.731,164,1.637,166,1.555,204,1.728,228,1.637,252,1.728,254,1.728,256,1.555,263,2.157,338,1.831,366,2.085,385,2.731,396,1.236,437,1.948,578,2.708,580,3.867,590,1.948,591,3.278,623,1.948,639,2.085,640,3.578,649,2.249,651,1.831,652,3.584,670,1.831,671,1.831,674,2.249,675,2.731,692,1.948,695,1.831,697,1.831,714,2.731,747,2.249,748,3.278,765,2.249,771,2.249,772,2.731,835,1.948,902,3.578,903,1.555,920,3.278,980,2.455,981,2.731,982,2.731,1013,2.731,1014,2.731,1045,2.455,1057,2.731,1075,3.911,1090,1.831,1101,2.249,1102,2.731,1115,2.085,1127,1.728,1128,3.578,1224,5.403,1245,2.731,1283,2.731,1312,2.731,1333,2.249,1334,2.731,1349,1.948,1371,3.578,1389,3.578,1394,2.249,1403,2.455,1405,2.731,1408,2.455,1425,2.249,1426,2.731,1446,1.948,1472,2.731,1525,2.085,1528,2.731,1570,1.948,1571,3.578,1582,1.948,1599,2.249,1600,2.731,1608,1.948,1634,2.731,1648,2.731,1649,2.731,1650,3.15,1651,3.15,1652,6.984,1653,5.415,1654,3.15,1655,3.15,1656,5.95,1657,3.15,1658,2.731,1659,2.731,1660,6.324,1661,4.59,1662,4.59,1663,3.98,1664,6.602,1665,3.98,1666,4.59,1667,4.59,1668,4.59,1669,3.15,1670,3.15,1671,3.15,1672,5.415,1673,6.324,1674,5.95,1675,6.815,1676,5.415,1677,3.15,1678,4.59,1679,4.59,1680,4.59,1681,2.731,1682,3.15,1683,3.15,1684,4.59,1685,3.15]],["title/dependencies.html",[85,2.025,1686,2.846]],["body/dependencies.html",[0,0.206,13,0.015,27,1.598,54,0.012,55,0.012,69,0.845,85,2.228,109,3.218,219,3.024,251,5.454,262,1.877,271,3.024,369,3.218,371,3.715,434,4.056,435,4.056,439,4.511,441,4.056,641,3.024,1042,4.056,1043,3.715,1065,5.585,1180,4.056,1181,4.6,1687,6.997,1688,5.203,1689,5.203,1690,5.203,1691,6.442,1692,6.442,1693,5.203,1694,5.203,1695,5.203,1696,5.203,1697,5.203,1698,5.203,1699,5.203,1700,5.203,1701,5.203,1702,5.203,1703,5.203,1704,5.203,1705,5.203,1706,5.203,1707,6.442,1708,5.203,1709,5.203,1710,5.203,1711,5.203]],["title/miscellaneous/enumerations.html",[1712,1.801,1713,4.1]],["body/miscellaneous/enumerations.html",[6,2.941,7,0.31,13,0.015,30,4.029,31,3.005,32,3.34,33,3.883,54,0.011,55,0.011,426,4.493,591,3.396,596,4.745,606,4.745,610,4.745,611,4.745,612,4.745,613,4.745,614,4.745,615,4.745,616,4.745,617,3.538,618,4.347,619,4.745,620,4.745,621,4.347,622,4.745,652,3.148,666,4.347,667,4.029,668,4.347,669,4.347,748,3.396,760,4.745,761,4.745,762,4.745,763,4.745,764,4.745,1712,2.609,1713,4.123,1714,6.714,1715,4.755,1716,4.755,1717,4.755]],["title/miscellaneous/functions.html",[1712,1.801,1718,4.1]],["body/miscellaneous/functions.html",[7,0.407,13,0.013,54,0.013,55,0.013,88,3.239,1681,5.416,1712,3.427,1718,5.416,1719,6.246]],["title/index.html",[7,0.214,1720,2.846,1721,2.846]],["body/index.html",[13,0.015,52,1.578,54,0.009,55,0.009,76,4.817,82,1.401,89,1.189,124,2.569,132,1.642,136,2.181,148,2.298,160,4.438,166,3.178,177,1.808,181,3.334,183,2.611,185,2.602,186,2.602,192,2.181,193,1.549,196,1.808,209,1.713,212,2.857,213,2.602,219,1.915,239,4.339,295,1.053,328,2.602,395,2.611,404,3.387,492,2.857,535,1.915,593,3.387,603,1.915,676,4.817,682,2.569,726,3.387,734,4.934,735,4.598,738,4.737,741,2.569,780,2.465,867,5.067,927,2.933,938,2.857,945,3.229,1007,2.857,1079,2.038,1099,2.038,1103,4.022,1172,2.569,1181,3.967,1188,2.569,1199,2.569,1256,2.857,1264,5.814,1265,5.814,1266,4.817,1293,2.857,1299,5.583,1381,4.817,1404,2.857,1427,2.857,1500,2.857,1519,2.857,1543,2.857,1649,2.857,1720,2.857,1721,2.857,1722,4.817,1723,5.269,1724,4.817,1725,4.112,1726,4.742,1727,3.295,1728,3.295,1729,3.295,1730,4.742,1731,3.295,1732,3.295,1733,3.295,1734,3.295,1735,3.295,1736,3.295,1737,6.076,1738,3.295,1739,4.742,1740,3.295,1741,3.295,1742,4.742,1743,4.742,1744,4.742,1745,3.295,1746,3.295,1747,3.295,1748,3.295,1749,3.295,1750,3.295,1751,3.295,1752,3.295,1753,3.295,1754,3.295,1755,3.295,1756,3.295,1757,3.295,1758,3.295,1759,5.555,1760,3.295,1761,3.295,1762,3.295,1763,3.295,1764,3.295,1765,4.742,1766,3.295,1767,3.295,1768,3.295,1769,3.295,1770,3.295,1771,2.569,1772,4.742,1773,3.295,1774,3.295,1775,3.295,1776,3.295,1777,3.295,1778,3.295,1779,3.295,1780,4.742,1781,3.295,1782,3.295,1783,6.909,1784,4.742,1785,3.295,1786,3.295,1787,3.295,1788,3.295,1789,3.295,1790,3.295,1791,3.295,1792,3.295,1793,3.295,1794,3.295,1795,3.295,1796,3.295,1797,3.295,1798,4.742,1799,3.295,1800,3.295,1801,3.295,1802,5.555,1803,3.295,1804,3.295,1805,3.295,1806,3.295,1807,3.295,1808,3.295,1809,3.295,1810,3.295,1811,3.295,1812,3.295,1813,3.295,1814,3.295,1815,4.742,1816,3.295,1817,3.295,1818,3.295,1819,3.295,1820,3.295,1821,3.295,1822,3.295,1823,3.295,1824,3.295,1825,3.295,1826,3.295,1827,3.295,1828,3.295,1829,2.857,1830,3.295,1831,3.295,1832,3.295]],["title/modules.html",[84,2.298]],["body/modules.html",[13,0.013,54,0.013,55,0.013,83,3.978,84,2.385,94,3.445,95,3.687,96,3.445,97,3.056,98,2.497,99,3.445,100,3.445,101,3.687,102,3.445,1833,8.038,1834,8.038,1835,8.038,1836,8.038]],["title/overview.html",[1837,4.653]],["body/overview.html",[2,0.98,13,0.015,54,0.009,55,0.009,58,1.244,70,3.524,82,1.019,83,5.664,84,1.477,85,1.477,86,1.621,87,1.621,88,1.477,89,1.244,90,1.621,91,2.991,92,2.991,93,2.991,94,4.738,95,5.034,96,4.619,97,4.203,98,3.41,99,4.619,100,4.619,101,4.506,102,4.503,103,2.303,104,1.621,105,1.621,126,1.413,252,3.842,362,2.991,364,2.991,365,2.991,366,4.635,396,2.747,470,2.283,579,2.133,692,3.524,709,2.991,710,2.991,835,4.331,896,2.991,897,2.991,899,2.991,903,3.457,1127,3.404,1237,2.991,1238,2.991,1240,2.991,1278,2.991,1279,2.991,1280,2.991,1349,4.331,1365,2.991,1366,2.991,1368,2.991,1403,2.689,1446,4.331,1466,2.991,1467,2.991,1468,2.991,1522,2.991,1523,2.991,1524,2.991,1525,4.635,1544,2.991,1608,4.331,1616,2.991,1617,2.991,1619,2.991,1837,2.991,1838,3.45,1839,3.45,1840,3.45,1841,3.45]],["title/properties.html",[8,0.907,1686,2.846]],["body/properties.html",[8,1.168,13,0.015,54,0.013,55,0.013,151,2.863,166,3.007,867,4.032,1722,5.282,1723,5.282,1724,5.282,1725,5.282,1829,5.282,1842,6.092,1843,6.092,1844,6.092,1845,6.092]],["title/miscellaneous/typealiases.html",[1712,1.801,1846,4.729]],["body/miscellaneous/typealiases.html",[7,0.396,12,0.516,13,0.014,54,0.013,55,0.013,425,3.879,902,4.735,920,5.499,921,5.511,1371,4.735,1712,3.333,1847,6.075,1848,6.075,1849,6.075]],["title/miscellaneous/variables.html",[1712,1.801,1771,3.686]],["body/miscellaneous/variables.html",[7,0.331,12,0.539,13,0.015,14,0.864,54,0.012,55,0.012,72,3.598,80,1.734,122,2.082,148,1.691,160,3.365,175,2.389,184,2.642,261,1.911,281,1.691,405,2.389,425,4.095,426,4.095,697,4.425,844,3.63,945,3.69,948,3.962,995,4.408,1022,3.365,1045,4.949,1046,4.408,1115,4.203,1408,4.949,1658,4.408,1659,5.505,1663,4.408,1665,4.408,1712,2.789,1771,3.962,1850,5.083,1851,6.349,1852,6.349,1853,5.083,1854,5.083,1855,5.083,1856,5.083,1857,6.924,1858,5.083,1859,5.083,1860,5.083,1861,5.083,1862,5.083,1863,5.083]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"modules/RescueModule.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"modules/SosModule.html":{},"injectables/SosService.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1224,"title":{},"body":{"classes/NotificationGateway.html":{},"guards/RolesGuard.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1544,"title":{"interfaces/TokenPayload-1.html":{}},"body":{"overview.html":{}}}],["1.0.0",{"_index":1843,"title":{},"body":{"properties.html":{}}}],["1/1",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HospitalService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"overview.html":{}}}],["10.0.0",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["10.4.17",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["11.1.5",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["1234567890",{"_index":1097,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["13",{"_index":1839,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["16.5.0",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["1669",{"_index":1724,"title":{},"body":{"index.html":{},"properties.html":{}}}],["2.0",{"_index":1742,"title":{},"body":{"index.html":{}}}],["2.49.4",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["201",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["22",{"_index":1840,"title":{},"body":{"overview.html":{}}}],["3.3.0",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["30d",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["33",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["4.0.1",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["4.21.0",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["401",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["5",{"_index":1841,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["604800",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["6371",{"_index":969,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["7.8.2",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["7d",{"_index":384,"title":{},"body":{"modules/AuthModule.html":{}}}],["8",{"_index":1838,"title":{},"body":{"overview.html":{}}}],["accepted",{"_index":952,"title":{},"body":{"injectables/HospitalService.html":{}}}],["acceptemergency",{"_index":773,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["acceptemergency(hospitalid",{"_index":784,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["acceptemergencydto",{"_index":1,"title":{"classes/AcceptEmergencyDto.html":{}},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"coverage.html":{}}}],["acceptemergencydto.emergencyid",{"_index":943,"title":{},"body":{"injectables/HospitalService.html":{}}}],["acceptemergencydto.notes",{"_index":953,"title":{},"body":{"injectables/HospitalService.html":{}}}],["access",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{},"index.html":{}}}],["access_token",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{}}}],["access_type",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["accident",{"_index":613,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["account",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["acos",{"_index":970,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["active",{"_index":31,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"injectables/AuthService.html":{},"classes/CreateHospitalDto.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"injectables/SosService.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"miscellaneous/enumerations.html":{}}}],["activeemergencies",{"_index":723,"title":{},"body":{"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["activeteams",{"_index":725,"title":{},"body":{"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["actual",{"_index":1187,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["additional",{"_index":1037,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["address",{"_index":36,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"injectables/HospitalService.html":{},"injectables/RescueService.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["admin",{"_index":1784,"title":{},"body":{"index.html":{}}}],["afterinit",{"_index":1134,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["afterinit(server",{"_index":1152,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["alias",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1847,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allergies",{"_index":1577,"title":{},"body":{"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["allow",{"_index":1051,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["allowed",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["allowedroles",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["allowedroles.includes(role",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["allowing",{"_index":1417,"title":{},"body":{"guards/RolesGuard.html":{}}}],["already",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["api/auth",{"_index":1803,"title":{},"body":{"index.html":{}}}],["api/auth/login",{"_index":1820,"title":{},"body":{"index.html":{}}}],["api/dashboard",{"_index":1808,"title":{},"body":{"index.html":{}}}],["api/hospitals",{"_index":1806,"title":{},"body":{"index.html":{}}}],["api/notifications",{"_index":1810,"title":{},"body":{"index.html":{}}}],["api/rescue",{"_index":1807,"title":{},"body":{"index.html":{}}}],["api/sos",{"_index":1805,"title":{},"body":{"index.html":{}}}],["api/users",{"_index":1804,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":1086,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty({description",{"_index":1078,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["apiquery",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiresponse",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"auth",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["app.controller",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_metadata",{"_index":583,"title":{},"body":{"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{}}}],["appcontroller",{"_index":57,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["apple",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["apple)'})@apiquery({name",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["appmodule",{"_index":83,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["appservice",{"_index":70,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":990,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["assigned",{"_index":619,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["assignment",{"_index":1817,"title":{},"body":{"index.html":{}}}],["assignments",{"_index":1819,"title":{},"body":{"index.html":{}}}],["assistance",{"_index":1748,"title":{},"body":{"index.html":{}}}],["async",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"injectables/PrismaService.html":{},"injectables/RescueService.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["aud",{"_index":589,"title":{},"body":{"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{}}}],["auth",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{},"index.html":{}}}],["auth.controller",{"_index":372,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"controllers/NotificationController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":1014,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":1020,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:21",{"_index":1023,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:45",{"_index":1034,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.replace(\"bearer",{"_index":1214,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["auth.service",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/NotificationModule.html":{}}}],["auth/auth.service",{"_index":1182,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["auth/decorators/current",{"_index":1116,"title":{},"body":{"controllers/NotificationController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{}}}],["auth/decorators/public.decorator",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/decorators/roles.decorator",{"_index":698,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{}}}],["auth/guards/jwt",{"_index":694,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"controllers/NotificationController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{}}}],["auth/guards/roles.guard",{"_index":696,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{}}}],["authcontroller",{"_index":134,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authenticated",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":1041,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(\"jwt",{"_index":1015,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":94,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/NotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1845,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["authresult",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["authresult.access_token",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["authresult.expires_in",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["authresult.refresh_token",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["authresult.token_type",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["authservice",{"_index":252,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{},"overview.html":{}}}],["authtokens",{"_index":437,"title":{"interfaces/AuthTokens.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{},"coverage.html":{}}}],["authurl",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["availability",{"_index":1795,"title":{},"body":{"index.html":{}}}],["available",{"_index":667,"title":{},"body":{"classes/CreateRescueTeamDto.html":{},"injectables/RescueService.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["availablebeds",{"_index":46,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{}}}],["availablehospitalbeds",{"_index":749,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["availableicubeds",{"_index":48,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{}}}],["avatar_url",{"_index":585,"title":{},"body":{"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{}}}],["averageresponsetime",{"_index":750,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["await",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"injectables/PrismaService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":1723,"title":{},"body":{"index.html":{},"properties.html":{}}}],["badrequestexception",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["badrequestexception(\"emergency",{"_index":949,"title":{},"body":{"injectables/HospitalService.html":{}}}],["badrequestexception(\"this",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception(`unsupported",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["based",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{},"index.html":{}}}],["bcrypt",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearer",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["being",{"_index":1413,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bloodtype",{"_index":1576,"title":{},"body":{"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["body",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateNotificationDto.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/MarkAsReadDto.html":{},"injectables/NotificationService.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"controllers/UserController.html":{}}}],["body(\"status",{"_index":893,"title":{},"body":{"controllers/HospitalController.html":{}}}],["boolean",{"_index":587,"title":{},"body":{"interfaces/AuthTokens.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{}}}],["bootstrap",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/SupabaseModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1226,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["broadcastemergency",{"_index":1135,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["broadcastemergency(data",{"_index":1154,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["broadcasts",{"_index":1814,"title":{},"body":{"index.html":{}}}],["broadcaststatusupdate",{"_index":1136,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["broadcaststatusupdate(data",{"_index":1156,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["browse",{"_index":1836,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1833,"title":{},"body":{"modules.html":{}}}],["busy",{"_index":668,"title":{},"body":{"classes/CreateRescueTeamDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["calculate",{"_index":1388,"title":{},"body":{"injectables/RescueService.html":{}}}],["callback",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["callback'})@apiquery({name",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["called",{"_index":844,"title":{},"body":{"controllers/HospitalController.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"miscellaneous/variables.html":{}}}],["callhandler",{"_index":1392,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["calls",{"_index":1828,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":1016,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":1021,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["cancelled",{"_index":622,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["cancelledemergencies",{"_index":751,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["capacities",{"_index":685,"title":{},"body":{"controllers/DashboardController.html":{}}}],["capacity",{"_index":938,"title":{},"body":{"injectables/HospitalService.html":{},"index.html":{}}}],["capacityplainobject",{"_index":939,"title":{},"body":{"injectables/HospitalService.html":{}}}],["cascade",{"_index":1313,"title":{},"body":{"injectables/PrismaService.html":{}}}],["cases",{"_index":1752,"title":{},"body":{"index.html":{}}}],["catch",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"interfaces/TokenPayload.html":{}}}],["catch(exception",{"_index":987,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":994,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["category",{"_index":770,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["center",{"_index":1749,"title":{},"body":{"index.html":{}}}],["centers",{"_index":1731,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1816,"title":{},"body":{"index.html":{}}}],["channels",{"_index":1813,"title":{},"body":{"index.html":{}}}],["check",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["city",{"_index":37,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"injectables/HospitalService.html":{},"injectables/RescueService.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptEmergencyDto.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/DashboardStatsResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"classes/NotificationGateway.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"classes/UserProfileResponseDto.html":{}},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"modules/RescueModule.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"modules/SosModule.html":{},"injectables/SosService.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/DashboardStatsResponseDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"classes/NotificationGateway.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"classes/UserProfileResponseDto.html":{},"overview.html":{}}}],["cleandatabase",{"_index":1285,"title":{},"body":{"injectables/PrismaService.html":{}}}],["cleaned",{"_index":1314,"title":{},"body":{"injectables/PrismaService.html":{}}}],["cleaning",{"_index":1308,"title":{},"body":{"injectables/PrismaService.html":{}}}],["client",{"_index":1161,"title":{},"body":{"classes/NotificationGateway.html":{},"injectables/SupabaseService.html":{}}}],["client.disconnect(true",{"_index":1227,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["client.handshake.auth.token",{"_index":1212,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["client.handshake.headers.authorization",{"_index":1213,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["client.id",{"_index":1201,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["client.join(`role:${user.role",{"_index":1206,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["client.join(`user:${user.id",{"_index":1205,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["clone",{"_index":1763,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":364,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":363,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":365,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":709,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":711,"title":{},"body":{"modules/DashboardModule.html":{}}}],["cluster_dashboardmodule_providers",{"_index":710,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_hospitalmodule",{"_index":896,"title":{},"body":{"modules/HospitalModule.html":{},"overview.html":{}}}],["cluster_hospitalmodule_exports",{"_index":897,"title":{},"body":{"modules/HospitalModule.html":{},"overview.html":{}}}],["cluster_hospitalmodule_imports",{"_index":898,"title":{},"body":{"modules/HospitalModule.html":{}}}],["cluster_hospitalmodule_providers",{"_index":899,"title":{},"body":{"modules/HospitalModule.html":{},"overview.html":{}}}],["cluster_notificationmodule",{"_index":1237,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_exports",{"_index":1240,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_imports",{"_index":1239,"title":{},"body":{"modules/NotificationModule.html":{}}}],["cluster_notificationmodule_providers",{"_index":1238,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":1278,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":1279,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":1280,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_rescuemodule",{"_index":1365,"title":{},"body":{"modules/RescueModule.html":{},"overview.html":{}}}],["cluster_rescuemodule_exports",{"_index":1366,"title":{},"body":{"modules/RescueModule.html":{},"overview.html":{}}}],["cluster_rescuemodule_imports",{"_index":1367,"title":{},"body":{"modules/RescueModule.html":{}}}],["cluster_rescuemodule_providers",{"_index":1368,"title":{},"body":{"modules/RescueModule.html":{},"overview.html":{}}}],["cluster_sosmodule",{"_index":1466,"title":{},"body":{"modules/SosModule.html":{},"overview.html":{}}}],["cluster_sosmodule_exports",{"_index":1467,"title":{},"body":{"modules/SosModule.html":{},"overview.html":{}}}],["cluster_sosmodule_imports",{"_index":1469,"title":{},"body":{"modules/SosModule.html":{}}}],["cluster_sosmodule_providers",{"_index":1468,"title":{},"body":{"modules/SosModule.html":{},"overview.html":{}}}],["cluster_supabasemodule",{"_index":1522,"title":{},"body":{"modules/SupabaseModule.html":{},"overview.html":{}}}],["cluster_supabasemodule_exports",{"_index":1523,"title":{},"body":{"modules/SupabaseModule.html":{},"overview.html":{}}}],["cluster_supabasemodule_providers",{"_index":1524,"title":{},"body":{"modules/SupabaseModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1616,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1619,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1618,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1617,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["code'})@apiquery({name",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["code/access_token",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["code/access_token'})@apiresponse({status",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["common",{"_index":1787,"title":{},"body":{"index.html":{}}}],["common/interfaces/auth.interface",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["communication",{"_index":1743,"title":{},"body":{"index.html":{}}}],["completed",{"_index":621,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"injectables/DashboardService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["completedemergencies",{"_index":724,"title":{},"body":{"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["comprehensive",{"_index":1797,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1579,"title":{},"body":{"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["config",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["configmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get(\"jwt_expires_in",{"_index":383,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get(\"jwt_secret",{"_index":380,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configure",{"_index":1769,"title":{},"body":{"index.html":{}}}],["configured",{"_index":1761,"title":{},"body":{"index.html":{}}}],["conflictexception",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["conflictexception(\"this",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["connect",{"_index":1543,"title":{},"body":{"injectables/SupabaseService.html":{},"index.html":{}}}],["connected",{"_index":1208,"title":{},"body":{"classes/NotificationGateway.html":{},"injectables/PrismaService.html":{},"injectables/SupabaseService.html":{},"interfaces/TokenPayload.html":{}}}],["connecting",{"_index":1298,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connection",{"_index":1199,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{},"index.html":{}}}],["console.error",{"_index":1537,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["console.error('jwtstrategy",{"_index":1073,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.error('prismaservice",{"_index":1301,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.error('rolesguard",{"_index":1419,"title":{},"body":{"guards/RolesGuard.html":{}}}],["console.log",{"_index":1535,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["console.log(\"after",{"_index":1509,"title":{},"body":{"injectables/SosService.html":{}}}],["console.log(\"before",{"_index":1506,"title":{},"body":{"injectables/SosService.html":{}}}],["console.log(\"fetched",{"_index":1520,"title":{},"body":{"injectables/SosService.html":{}}}],["console.log('createemergencyrequest",{"_index":1451,"title":{},"body":{"controllers/SosController.html":{}}}],["console.log('expected",{"_index":1460,"title":{},"body":{"controllers/SosController.html":{}}}],["console.log('getallemergencyrequests",{"_index":1459,"title":{},"body":{"controllers/SosController.html":{}}}],["console.log('getemergencyrequestbyid",{"_index":1464,"title":{},"body":{"controllers/SosController.html":{}}}],["console.log('getemergencyrequests",{"_index":1456,"title":{},"body":{"controllers/SosController.html":{}}}],["console.log('jwtstrategy",{"_index":1071,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('prismaservice",{"_index":1296,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log('roles",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('rolesguard",{"_index":1412,"title":{},"body":{"guards/RolesGuard.html":{}}}],["console.log('updatestatus",{"_index":1453,"title":{},"body":{"controllers/SosController.html":{}}}],["const",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"injectables/PrismaService.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/SosService.html":{},"injectables/SupabaseService.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"injectables/PrismaService.html":{},"injectables/RescueService.html":{},"guards/RolesGuard.html":{},"injectables/SosService.html":{},"injectables/SupabaseService.html":{},"interfaces/TokenPayload.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(jwtservice",{"_index":1145,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["constructor(prisma",{"_index":715,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/NotificationService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/NotificationController.html":{},"controllers/RescueController.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(reflector",{"_index":1018,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["contactemail",{"_index":44,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"injectables/HospitalService.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["contactphone",{"_index":43,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"injectables/HospitalService.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["contains",{"_index":925,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["context",{"_index":1027,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":1049,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":1048,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler().name",{"_index":1411,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp",{"_index":1398,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":1418,"title":{},"body":{"guards/RolesGuard.html":{}}}],["control",{"_index":1793,"title":{},"body":{"index.html":{}}}],["controller",{"_index":56,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"controllers/NotificationController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"controllers/NotificationController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"dashboard",{"_index":699,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller(\"hospitals",{"_index":838,"title":{},"body":{"controllers/HospitalController.html":{}}}],["controller(\"notifications",{"_index":1118,"title":{},"body":{"controllers/NotificationController.html":{}}}],["controller(\"rescue",{"_index":1352,"title":{},"body":{"controllers/RescueController.html":{}}}],["controller(\"sos",{"_index":1449,"title":{},"body":{"controllers/SosController.html":{}}}],["controller(\"users",{"_index":1611,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"controllers/RescueController.html":{},"modules/RescueModule.html":{},"controllers/SosController.html":{},"modules/SosModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conventions",{"_index":1801,"title":{},"body":{"index.html":{}}}],["coordinates",{"_index":1500,"title":{},"body":{"injectables/SosService.html":{},"index.html":{}}}],["copy",{"_index":1767,"title":{},"body":{"index.html":{}}}],["cors",{"_index":1183,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["cos(radians(${latitude",{"_index":971,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["cos(radians(latitude",{"_index":972,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["cos(radians(longitude",{"_index":973,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["coverage",{"_index":1648,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{}}}],["create(@body",{"_index":842,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/RescueController.html":{}}}],["create(createhospitaldto",{"_index":789,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["create(createrescueteamdto",{"_index":1337,"title":{},"body":{"controllers/RescueController.html":{},"injectables/RescueService.html":{}}}],["createclient",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["createclient(supabaseurl",{"_index":1541,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["created",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["createdat",{"_index":744,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/NotificationService.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["createemergencyrequest",{"_index":1428,"title":{},"body":{"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["createemergencyrequest(createsosdto",{"_index":1432,"title":{},"body":{"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["createemergencyrequestdto",{"_index":590,"title":{"classes/CreateEmergencyRequestDto.html":{}},"body":{"classes/CreateEmergencyRequestDto.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"coverage.html":{}}}],["createhospitaldto",{"_index":34,"title":{"classes/CreateHospitalDto.html":{}},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"coverage.html":{}}}],["createhospitaldto:18",{"_index":1566,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createhospitaldto:21",{"_index":1557,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createhospitaldto:24",{"_index":1560,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createhospitaldto:28",{"_index":1568,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createhospitaldto:31",{"_index":1567,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createhospitaldto:34",{"_index":1564,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createhospitaldto:37",{"_index":1565,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createhospitaldto:40",{"_index":1562,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createhospitaldto:44",{"_index":1561,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createhospitaldto:48",{"_index":1569,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createhospitaldto:52",{"_index":1558,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createhospitaldto:56",{"_index":1563,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createhospitaldto:60",{"_index":1559,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["createnotification",{"_index":1246,"title":{},"body":{"injectables/NotificationService.html":{}}}],["createnotification(createnotificationdto",{"_index":1248,"title":{},"body":{"injectables/NotificationService.html":{}}}],["createnotificationdto",{"_index":639,"title":{"classes/CreateNotificationDto.html":{}},"body":{"classes/CreateNotificationDto.html":{},"classes/MarkAsReadDto.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["createnotificationdto.body",{"_index":1260,"title":{},"body":{"injectables/NotificationService.html":{}}}],["createnotificationdto.metadata",{"_index":1262,"title":{},"body":{"injectables/NotificationService.html":{}}}],["createnotificationdto.title",{"_index":1259,"title":{},"body":{"injectables/NotificationService.html":{}}}],["createnotificationdto.type",{"_index":1258,"title":{},"body":{"injectables/NotificationService.html":{}}}],["createnotificationdto.userid",{"_index":1261,"title":{},"body":{"injectables/NotificationService.html":{}}}],["createparamdecorator",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrescueteamdto",{"_index":651,"title":{"classes/CreateRescueTeamDto.html":{}},"body":{"classes/CreateRescueTeamDto.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"coverage.html":{}}}],["creates/updates",{"_index":1825,"title":{},"body":{"index.html":{}}}],["createsosdto",{"_index":1435,"title":{},"body":{"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["createsosdto.description",{"_index":1482,"title":{},"body":{"injectables/SosService.html":{}}}],["createsosdto.grade",{"_index":1487,"title":{},"body":{"injectables/SosService.html":{}}}],["createsosdto.latitude",{"_index":1484,"title":{},"body":{"injectables/SosService.html":{}}}],["createsosdto.location",{"_index":1483,"title":{},"body":{"injectables/SosService.html":{}}}],["createsosdto.longitude",{"_index":1485,"title":{},"body":{"injectables/SosService.html":{}}}],["createsosdto.medicalinfo",{"_index":1486,"title":{},"body":{"injectables/SosService.html":{}}}],["createsosdto.type",{"_index":1488,"title":{},"body":{"injectables/SosService.html":{}}}],["creating",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":1190,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["crime",{"_index":616,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["critical",{"_index":610,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["ctx",{"_index":995,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":998,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":997,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":948,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["currentemergencyid",{"_index":673,"title":{},"body":{"classes/CreateRescueTeamDto.html":{},"injectables/RescueService.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["currentuser",{"_index":1115,"title":{},"body":{"controllers/NotificationController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":764,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{},"miscellaneous/enumerations.html":{}}}],["daily",{"_index":761,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{},"miscellaneous/enumerations.html":{}}}],["dashboard",{"_index":676,"title":{},"body":{"controllers/DashboardController.html":{},"index.html":{}}}],["dashboard.controller",{"_index":713,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.service",{"_index":693,"title":{},"body":{"controllers/DashboardController.html":{},"modules/DashboardModule.html":{}}}],["dashboard/dashboard.module",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboardcontroller",{"_index":674,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"coverage.html":{}}}],["dashboardmodule",{"_index":95,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardservice",{"_index":692,"title":{"injectables/DashboardService.html":{}},"body":{"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardstatsresponsedto",{"_index":747,"title":{"classes/DashboardStatsResponseDto.html":{}},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{},"coverage.html":{}}}],["data",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HospitalService.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["data.session.refresh_token",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.url",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.user",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.user.id",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["data?.session",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["data?.user",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["database",{"_index":1299,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["database_url",{"_index":1295,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":1583,"title":{},"body":{"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["date().toisostring",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["db",{"_index":1072,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["debug",{"_index":1534,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["declarations",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/SupabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{}}}],["decorators/public.decorator",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators/roles.decorator",{"_index":1409,"title":{},"body":{"guards/RolesGuard.html":{}}}],["default",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotificationGateway.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":375,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"injectables/SupabaseService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":833,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/RescueController.html":{}}}],["delete(\":id",{"_index":857,"title":{},"body":{"controllers/HospitalController.html":{}}}],["delete(':id')@roles(userrole.admin",{"_index":815,"title":{},"body":{"controllers/HospitalController.html":{}}}],["dependencies",{"_index":85,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/SupabaseModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencies:example",{"_index":1766,"title":{},"body":{"index.html":{}}}],["desc",{"_index":745,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/NotificationService.html":{}}}],["description",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateEmergencyRequestDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"injectables/SosService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"properties.html":{}}}],["designed",{"_index":1729,"title":{},"body":{"index.html":{}}}],["desired",{"_index":1821,"title":{},"body":{"index.html":{}}}],["determines",{"_index":1024,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["dev",{"_index":1776,"title":{},"body":{"index.html":{}}}],["development",{"_index":1293,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["directly",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["disabled",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["disconnect",{"_index":1137,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["disconnect(client",{"_index":1158,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["disconnected",{"_index":1211,"title":{},"body":{"classes/NotificationGateway.html":{},"injectables/PrismaService.html":{},"interfaces/TokenPayload.html":{}}}],["disconnecting",{"_index":1302,"title":{},"body":{"injectables/PrismaService.html":{}}}],["distance",{"_index":977,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["distribution",{"_index":1832,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1649,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":1096,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["doe'})@isnotempty()@isstring",{"_index":1320,"title":{},"body":{"classes/RegisterDto.html":{}}}],["domain",{"_index":1189,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["dotenv",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["dto",{"_index":1076,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["dto/auth.dto",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/hospital.dto",{"_index":837,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["dto/notification.dto",{"_index":1255,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dto/rescue.dto",{"_index":1351,"title":{},"body":{"controllers/RescueController.html":{},"injectables/RescueService.html":{}}}],["dto/sos.dto",{"_index":1448,"title":{},"body":{"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["dto/user.dto",{"_index":1610,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["during",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["email",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/NotificationGateway.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{}}}],["email/password",{"_index":1077,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["email_verified",{"_index":586,"title":{},"body":{"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{}}}],["emergencies",{"_index":682,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"index.html":{}}}],["emergency",{"_index":867,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"injectables/SosService.html":{},"index.html":{},"properties.html":{}}}],["emergency')@roles(userrole.hospital",{"_index":786,"title":{},"body":{"controllers/HospitalController.html":{}}}],["emergency.id",{"_index":956,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/SosService.html":{}}}],["emergency.patient.id",{"_index":961,"title":{},"body":{"injectables/HospitalService.html":{}}}],["emergency.patientid",{"_index":1511,"title":{},"body":{"injectables/SosService.html":{}}}],["emergency.responses",{"_index":1512,"title":{},"body":{"injectables/SosService.html":{}}}],["emergency.status",{"_index":947,"title":{},"body":{"injectables/HospitalService.html":{}}}],["emergency_accepted",{"_index":959,"title":{},"body":{"injectables/HospitalService.html":{}}}],["emergency_project\".\"organizations",{"_index":978,"title":{},"body":{"injectables/HospitalService.html":{}}}],["emergency_requests",{"_index":1306,"title":{},"body":{"injectables/PrismaService.html":{}}}],["emergency_responses",{"_index":1305,"title":{},"body":{"injectables/PrismaService.html":{}}}],["emergencycontact",{"_index":1580,"title":{},"body":{"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["emergencygrade",{"_index":596,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["emergencyid",{"_index":9,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"injectables/HospitalService.html":{},"injectables/SosService.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{}}}],["emergencyrequest",{"_index":930,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{}}}],["emergencyrequest.id",{"_index":1494,"title":{},"body":{"injectables/SosService.html":{}}}],["emergencyrequest.latitude",{"_index":1501,"title":{},"body":{"injectables/SosService.html":{}}}],["emergencyrequest.location",{"_index":1495,"title":{},"body":{"injectables/SosService.html":{}}}],["emergencyrequest.longitude",{"_index":1502,"title":{},"body":{"injectables/SosService.html":{}}}],["emergencyrequest.patient.firstname",{"_index":1497,"title":{},"body":{"injectables/SosService.html":{}}}],["emergencyrequest.patient.lastname",{"_index":1498,"title":{},"body":{"injectables/SosService.html":{}}}],["emergencyrequest.patientid",{"_index":1521,"title":{},"body":{"injectables/SosService.html":{}}}],["emergencyrequestid",{"_index":955,"title":{},"body":{"injectables/HospitalService.html":{}}}],["emergencyrequests",{"_index":1516,"title":{},"body":{"injectables/SosService.html":{}}}],["emergencyrequests.length",{"_index":1517,"title":{},"body":{"injectables/SosService.html":{}}}],["emergencyresponses",{"_index":929,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["emergencystatus",{"_index":617,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["emergencystatus.assigned",{"_index":731,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/HospitalService.html":{}}}],["emergencystatus.completed",{"_index":733,"title":{},"body":{"injectables/DashboardService.html":{}}}],["emergencystatus.in_progress",{"_index":732,"title":{},"body":{"injectables/DashboardService.html":{}}}],["emergencystatus.pending",{"_index":730,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/SosService.html":{}}}],["emergencytype",{"_index":606,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["emit(\"emergency",{"_index":1235,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["enddate",{"_index":768,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["endpoint",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HospitalController.html":{}}}],["endpoints",{"_index":1802,"title":{},"body":{"index.html":{}}}],["enum",{"_index":29,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/DashboardStatsResponseDto.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["enumerations",{"_index":1713,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"injectables/SupabaseService.html":{},"index.html":{}}}],["env.example",{"_index":1768,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1770,"title":{},"body":{"index.html":{}}}],["err",{"_index":1036,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"interfaces/TokenPayload.html":{}}}],["error(\"supabase",{"_index":1539,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["error.message",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"interfaces/TokenPayload.html":{}}}],["error.stack",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["error?.message",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["errorresponse",{"_index":1000,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":1035,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["etc.key",{"_index":1791,"title":{},"body":{"index.html":{}}}],["event",{"_index":1172,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{},"index.html":{}}}],["events",{"_index":1811,"title":{},"body":{"index.html":{}}}],["example",{"_index":1079,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["exception",{"_index":992,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{}}}],["exception.filter.ts",{"_index":982,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:13",{"_index":986,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:15",{"_index":991,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":1001,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":999,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":984,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exchange",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["exchanges",{"_index":1824,"title":{},"body":{"index.html":{}}}],["execution",{"_index":1028,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["executioncontext",{"_index":1022,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["existing",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["existinguser",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["exp",{"_index":582,"title":{},"body":{"interfaces/AuthTokens.html":{},"classes/NotificationGateway.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{}}}],["expires_in",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{}}}],["expiresin",{"_index":382,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":28,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"modules/RescueModule.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"modules/SosModule.html":{},"injectables/SosService.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/SupabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":50,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{}}}],["extract",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":1063,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1067,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracttoken",{"_index":1138,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["extracttoken(client",{"_index":1162,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["facebook",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["failed",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/SupabaseService.html":{}}}],["false",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"guards/RolesGuard.html":{}}}],["false})@isoptional()@isenum(userrole)@isin(['undefined",{"_index":1325,"title":{},"body":{"classes/RegisterDto.html":{}}}],["false})@isoptional()@isstring",{"_index":1276,"title":{},"body":{"classes/OAuthLoginDto.html":{},"classes/RegisterDto.html":{}}}],["features",{"_index":1792,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"modules/RescueModule.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"modules/SosModule.html":{},"injectables/SosService.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filters",{"_index":1790,"title":{},"body":{"index.html":{}}}],["find",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["findall",{"_index":774,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{}}}],["findall(@currentuser",{"_index":1119,"title":{},"body":{"controllers/NotificationController.html":{}}}],["findall(@query(\"search",{"_index":846,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/RescueController.html":{}}}],["findall(search",{"_index":792,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{}}}],["findall(user",{"_index":1106,"title":{},"body":{"controllers/NotificationController.html":{}}}],["findall(userid",{"_index":1250,"title":{},"body":{"injectables/NotificationService.html":{}}}],["findavailableteams",{"_index":1335,"title":{},"body":{"controllers/RescueController.html":{},"injectables/RescueService.html":{}}}],["findavailableteams(latitude",{"_index":1340,"title":{},"body":{"controllers/RescueController.html":{},"injectables/RescueService.html":{}}}],["findbyemail",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{}}}],["finding",{"_index":964,"title":{},"body":{"injectables/HospitalService.html":{}}}],["finding/creating",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["findnearbyhospitals",{"_index":775,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["findnearbyhospitals(latitude",{"_index":797,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["findone",{"_index":776,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"injectables/UserService.html":{}}}],["findone(@param(\"id",{"_index":850,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/RescueController.html":{}}}],["findone(id",{"_index":801,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"injectables/UserService.html":{}}}],["findorcreateuser",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["findorcreateuser(supabaseuser",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["fire",{"_index":615,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["first",{"_index":1093,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["firstname",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"injectables/RescueService.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{}}}],["flow",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["flow'})@apibody({type",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["flow'})@apiresponse({status",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["follows",{"_index":1799,"title":{},"body":{"index.html":{}}}],["formattederror",{"_index":1008,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["formula",{"_index":1387,"title":{},"body":{"injectables/RescueService.html":{}}}],["found",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HospitalService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RescueService.html":{},"guards/RolesGuard.html":{},"injectables/SosService.html":{},"injectables/UserService.html":{}}}],["foundation",{"_index":1728,"title":{},"body":{"index.html":{}}}],["four",{"_index":1746,"title":{},"body":{"index.html":{}}}],["framework",{"_index":1738,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":1188,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{},"index.html":{}}}],["full_name",{"_index":584,"title":{},"body":{"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{}}}],["function",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1718,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":1194,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["general",{"_index":1747,"title":{},"body":{"index.html":{}}}],["generate",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["generateauthurl",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["generateauthurl(provider",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["generated",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["generated'})@apiresponse({status",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["generates",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["generating",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["geolocation",{"_index":1794,"title":{},"body":{"index.html":{}}}],["get(\":id",{"_index":849,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/RescueController.html":{}}}],["get(\"active",{"_index":703,"title":{},"body":{"controllers/DashboardController.html":{}}}],["get(\"available",{"_index":1360,"title":{},"body":{"controllers/RescueController.html":{}}}],["get(\"callback",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"emergency",{"_index":888,"title":{},"body":{"controllers/HospitalController.html":{}}}],["get(\"hospital",{"_index":707,"title":{},"body":{"controllers/DashboardController.html":{}}}],["get(\"me",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["get(\"nearby/:latitude/:longitude",{"_index":871,"title":{},"body":{"controllers/HospitalController.html":{}}}],["get(\"stats",{"_index":701,"title":{},"body":{"controllers/DashboardController.html":{}}}],["get(\"team",{"_index":705,"title":{},"body":{"controllers/DashboardController.html":{}}}],["get('/')@public",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["get(':id",{"_index":1462,"title":{},"body":{"controllers/SosController.html":{}}}],["get(':id')@roles(userrole.admin",{"_index":802,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/RescueController.html":{}}}],["get(':id')@roles(userrole.patient",{"_index":1439,"title":{},"body":{"controllers/SosController.html":{}}}],["get('active",{"_index":681,"title":{},"body":{"controllers/DashboardController.html":{}}}],["get('all",{"_index":1458,"title":{},"body":{"controllers/SosController.html":{}}}],["get('all')@roles(userrole.emergency_center",{"_index":1436,"title":{},"body":{"controllers/SosController.html":{}}}],["get('available')@roles(userrole.emergency_center",{"_index":1341,"title":{},"body":{"controllers/RescueController.html":{}}}],["get('emergency",{"_index":805,"title":{},"body":{"controllers/HospitalController.html":{}}}],["get('hospital",{"_index":684,"title":{},"body":{"controllers/DashboardController.html":{}}}],["get('me",{"_index":1603,"title":{},"body":{"controllers/UserController.html":{}}}],["get('nearby/:latitude/:longitude')@roles(userrole.admin",{"_index":799,"title":{},"body":{"controllers/HospitalController.html":{}}}],["get('stats",{"_index":687,"title":{},"body":{"controllers/DashboardController.html":{}}}],["get('team",{"_index":689,"title":{},"body":{"controllers/DashboardController.html":{}}}],["get()@public",{"_index":67,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@roles(userrole.admin",{"_index":793,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/RescueController.html":{}}}],["get()@roles(userrole.patient",{"_index":1442,"title":{},"body":{"controllers/SosController.html":{}}}],["getactiveemergencies",{"_index":677,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardService.html":{}}}],["getallemergencyrequests",{"_index":1429,"title":{},"body":{"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["getemergencyrequestbyid",{"_index":1430,"title":{},"body":{"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["getemergencyrequestbyid(@param('id",{"_index":1463,"title":{},"body":{"controllers/SosController.html":{}}}],["getemergencyrequestbyid(id",{"_index":1438,"title":{},"body":{"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["getemergencyrequests",{"_index":1431,"title":{},"body":{"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["getemergencyrequests(@currentuser",{"_index":1455,"title":{},"body":{"controllers/SosController.html":{}}}],["getemergencyrequests(user",{"_index":1441,"title":{},"body":{"controllers/SosController.html":{}}}],["getemergencyrequests(userid",{"_index":1477,"title":{},"body":{"injectables/SosService.html":{}}}],["getemergencyresponse",{"_index":777,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["getemergencyresponse(@param(\"id",{"_index":889,"title":{},"body":{"controllers/HospitalController.html":{}}}],["getemergencyresponse(responseid",{"_index":804,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["gethello",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethellowithprefix",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["gethospitalcapacities",{"_index":678,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardService.html":{}}}],["getprofile",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["getprofile(@currentuser",{"_index":1612,"title":{},"body":{"controllers/UserController.html":{}}}],["getprofile(@req",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(user",{"_index":1602,"title":{},"body":{"controllers/UserController.html":{}}}],["getstats",{"_index":679,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardService.html":{}}}],["getteamlocations",{"_index":680,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardService.html":{}}}],["getting",{"_index":1720,"title":{"index.html":{}},"body":{"index.html":{}}}],["getuserfromaccesstoken",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserfromaccesstoken(accesstoken",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["global",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"modules/PrismaModule.html":{}}}],["go",{"_index":131,"title":{},"body":{"injectables/AppService.html":{}}}],["google",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["grade",{"_index":592,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"injectables/SosService.html":{},"classes/UpdateEmergencyStatusDto.html":{}}}],["ground",{"_index":1754,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1403,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1404,"title":{},"body":{"guards/RolesGuard.html":{},"index.html":{}}}],["guards/jwt",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["handle",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleconnection",{"_index":1139,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["handleconnection(client",{"_index":1164,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["handledisconnect",{"_index":1140,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["handledisconnect(client",{"_index":1166,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["handleoauthcallback",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["handleoauthcallback(provider",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["handlerequest",{"_index":1017,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":1033,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handles",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["handling",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["hash",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashedpassword",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["haversine",{"_index":1386,"title":{},"body":{"injectables/RescueService.html":{}}}],["having",{"_index":979,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["hospital",{"_index":738,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"index.html":{}}}],["hospital.controller",{"_index":901,"title":{},"body":{"modules/HospitalModule.html":{}}}],["hospital.id",{"_index":962,"title":{},"body":{"injectables/HospitalService.html":{}}}],["hospital.medicalinfo",{"_index":933,"title":{},"body":{"injectables/HospitalService.html":{}}}],["hospital.name",{"_index":960,"title":{},"body":{"injectables/HospitalService.html":{}}}],["hospital.service",{"_index":836,"title":{},"body":{"controllers/HospitalController.html":{},"modules/HospitalModule.html":{}}}],["hospital/hospital.module",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["hospitalcontroller",{"_index":771,"title":{"controllers/HospitalController.html":{}},"body":{"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"coverage.html":{}}}],["hospitalid",{"_index":788,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["hospitalmodule",{"_index":96,"title":{"modules/HospitalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules.html":{},"overview.html":{}}}],["hospitalname",{"_index":963,"title":{},"body":{"injectables/HospitalService.html":{}}}],["hospitals",{"_index":726,"title":{},"body":{"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"index.html":{}}}],["hospitals/${hospitalid}/accept",{"_index":869,"title":{},"body":{"controllers/HospitalController.html":{}}}],["hospitals/${id",{"_index":851,"title":{},"body":{"controllers/HospitalController.html":{}}}],["hospitals/${id}/capacity",{"_index":864,"title":{},"body":{"controllers/HospitalController.html":{}}}],["hospitals/emergency",{"_index":881,"title":{},"body":{"controllers/HospitalController.html":{}}}],["hospitals/nearby/${latitude}/${longitude",{"_index":876,"title":{},"body":{"controllers/HospitalController.html":{}}}],["hospitalservice",{"_index":835,"title":{"injectables/HospitalService.html":{}},"body":{"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"injectables/HospitalService.html":{},"coverage.html":{},"overview.html":{}}}],["hospitalstatus",{"_index":30,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"miscellaneous/enumerations.html":{}}}],["host",{"_index":989,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":996,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpcontext",{"_index":1397,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["httpcontext.getresponse",{"_index":1399,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["httpexception",{"_index":988,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":980,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpstatus",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{}}}],["iat",{"_index":581,"title":{},"body":{"interfaces/AuthTokens.html":{},"classes/NotificationGateway.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{}}}],["icubeds",{"_index":47,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{}}}],["id",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":1068,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":983,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotificationGateway.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{}}}],["implicit",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["import",{"_index":21,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"modules/RescueModule.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"modules/SosModule.html":{},"injectables/SosService.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/UserModule.html":{}}}],["in_progress",{"_index":620,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["inactive",{"_index":32,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"injectables/AuthService.html":{},"classes/CreateHospitalDto.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"miscellaneous/enumerations.html":{}}}],["include",{"_index":740,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"injectables/SupabaseService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"modules/RescueModule.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"modules/SosModule.html":{},"injectables/SosService.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{}}}],["information",{"_index":1038,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["inherited",{"_index":1556,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["initialized",{"_index":841,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["initiate",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["initiates",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["initiating",{"_index":1087,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["inject",{"_index":377,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":125,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/NotificationService.html":{},"injectables/PrismaService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"injectables/SupabaseService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/NotificationService.html":{},"injectables/PrismaService.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/SosService.html":{},"injectables/SupabaseService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/NotificationService.html":{},"injectables/PrismaService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"injectables/SupabaseService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["insensitive",{"_index":921,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{},"miscellaneous/typealiases.html":{}}}],["install",{"_index":1765,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1762,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["interactions",{"_index":1741,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1395,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1545,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":578,"title":{"interfaces/AuthTokens.html":{},"interfaces/Response.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{}},"body":{"interfaces/AuthTokens.html":{},"classes/NotificationGateway.html":{},"interfaces/Response.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":579,"title":{},"body":{"interfaces/AuthTokens.html":{},"interfaces/Response.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["internalservererrorexception(\"cannot",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["is_public_key",{"_index":1045,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarray",{"_index":665,"title":{},"body":{"classes/CreateRescueTeamDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["isdatestring",{"_index":759,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["isemail",{"_index":25,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["isenum",{"_index":26,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/DashboardStatsResponseDto.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["isenum(emergencygrade",{"_index":597,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{}}}],["isenum(emergencystatus",{"_index":624,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{}}}],["isenum(emergencytype",{"_index":607,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{}}}],["isenum(hospitalstatus",{"_index":51,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{}}}],["isenum(reporttype",{"_index":766,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["isenum(rescueteamstatus",{"_index":672,"title":{},"body":{"classes/CreateRescueTeamDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["isenum(userrole",{"_index":1098,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["isglobal",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["isin",{"_index":1085,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["isin([\"google",{"_index":1088,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":1084,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["isnumber",{"_index":24,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["isobject",{"_index":609,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/CreateNotificationDto.html":{},"classes/MarkAsReadDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["isoptional",{"_index":23,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/DashboardStatsResponseDto.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["isoptional()@isarray",{"_index":663,"title":{},"body":{"classes/CreateRescueTeamDto.html":{},"classes/UpdateRescueTeamDto.html":{}}}],["isoptional()@isdatestring",{"_index":1328,"title":{},"body":{"classes/ReportQueryDto.html":{}}}],["isoptional()@isemail",{"_index":629,"title":{},"body":{"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{}}}],["isoptional()@isenum(hospitalstatus",{"_index":1554,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["isoptional()@isnumber",{"_index":599,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{}}}],["isoptional()@isobject",{"_index":604,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/CreateNotificationDto.html":{},"classes/UpdateProfileDto.html":{}}}],["isoptional()@isstring",{"_index":19,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/ReportQueryDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["isoptional()@isuuid",{"_index":1595,"title":{},"body":{"classes/UpdateRescueTeamStatusDto.html":{}}}],["ispasswordvalid",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["ispublic",{"_index":1046,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isread",{"_index":1269,"title":{},"body":{"injectables/NotificationService.html":{}}}],["isstring",{"_index":22,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/DashboardStatsResponseDto.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["issued",{"_index":1826,"title":{},"body":{"index.html":{}}}],["isuuid",{"_index":16,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/MarkAsReadDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["it's",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["john",{"_index":1094,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["john'})@isnotempty()@isstring",{"_index":1318,"title":{},"body":{"classes/RegisterDto.html":{}}}],["join",{"_index":1202,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["js",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["json.stringify(data",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(errorresponse",{"_index":1006,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["jwt",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt_secret",{"_index":1070,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtaccesstoken",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["jwtauthguard",{"_index":256,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/NotificationController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwterror",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtfromrequest",{"_index":1066,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":368,"title":{},"body":{"modules/AuthModule.html":{},"modules/NotificationModule.html":{}}}],["jwtmodule.register",{"_index":1244,"title":{},"body":{"modules/NotificationModule.html":{}}}],["jwtmodule.registerasync",{"_index":376,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshtoken",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtservice",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"interfaces/TokenPayload.html":{}}}],["jwtstrategy",{"_index":366,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":1536,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["last",{"_index":1095,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["lastname",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"injectables/RescueService.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{}}}],["lat",{"_index":966,"title":{},"body":{"injectables/HospitalService.html":{}}}],["later",{"_index":1758,"title":{},"body":{"index.html":{}}}],["latitude",{"_index":40,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["legend",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/SupabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["let's",{"_index":130,"title":{},"body":{"injectables/AppService.html":{}}}],["license",{"_index":1829,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1831,"title":{},"body":{"index.html":{}}}],["literal",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/SupabaseUser.html":{},"classes/UpdateProfileDto.html":{}}}],["location",{"_index":593,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"injectables/SosService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"index.html":{}}}],["locations",{"_index":690,"title":{},"body":{"controllers/DashboardController.html":{}}}],["log",{"_index":1002,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["logger",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["logger(\"notificationgateway",{"_index":1147,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["logger(authcontroller.name",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger(authservice.name",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger(hospitalcontroller.name",{"_index":839,"title":{},"body":{"controllers/HospitalController.html":{}}}],["logger(hospitalservice.name",{"_index":917,"title":{},"body":{"injectables/HospitalService.html":{}}}],["logger(httpexceptionfilter.name",{"_index":985,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["logging",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["login",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["login')@apioperation({summary",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":164,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["logindto.email",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto})@apiresponse({status",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginwithsupabasetoken",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginwithsupabasetoken(access_token",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["lon",{"_index":967,"title":{},"body":{"injectables/HospitalService.html":{}}}],["longer",{"_index":950,"title":{},"body":{"injectables/HospitalService.html":{}}}],["longitude",{"_index":42,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["main",{"_index":1737,"title":{},"body":{"index.html":{}}}],["maintenance",{"_index":33,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["manage",{"_index":1751,"title":{},"body":{"index.html":{}}}],["management",{"_index":1783,"title":{},"body":{"index.html":{}}}],["map",{"_index":1151,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/Response.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1401,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["markallasread",{"_index":1104,"title":{},"body":{"controllers/NotificationController.html":{},"injectables/NotificationService.html":{}}}],["markallasread(@currentuser",{"_index":1125,"title":{},"body":{"controllers/NotificationController.html":{}}}],["markallasread(user",{"_index":1108,"title":{},"body":{"controllers/NotificationController.html":{}}}],["markallasread(userid",{"_index":1252,"title":{},"body":{"injectables/NotificationService.html":{}}}],["markasread",{"_index":1105,"title":{},"body":{"controllers/NotificationController.html":{},"injectables/NotificationService.html":{}}}],["markasread(@param(\"id",{"_index":1122,"title":{},"body":{"controllers/NotificationController.html":{}}}],["markasread(id",{"_index":1111,"title":{},"body":{"controllers/NotificationController.html":{},"injectables/NotificationService.html":{}}}],["markasreaddto",{"_index":649,"title":{"classes/MarkAsReadDto.html":{}},"body":{"classes/CreateNotificationDto.html":{},"classes/MarkAsReadDto.html":{},"coverage.html":{}}}],["marked",{"_index":1050,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["marking",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":1421,"title":{},"body":{"guards/RolesGuard.html":{}}}],["matching",{"_index":55,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"modules/RescueModule.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"modules/SosModule.html":{},"injectables/SosService.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medical",{"_index":614,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["medicalinfo",{"_index":594,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["medications",{"_index":1578,"title":{},"body":{"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["message",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{}}}],["metadata",{"_index":641,"title":{},"body":{"classes/CreateNotificationDto.html":{},"injectables/HospitalService.html":{},"injectables/JwtAuthGuard.html":{},"classes/MarkAsReadDto.html":{},"injectables/NotificationService.html":{},"injectables/SosService.html":{},"dependencies.html":{}}}],["method",{"_index":1011,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{}}}],["methodname",{"_index":1410,"title":{},"body":{"guards/RolesGuard.html":{}}}],["methods",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"injectables/PrismaService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["migrate",{"_index":1775,"title":{},"body":{"index.html":{}}}],["migrations:example",{"_index":1773,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1712,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SupabaseService.html":{}}}],["mode",{"_index":926,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["models",{"_index":1786,"title":{},"body":{"index.html":{}}}],["module",{"_index":82,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/SupabaseModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/SupabaseModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":84,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/SupabaseModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["monthly",{"_index":763,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{}}}],["nameparts",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["nameparts.slice(1).join",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["nameparts[0",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["namespace",{"_index":1191,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["nearby",{"_index":965,"title":{},"body":{"injectables/HospitalService.html":{}}}],["nestinterceptor",{"_index":1391,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":1726,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/RescueController.html":{},"modules/RescueModule.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"modules/SosModule.html":{},"injectables/SosService.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1042,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":369,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"interfaces/TokenPayload.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":371,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":1180,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{},"dependencies.html":{}}}],["never",{"_index":1039,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["new",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"injectables/SosService.html":{},"injectables/SupabaseService.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newpayload",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":1396,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":1400,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["node.js",{"_index":1756,"title":{},"body":{"index.html":{}}}],["non_urgent",{"_index":612,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["notes",{"_index":11,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"injectables/HospitalService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["notfoundexception",{"_index":918,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(\"emergency",{"_index":946,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/SosService.html":{}}}],["notfoundexception(\"hospital",{"_index":932,"title":{},"body":{"injectables/HospitalService.html":{}}}],["notfoundexception(\"no",{"_index":1518,"title":{},"body":{"injectables/SosService.html":{}}}],["notfoundexception(\"rescue",{"_index":1380,"title":{},"body":{"injectables/RescueService.html":{}}}],["notfoundexception(\"user",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["notification",{"_index":1256,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["notification.controller",{"_index":1242,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.gateway",{"_index":1243,"title":{},"body":{"modules/NotificationModule.html":{},"injectables/NotificationService.html":{}}}],["notification.service",{"_index":1114,"title":{},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{}}}],["notification/notification.gateway",{"_index":1480,"title":{},"body":{"injectables/SosService.html":{}}}],["notification/notification.module",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/HospitalModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{}}}],["notification/notification.service",{"_index":919,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{}}}],["notificationcontroller",{"_index":1101,"title":{"controllers/NotificationController.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"coverage.html":{}}}],["notificationgateway",{"_index":1127,"title":{"classes/NotificationGateway.html":{}},"body":{"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{},"overview.html":{}}}],["notificationid",{"_index":650,"title":{},"body":{"classes/CreateNotificationDto.html":{},"classes/MarkAsReadDto.html":{}}}],["notificationmodule",{"_index":97,"title":{"modules/NotificationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules.html":{},"overview.html":{}}}],["notifications",{"_index":1103,"title":{},"body":{"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"injectables/PrismaService.html":{},"interfaces/TokenPayload.html":{},"index.html":{}}}],["notificationservice",{"_index":903,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/HospitalService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"modules/RescueModule.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"coverage.html":{},"overview.html":{}}}],["notifies",{"_index":1818,"title":{},"body":{"index.html":{}}}],["notifyrescueteam",{"_index":778,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["notifyrescueteam(@param(\"id",{"_index":885,"title":{},"body":{"controllers/HospitalController.html":{}}}],["notifyrescueteam(responseid",{"_index":809,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["npm",{"_index":1759,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1774,"title":{},"body":{"index.html":{}}}],["null",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HospitalService.html":{},"classes/NotificationGateway.html":{},"injectables/RescueService.html":{},"interfaces/TokenPayload.html":{}}}],["number",{"_index":41,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/LoginDto.html":{},"classes/NotificationGateway.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["oauth",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["oauth2",{"_index":1782,"title":{},"body":{"index.html":{}}}],["oauthcallback",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauthcallback(provider",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauthcallbackdto",{"_index":1090,"title":{"classes/OAuthCallbackDto.html":{}},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["oauthlogin",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauthlogin(@body",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauthlogin(oauthlogindto",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["oauthlogindto",{"_index":204,"title":{"classes/OAuthLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["oauthlogindto})@apiresponse({status",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["object",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{}}}],["observable",{"_index":1029,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["off_duty",{"_index":669,"title":{},"body":{"classes/CreateRescueTeamDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["offline",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["ok",{"_index":129,"title":{},"body":{"injectables/AppService.html":{}}}],["one",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["ongatewayconnection",{"_index":1130,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["ongatewaydisconnect",{"_index":1131,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["ongatewayinit",{"_index":1129,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["onmoduledestroy",{"_index":1286,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":1287,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":10,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{}}}],["options",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["orderby",{"_index":743,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/NotificationService.html":{}}}],["organization",{"_index":742,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/SosService.html":{}}}],["organizationid",{"_index":954,"title":{},"body":{"injectables/HospitalService.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["organizations",{"_index":1307,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/RescueService.html":{}}}],["origin",{"_index":1184,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["orm",{"_index":1740,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1053,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["out",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/SupabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1837,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1686,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":834,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/NotificationController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{}}}],["param(\"id",{"_index":863,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{}}}],["param(\"latitude",{"_index":872,"title":{},"body":{"controllers/HospitalController.html":{}}}],["param(\"longitude",{"_index":873,"title":{},"body":{"controllers/HospitalController.html":{}}}],["parameter",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parent",{"_index":1054,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["parseint(this.configservice.get(\"jwt_expires_in",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["passport",{"_index":1065,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":370,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":374,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1062,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1058,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["password'})@apibody({type",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["password123",{"_index":1092,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["password123'})@isnotempty()@isstring",{"_index":1082,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":832,"title":{},"body":{"controllers/HospitalController.html":{}}}],["patch(\"emergency",{"_index":892,"title":{},"body":{"controllers/HospitalController.html":{}}}],["patch('emergency",{"_index":828,"title":{},"body":{"controllers/HospitalController.html":{}}}],["path",{"_index":1010,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["patient",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/SosService.html":{}}}],["patientid",{"_index":1489,"title":{},"body":{"injectables/SosService.html":{}}}],["patientname",{"_index":1496,"title":{},"body":{"injectables/SosService.html":{}}}],["patients",{"_index":1730,"title":{},"body":{"index.html":{}}}],["payload",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["payload.sub",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["pending",{"_index":618,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"injectables/HospitalService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["phone",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"injectables/DashboardService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{}}}],["picture",{"_index":588,"title":{},"body":{"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{}}}],["platform",{"_index":1734,"title":{},"body":{"index.html":{}}}],["post",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HospitalController.html":{},"classes/NotificationGateway.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"interfaces/TokenPayload.html":{}}}],["post(\":id/accept",{"_index":866,"title":{},"body":{"controllers/HospitalController.html":{}}}],["post(\"emergency",{"_index":884,"title":{},"body":{"controllers/HospitalController.html":{}}}],["post(\"login",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login/oauth",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"refresh",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"supabase",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(':id/accept",{"_index":785,"title":{},"body":{"controllers/HospitalController.html":{}}}],["post('emergency",{"_index":810,"title":{},"body":{"controllers/HospitalController.html":{}}}],["post('supabase",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@roles(userrole.admin",{"_index":790,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/RescueController.html":{}}}],["post()@roles(userrole.patient",{"_index":1433,"title":{},"body":{"controllers/SosController.html":{}}}],["postalcode",{"_index":39,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["postgresql",{"_index":1739,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"controllers/NotificationController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{}}}],["prerequisites",{"_index":1755,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"injectables/UserService.html":{},"index.html":{}}}],["prisma.emergencyrequest.findunique",{"_index":1505,"title":{},"body":{"injectables/SosService.html":{}}}],["prisma.emergencyrequest.update",{"_index":1508,"title":{},"body":{"injectables/SosService.html":{}}}],["prisma.service",{"_index":1282,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"controllers/RescueController.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"injectables/UserService.html":{}}}],["prismaclient",{"_index":1284,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":98,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":396,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{}}}],["privately",{"_index":1830,"title":{},"body":{"index.html":{}}}],["proceed",{"_index":1031,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["process",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.database_url",{"_index":1297,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.node_env",{"_index":1292,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.supabase_service_role_key",{"_index":1533,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["process.env.supabase_url",{"_index":1531,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["production",{"_index":1185,"title":{},"body":{"classes/NotificationGateway.html":{},"injectables/PrismaService.html":{},"interfaces/TokenPayload.html":{}}}],["profile",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["profile'})@apibearerauth()@apiresponse({status",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["profileimageurl",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["project",{"_index":1780,"title":{},"body":{"index.html":{}}}],["promise",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["promise.all",{"_index":727,"title":{},"body":{"injectables/DashboardService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/DashboardStatsResponseDto.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"classes/NotificationGateway.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"interfaces/Response.html":{},"injectables/SupabaseService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"classes/UserProfileResponseDto.html":{},"properties.html":{}}}],["provider",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{},"index.html":{}}}],["provider'})@isnotempty()@isstring",{"_index":1272,"title":{},"body":{"classes/OAuthCallbackDto.html":{}}}],["providers",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/SupabaseModule.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["public",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"classes/NotificationGateway.html":{},"injectables/SupabaseService.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('callback')@apioperation({summary",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('login')@apioperation({summary",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('login/oauth')@apioperation({summary",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('refresh')@apioperation({summary",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('register')@apioperation({summary",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["put",{"_index":831,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/NotificationController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{}}}],["put(\":id",{"_index":853,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/RescueController.html":{}}}],["put(\":id/capacity",{"_index":861,"title":{},"body":{"controllers/HospitalController.html":{}}}],["put(\":id/read",{"_index":1121,"title":{},"body":{"controllers/NotificationController.html":{}}}],["put(\":id/status",{"_index":1357,"title":{},"body":{"controllers/RescueController.html":{},"controllers/SosController.html":{}}}],["put(\"emergency",{"_index":878,"title":{},"body":{"controllers/HospitalController.html":{}}}],["put(\"me",{"_index":1614,"title":{},"body":{"controllers/UserController.html":{}}}],["put(\"read",{"_index":1124,"title":{},"body":{"controllers/NotificationController.html":{}}}],["put(':id')@roles(userrole.admin",{"_index":818,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/RescueController.html":{}}}],["put(':id/capacity')@roles(userrole.hospital",{"_index":822,"title":{},"body":{"controllers/HospitalController.html":{}}}],["put(':id/read",{"_index":1112,"title":{},"body":{"controllers/NotificationController.html":{}}}],["put(':id/status')@roles(userrole.emergency_center",{"_index":1444,"title":{},"body":{"controllers/SosController.html":{}}}],["put(':id/status')@roles(userrole.rescue_team",{"_index":1347,"title":{},"body":{"controllers/RescueController.html":{}}}],["put('emergency",{"_index":825,"title":{},"body":{"controllers/HospitalController.html":{}}}],["put('me",{"_index":1606,"title":{},"body":{"controllers/UserController.html":{}}}],["put('read",{"_index":1109,"title":{},"body":{"controllers/NotificationController.html":{}}}],["query",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HospitalController.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/RescueController.html":{}}}],["query(\"access_token",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["query(\"code",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{}}}],["query(\"latitude",{"_index":1362,"title":{},"body":{"controllers/RescueController.html":{}}}],["query(\"longitude",{"_index":1363,"title":{},"body":{"controllers/RescueController.html":{}}}],["query(\"provider",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["query(\"radius",{"_index":874,"title":{},"body":{"controllers/HospitalController.html":{},"controllers/RescueController.html":{}}}],["querymode",{"_index":920,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["queryparams",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["radians(${longitude",{"_index":974,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["radius",{"_index":798,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{}}}],["readonly",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"controllers/NotificationController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{}}}],["real",{"_index":1264,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["receive",{"_index":1750,"title":{},"body":{"index.html":{}}}],["received",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["record",{"_index":603,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/CreateNotificationDto.html":{},"injectables/HospitalService.html":{},"classes/MarkAsReadDto.html":{},"injectables/RescueService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"index.html":{}}}],["redirect",{"_index":1089,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["redirected",{"_index":1822,"title":{},"body":{"index.html":{}}}],["redirecting",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["redirects",{"_index":1823,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirecturl",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["reflect",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1019,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["refresh",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["refresh_token",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{}}}],["refreshed",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshes",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshing",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["refreshtoken",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["refreshtoken(@body(\"refreshtoken",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken(refreshtoken",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtokendto",{"_index":254,"title":{"classes/RefreshTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["refreshtokendto})@apiresponse({status",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["region",{"_index":769,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["register",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":228,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registerdto.email",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerdto})@apiresponse({status",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["registered",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["registration",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["regular",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["rejected",{"_index":1032,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["relationship",{"_index":1581,"title":{},"body":{"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["remove",{"_index":779,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["remove(@param(\"id",{"_index":858,"title":{},"body":{"controllers/HospitalController.html":{}}}],["remove(id",{"_index":814,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["removeusersocket",{"_index":1141,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["removeusersocket(socketid",{"_index":1168,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["replace",{"_index":1186,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["reporting",{"_index":1798,"title":{},"body":{"index.html":{}}}],["reportquerydto",{"_index":765,"title":{"classes/ReportQueryDto.html":{}},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{},"coverage.html":{}}}],["reporttype",{"_index":760,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{},"miscellaneous/enumerations.html":{}}}],["repository",{"_index":1764,"title":{},"body":{"index.html":{}}}],["req",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":945,"title":{},"body":{"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/SosService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["request.method",{"_index":1003,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.url",{"_index":1004,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.user",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":1519,"title":{},"body":{"injectables/SosService.html":{},"index.html":{}}}],["required",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["requiredroles",{"_index":1414,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.length",{"_index":1416,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.map(role",{"_index":1420,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some",{"_index":1422,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requires",{"_index":1026,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["res",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(httpstatus.bad_request).json",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(httpstatus.created).json",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(httpstatus.unauthorized).json",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["rescue",{"_index":734,"title":{},"body":{"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"controllers/RescueController.html":{},"index.html":{}}}],["rescue')@roles(userrole.hospital",{"_index":812,"title":{},"body":{"controllers/HospitalController.html":{}}}],["rescue.controller",{"_index":1370,"title":{},"body":{"modules/RescueModule.html":{}}}],["rescue.service",{"_index":1350,"title":{},"body":{"controllers/RescueController.html":{},"modules/RescueModule.html":{}}}],["rescue/rescue.module",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["rescue_team",{"_index":737,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/RescueService.html":{}}}],["rescuecontroller",{"_index":1333,"title":{"controllers/RescueController.html":{}},"body":{"controllers/RescueController.html":{},"modules/RescueModule.html":{},"coverage.html":{}}}],["rescuemodule",{"_index":99,"title":{"modules/RescueModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/RescueModule.html":{},"modules.html":{},"overview.html":{}}}],["rescueservice",{"_index":1349,"title":{"injectables/RescueService.html":{}},"body":{"controllers/RescueController.html":{},"modules/RescueModule.html":{},"injectables/RescueService.html":{},"coverage.html":{},"overview.html":{}}}],["rescueteam",{"_index":1379,"title":{},"body":{"injectables/RescueService.html":{}}}],["rescueteam.medicalinfo",{"_index":1382,"title":{},"body":{"injectables/RescueService.html":{}}}],["rescueteamstatus",{"_index":666,"title":{},"body":{"classes/CreateRescueTeamDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["reset",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/SupabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["respond",{"_index":1753,"title":{},"body":{"index.html":{}}}],["responder",{"_index":1492,"title":{},"body":{"injectables/SosService.html":{}}}],["responder.id",{"_index":1493,"title":{},"body":{"injectables/SosService.html":{}}}],["responders",{"_index":1490,"title":{},"body":{"injectables/SosService.html":{}}}],["response",{"_index":166,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/SosService.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["response.organization.users",{"_index":1513,"title":{},"body":{"injectables/SosService.html":{}}}],["response.status(status).json(formattederror",{"_index":1012,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.statuscode",{"_index":1402,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["response_type",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["responseid",{"_index":808,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["responses",{"_index":741,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/SosService.html":{},"index.html":{}}}],["responses/${responseid",{"_index":882,"title":{},"body":{"controllers/HospitalController.html":{}}}],["responses/${responseid}/notify",{"_index":886,"title":{},"body":{"controllers/HospitalController.html":{}}}],["responses/${responseid}/status",{"_index":894,"title":{},"body":{"controllers/HospitalController.html":{}}}],["responses/:id",{"_index":879,"title":{},"body":{"controllers/HospitalController.html":{}}}],["responses/:id')@roles(userrole.hospital",{"_index":806,"title":{},"body":{"controllers/HospitalController.html":{}}}],["responses/:id/notify",{"_index":811,"title":{},"body":{"controllers/HospitalController.html":{}}}],["responses/:id/status",{"_index":891,"title":{},"body":{"controllers/HospitalController.html":{}}}],["responses/:id/status')@roles(userrole.hospital",{"_index":829,"title":{},"body":{"controllers/HospitalController.html":{}}}],["restful",{"_index":1800,"title":{},"body":{"index.html":{}}}],["results",{"_index":54,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"modules/RescueModule.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"modules/SosModule.html":{},"injectables/SosService.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["retrieved'})@apiresponse({status",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["return",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"injectables/PrismaService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/NotificationGateway.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"injectables/RescueService.html":{},"guards/RolesGuard.html":{},"injectables/SosService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{},"index.html":{}}}],["roles",{"_index":697,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"controllers/RescueController.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(userrole.admin",{"_index":700,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"controllers/RescueController.html":{}}}],["roles(userrole.emergency_center",{"_index":1361,"title":{},"body":{"controllers/RescueController.html":{},"controllers/SosController.html":{}}}],["roles(userrole.hospital",{"_index":862,"title":{},"body":{"controllers/HospitalController.html":{}}}],["roles(userrole.patient",{"_index":1450,"title":{},"body":{"controllers/SosController.html":{}}}],["roles(userrole.rescue_team",{"_index":1358,"title":{},"body":{"controllers/RescueController.html":{}}}],["roles_key",{"_index":1408,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":695,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"controllers/RescueController.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"coverage.html":{}}}],["room",{"_index":1204,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["route",{"_index":1025,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["routes",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1772,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1043,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1393,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["saltrounds",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["schema",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["search",{"_index":795,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{}}}],["secret",{"_index":379,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1069,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1733,"title":{},"body":{"index.html":{}}}],["select",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{}}}],["send",{"_index":1263,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sending",{"_index":1228,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["sendtorole",{"_index":1142,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["sendtorole(role",{"_index":1171,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["sendtouser",{"_index":1143,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["sendtouser(userid",{"_index":1174,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["server",{"_index":1132,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["server:example",{"_index":1778,"title":{},"body":{"index.html":{}}}],["serves",{"_index":1727,"title":{},"body":{"index.html":{}}}],["session",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["set",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["setmetadata(is_public_key",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared",{"_index":1788,"title":{},"body":{"index.html":{}}}],["signjwt",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["signjwt(payload",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":381,"title":{},"body":{"modules/AuthModule.html":{}}}],["sin(radians(${latitude",{"_index":975,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["sin(radians(latitude",{"_index":976,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["socket",{"_index":1159,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["socket.io",{"_index":1181,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{},"dependencies.html":{},"index.html":{}}}],["socketid",{"_index":1170,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["sockets",{"_index":1219,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["sockets.delete(socketid",{"_index":1222,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["sockets.has(socketid",{"_index":1221,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["sockets.size",{"_index":1223,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["sos",{"_index":1427,"title":{},"body":{"controllers/SosController.html":{},"index.html":{}}}],["sos.controller",{"_index":1471,"title":{},"body":{"modules/SosModule.html":{}}}],["sos.service",{"_index":1447,"title":{},"body":{"controllers/SosController.html":{},"modules/SosModule.html":{}}}],["sos/dto/sos.dto",{"_index":721,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["sos/sos.module",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["soscontroller",{"_index":1425,"title":{"controllers/SosController.html":{}},"body":{"controllers/SosController.html":{},"modules/SosModule.html":{},"coverage.html":{}}}],["sosmodule",{"_index":100,"title":{"modules/SosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/SosModule.html":{},"modules.html":{},"overview.html":{}}}],["sosservice",{"_index":1446,"title":{"injectables/SosService.html":{}},"body":{"controllers/SosController.html":{},"modules/SosModule.html":{},"injectables/SosService.html":{},"coverage.html":{},"overview.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"modules/HospitalModule.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"modules/RescueModule.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"modules/SosModule.html":{},"injectables/SosService.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{}}}],["specific",{"_index":1203,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["specified",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["src",{"_index":1781,"title":{},"body":{"index.html":{}}}],["src/.../current",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dashboard.dto.ts",{"_index":1716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../hospital.dto.ts",{"_index":1715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../hospital.service.ts",{"_index":1848,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":1719,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rescue.dto.ts",{"_index":1717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../rescue.service.ts",{"_index":1849,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../roles.decorator.ts",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sos.dto.ts",{"_index":1714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:17",{"_index":64,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":127,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":128,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:112",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:134",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:202",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:214",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:222",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:50",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:84",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":367,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:101",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:169",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:213",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:26",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:263",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:27",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:314",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:340",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:409",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:448",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:456",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/current",{"_index":1658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/public.decorator.ts",{"_index":1663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/roles.decorator.ts",{"_index":1665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":1075,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:106",{"_index":1316,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["src/auth/dto/auth.dto.ts:20",{"_index":1275,"title":{},"body":{"classes/OAuthLoginDto.html":{}}}],["src/auth/dto/auth.dto.ts:25",{"_index":1277,"title":{},"body":{"classes/OAuthLoginDto.html":{}}}],["src/auth/dto/auth.dto.ts:35",{"_index":1273,"title":{},"body":{"classes/OAuthCallbackDto.html":{}}}],["src/auth/dto/auth.dto.ts:45",{"_index":1317,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/auth.dto.ts:50",{"_index":1322,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/auth.dto.ts:55",{"_index":1319,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/auth.dto.ts:60",{"_index":1321,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/auth.dto.ts:65",{"_index":1323,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/auth.dto.ts:81",{"_index":1326,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/auth.dto.ts:91",{"_index":1081,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/auth.dto.ts:96",{"_index":1083,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/guards/jwt",{"_index":1013,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":1405,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:10",{"_index":1407,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:7",{"_index":1406,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":1057,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:23",{"_index":1061,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":1059,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/common/filters/http",{"_index":981,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/interceptors/transform.interceptor.ts",{"_index":1389,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/transform.interceptor.ts:20",{"_index":1546,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/common/interfaces/auth.interface.ts",{"_index":580,"title":{},"body":{"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{},"coverage.html":{}}}],["src/dashboard/dashboard.controller.ts",{"_index":675,"title":{},"body":{"controllers/DashboardController.html":{},"coverage.html":{}}}],["src/dashboard/dashboard.controller.ts:15",{"_index":688,"title":{},"body":{"controllers/DashboardController.html":{}}}],["src/dashboard/dashboard.controller.ts:20",{"_index":683,"title":{},"body":{"controllers/DashboardController.html":{}}}],["src/dashboard/dashboard.controller.ts:25",{"_index":691,"title":{},"body":{"controllers/DashboardController.html":{}}}],["src/dashboard/dashboard.controller.ts:30",{"_index":686,"title":{},"body":{"controllers/DashboardController.html":{}}}],["src/dashboard/dashboard.module.ts",{"_index":712,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/dashboard/dashboard.service.ts",{"_index":714,"title":{},"body":{"injectables/DashboardService.html":{},"coverage.html":{}}}],["src/dashboard/dashboard.service.ts:111",{"_index":718,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:6",{"_index":716,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:62",{"_index":717,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:9",{"_index":719,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:94",{"_index":720,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dto/dashboard.dto.ts",{"_index":748,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/dashboard/dto/dashboard.dto.ts:12",{"_index":1332,"title":{},"body":{"classes/ReportQueryDto.html":{}}}],["src/dashboard/dto/dashboard.dto.ts:16",{"_index":1331,"title":{},"body":{"classes/ReportQueryDto.html":{}}}],["src/dashboard/dto/dashboard.dto.ts:20",{"_index":1329,"title":{},"body":{"classes/ReportQueryDto.html":{}}}],["src/dashboard/dto/dashboard.dto.ts:24",{"_index":1330,"title":{},"body":{"classes/ReportQueryDto.html":{}}}],["src/dashboard/dto/dashboard.dto.ts:28",{"_index":1327,"title":{},"body":{"classes/ReportQueryDto.html":{}}}],["src/dashboard/dto/dashboard.dto.ts:32",{"_index":758,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{}}}],["src/dashboard/dto/dashboard.dto.ts:33",{"_index":752,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{}}}],["src/dashboard/dto/dashboard.dto.ts:34",{"_index":757,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{}}}],["src/dashboard/dto/dashboard.dto.ts:35",{"_index":756,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{}}}],["src/dashboard/dto/dashboard.dto.ts:36",{"_index":755,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{}}}],["src/dashboard/dto/dashboard.dto.ts:37",{"_index":753,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{}}}],["src/dashboard/dto/dashboard.dto.ts:38",{"_index":754,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{}}}],["src/hospital/dto/hospital.dto.ts",{"_index":6,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/hospital/dto/hospital.dto.ts:18",{"_index":635,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:21",{"_index":625,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:24",{"_index":628,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:28",{"_index":637,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:31",{"_index":636,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:34",{"_index":633,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:37",{"_index":634,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:40",{"_index":631,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:44",{"_index":630,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:48",{"_index":638,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:52",{"_index":626,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:56",{"_index":632,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:60",{"_index":627,"title":{},"body":{"classes/CreateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:66",{"_index":1555,"title":{},"body":{"classes/UpdateHospitalDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:71",{"_index":1553,"title":{},"body":{"classes/UpdateHospitalCapacityDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:74",{"_index":1549,"title":{},"body":{"classes/UpdateHospitalCapacityDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:77",{"_index":1551,"title":{},"body":{"classes/UpdateHospitalCapacityDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:80",{"_index":1550,"title":{},"body":{"classes/UpdateHospitalCapacityDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:84",{"_index":1552,"title":{},"body":{"classes/UpdateHospitalCapacityDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:89",{"_index":18,"title":{},"body":{"classes/AcceptEmergencyDto.html":{}}}],["src/hospital/dto/hospital.dto.ts:93",{"_index":20,"title":{},"body":{"classes/AcceptEmergencyDto.html":{}}}],["src/hospital/hospital.controller.ts",{"_index":772,"title":{},"body":{"controllers/HospitalController.html":{},"coverage.html":{}}}],["src/hospital/hospital.controller.ts:100",{"_index":813,"title":{},"body":{"controllers/HospitalController.html":{}}}],["src/hospital/hospital.controller.ts:109",{"_index":807,"title":{},"body":{"controllers/HospitalController.html":{}}}],["src/hospital/hospital.controller.ts:117",{"_index":830,"title":{},"body":{"controllers/HospitalController.html":{}}}],["src/hospital/hospital.controller.ts:25",{"_index":791,"title":{},"body":{"controllers/HospitalController.html":{}}}],["src/hospital/hospital.controller.ts:32",{"_index":794,"title":{},"body":{"controllers/HospitalController.html":{}}}],["src/hospital/hospital.controller.ts:39",{"_index":803,"title":{},"body":{"controllers/HospitalController.html":{}}}],["src/hospital/hospital.controller.ts:46",{"_index":819,"title":{},"body":{"controllers/HospitalController.html":{}}}],["src/hospital/hospital.controller.ts:53",{"_index":816,"title":{},"body":{"controllers/HospitalController.html":{}}}],["src/hospital/hospital.controller.ts:60",{"_index":823,"title":{},"body":{"controllers/HospitalController.html":{}}}],["src/hospital/hospital.controller.ts:70",{"_index":787,"title":{},"body":{"controllers/HospitalController.html":{}}}],["src/hospital/hospital.controller.ts:80",{"_index":800,"title":{},"body":{"controllers/HospitalController.html":{}}}],["src/hospital/hospital.controller.ts:93",{"_index":826,"title":{},"body":{"controllers/HospitalController.html":{}}}],["src/hospital/hospital.module.ts",{"_index":900,"title":{},"body":{"modules/HospitalModule.html":{}}}],["src/hospital/hospital.service.ts",{"_index":902,"title":{},"body":{"injectables/HospitalService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/hospital/hospital.service.ts:103",{"_index":913,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/hospital/hospital.service.ts:113",{"_index":912,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/hospital/hospital.service.ts:123",{"_index":914,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/hospital/hospital.service.ts:145",{"_index":905,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/hospital/hospital.service.ts:196",{"_index":908,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/hospital/hospital.service.ts:22",{"_index":904,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/hospital/hospital.service.ts:233",{"_index":915,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/hospital/hospital.service.ts:285",{"_index":911,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/hospital/hospital.service.ts:31",{"_index":906,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/hospital/hospital.service.ts:351",{"_index":910,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/hospital/hospital.service.ts:378",{"_index":916,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/hospital/hospital.service.ts:41",{"_index":907,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/hospital/hospital.service.ts:68",{"_index":909,"title":{},"body":{"injectables/HospitalService.html":{}}}],["src/main.ts",{"_index":1681,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/notification/dto/notification.dto.ts",{"_index":640,"title":{},"body":{"classes/CreateNotificationDto.html":{},"classes/MarkAsReadDto.html":{},"coverage.html":{}}}],["src/notification/dto/notification.dto.ts:11",{"_index":644,"title":{},"body":{"classes/CreateNotificationDto.html":{}}}],["src/notification/dto/notification.dto.ts:14",{"_index":648,"title":{},"body":{"classes/CreateNotificationDto.html":{}}}],["src/notification/dto/notification.dto.ts:18",{"_index":645,"title":{},"body":{"classes/CreateNotificationDto.html":{}}}],["src/notification/dto/notification.dto.ts:23",{"_index":1100,"title":{},"body":{"classes/MarkAsReadDto.html":{}}}],["src/notification/dto/notification.dto.ts:5",{"_index":647,"title":{},"body":{"classes/CreateNotificationDto.html":{}}}],["src/notification/dto/notification.dto.ts:8",{"_index":646,"title":{},"body":{"classes/CreateNotificationDto.html":{}}}],["src/notification/notification.controller.ts",{"_index":1102,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{}}}],["src/notification/notification.controller.ts:12",{"_index":1107,"title":{},"body":{"controllers/NotificationController.html":{}}}],["src/notification/notification.controller.ts:17",{"_index":1113,"title":{},"body":{"controllers/NotificationController.html":{}}}],["src/notification/notification.controller.ts:22",{"_index":1110,"title":{},"body":{"controllers/NotificationController.html":{}}}],["src/notification/notification.gateway.ts",{"_index":1128,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["src/notification/notification.gateway.ts:104",{"_index":1177,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:111",{"_index":1169,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:123",{"_index":1160,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:128",{"_index":1175,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:132",{"_index":1173,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:136",{"_index":1155,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:144",{"_index":1157,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:35",{"_index":1150,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:36",{"_index":1148,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:37",{"_index":1146,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:45",{"_index":1153,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:49",{"_index":1165,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:81",{"_index":1167,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:86",{"_index":1163,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.gateway.ts:95",{"_index":1178,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["src/notification/notification.module.ts",{"_index":1241,"title":{},"body":{"modules/NotificationModule.html":{}}}],["src/notification/notification.service.ts",{"_index":1245,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/notification/notification.service.ts:13",{"_index":1249,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/notification.service.ts:34",{"_index":1254,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/notification.service.ts:46",{"_index":1253,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/notification.service.ts:58",{"_index":1251,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/notification.service.ts:7",{"_index":1247,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/prisma/prisma.module.ts",{"_index":1281,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":1283,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:20",{"_index":1291,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:31",{"_index":1290,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:41",{"_index":1289,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:8",{"_index":1288,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/rescue/dto/rescue.dto.ts",{"_index":652,"title":{},"body":{"classes/CreateRescueTeamDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/rescue/dto/rescue.dto.ts:103",{"_index":1597,"title":{},"body":{"classes/UpdateRescueTeamStatusDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:107",{"_index":1596,"title":{},"body":{"classes/UpdateRescueTeamStatusDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:20",{"_index":660,"title":{},"body":{"classes/CreateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:23",{"_index":654,"title":{},"body":{"classes/CreateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:26",{"_index":655,"title":{},"body":{"classes/CreateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:30",{"_index":662,"title":{},"body":{"classes/CreateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:33",{"_index":661,"title":{},"body":{"classes/CreateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:37",{"_index":658,"title":{},"body":{"classes/CreateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:41",{"_index":659,"title":{},"body":{"classes/CreateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:44",{"_index":657,"title":{},"body":{"classes/CreateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:48",{"_index":656,"title":{},"body":{"classes/CreateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:52",{"_index":664,"title":{},"body":{"classes/CreateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:58",{"_index":1591,"title":{},"body":{"classes/UpdateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:62",{"_index":1585,"title":{},"body":{"classes/UpdateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:66",{"_index":1586,"title":{},"body":{"classes/UpdateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:70",{"_index":1593,"title":{},"body":{"classes/UpdateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:74",{"_index":1592,"title":{},"body":{"classes/UpdateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:78",{"_index":1589,"title":{},"body":{"classes/UpdateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:82",{"_index":1590,"title":{},"body":{"classes/UpdateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:86",{"_index":1588,"title":{},"body":{"classes/UpdateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:90",{"_index":1587,"title":{},"body":{"classes/UpdateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:94",{"_index":1594,"title":{},"body":{"classes/UpdateRescueTeamDto.html":{}}}],["src/rescue/dto/rescue.dto.ts:99",{"_index":1598,"title":{},"body":{"classes/UpdateRescueTeamStatusDto.html":{}}}],["src/rescue/rescue.controller.ts",{"_index":1334,"title":{},"body":{"controllers/RescueController.html":{},"coverage.html":{}}}],["src/rescue/rescue.controller.ts:30",{"_index":1338,"title":{},"body":{"controllers/RescueController.html":{}}}],["src/rescue/rescue.controller.ts:36",{"_index":1339,"title":{},"body":{"controllers/RescueController.html":{}}}],["src/rescue/rescue.controller.ts:42",{"_index":1343,"title":{},"body":{"controllers/RescueController.html":{}}}],["src/rescue/rescue.controller.ts:48",{"_index":1344,"title":{},"body":{"controllers/RescueController.html":{}}}],["src/rescue/rescue.controller.ts:57",{"_index":1348,"title":{},"body":{"controllers/RescueController.html":{}}}],["src/rescue/rescue.controller.ts:66",{"_index":1342,"title":{},"body":{"controllers/RescueController.html":{}}}],["src/rescue/rescue.module.ts",{"_index":1369,"title":{},"body":{"modules/RescueModule.html":{}}}],["src/rescue/rescue.service.ts",{"_index":1371,"title":{},"body":{"injectables/RescueService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/rescue/rescue.service.ts:102",{"_index":1378,"title":{},"body":{"injectables/RescueService.html":{}}}],["src/rescue/rescue.service.ts:120",{"_index":1375,"title":{},"body":{"injectables/RescueService.html":{}}}],["src/rescue/rescue.service.ts:19",{"_index":1372,"title":{},"body":{"injectables/RescueService.html":{}}}],["src/rescue/rescue.service.ts:25",{"_index":1373,"title":{},"body":{"injectables/RescueService.html":{}}}],["src/rescue/rescue.service.ts:34",{"_index":1374,"title":{},"body":{"injectables/RescueService.html":{}}}],["src/rescue/rescue.service.ts:60",{"_index":1376,"title":{},"body":{"injectables/RescueService.html":{}}}],["src/rescue/rescue.service.ts:93",{"_index":1377,"title":{},"body":{"injectables/RescueService.html":{}}}],["src/sos/dto/sos.dto.ts",{"_index":591,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/sos/dto/sos.dto.ts:33",{"_index":595,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{}}}],["src/sos/dto/sos.dto.ts:37",{"_index":601,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{}}}],["src/sos/dto/sos.dto.ts:41",{"_index":600,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{}}}],["src/sos/dto/sos.dto.ts:45",{"_index":602,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{}}}],["src/sos/dto/sos.dto.ts:48",{"_index":598,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{}}}],["src/sos/dto/sos.dto.ts:51",{"_index":608,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{}}}],["src/sos/dto/sos.dto.ts:55",{"_index":605,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{}}}],["src/sos/dto/sos.dto.ts:60",{"_index":1548,"title":{},"body":{"classes/UpdateEmergencyStatusDto.html":{}}}],["src/sos/dto/sos.dto.ts:64",{"_index":1547,"title":{},"body":{"classes/UpdateEmergencyStatusDto.html":{}}}],["src/sos/sos.controller.ts",{"_index":1426,"title":{},"body":{"controllers/SosController.html":{},"coverage.html":{}}}],["src/sos/sos.controller.ts:20",{"_index":1434,"title":{},"body":{"controllers/SosController.html":{}}}],["src/sos/sos.controller.ts:30",{"_index":1445,"title":{},"body":{"controllers/SosController.html":{}}}],["src/sos/sos.controller.ts:40",{"_index":1443,"title":{},"body":{"controllers/SosController.html":{}}}],["src/sos/sos.controller.ts:47",{"_index":1437,"title":{},"body":{"controllers/SosController.html":{}}}],["src/sos/sos.controller.ts:55",{"_index":1440,"title":{},"body":{"controllers/SosController.html":{}}}],["src/sos/sos.module.ts",{"_index":1470,"title":{},"body":{"modules/SosModule.html":{}}}],["src/sos/sos.service.ts",{"_index":1472,"title":{},"body":{"injectables/SosService.html":{},"coverage.html":{}}}],["src/sos/sos.service.ts:13",{"_index":1473,"title":{},"body":{"injectables/SosService.html":{}}}],["src/sos/sos.service.ts:171",{"_index":1478,"title":{},"body":{"injectables/SosService.html":{}}}],["src/sos/sos.service.ts:193",{"_index":1476,"title":{},"body":{"injectables/SosService.html":{}}}],["src/sos/sos.service.ts:20",{"_index":1474,"title":{},"body":{"injectables/SosService.html":{}}}],["src/sos/sos.service.ts:227",{"_index":1475,"title":{},"body":{"injectables/SosService.html":{}}}],["src/sos/sos.service.ts:86",{"_index":1479,"title":{},"body":{"injectables/SosService.html":{}}}],["src/supabase/supabase.module.ts",{"_index":1526,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["src/supabase/supabase.service.ts",{"_index":1528,"title":{},"body":{"injectables/SupabaseService.html":{},"coverage.html":{}}}],["src/supabase/supabase.service.ts:9",{"_index":1529,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["src/user/dto/user.dto.ts",{"_index":1571,"title":{},"body":{"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts:13",{"_index":1572,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["src/user/dto/user.dto.ts:17",{"_index":1573,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["src/user/dto/user.dto.ts:21",{"_index":1575,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["src/user/dto/user.dto.ts:25",{"_index":1574,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["src/user/dto/user.dto.ts:39",{"_index":1625,"title":{},"body":{"classes/UserProfileResponseDto.html":{}}}],["src/user/dto/user.dto.ts:40",{"_index":1623,"title":{},"body":{"classes/UserProfileResponseDto.html":{}}}],["src/user/dto/user.dto.ts:41",{"_index":1624,"title":{},"body":{"classes/UserProfileResponseDto.html":{}}}],["src/user/dto/user.dto.ts:42",{"_index":1626,"title":{},"body":{"classes/UserProfileResponseDto.html":{}}}],["src/user/dto/user.dto.ts:43",{"_index":1629,"title":{},"body":{"classes/UserProfileResponseDto.html":{}}}],["src/user/dto/user.dto.ts:44",{"_index":1631,"title":{},"body":{"classes/UserProfileResponseDto.html":{}}}],["src/user/dto/user.dto.ts:45",{"_index":1632,"title":{},"body":{"classes/UserProfileResponseDto.html":{}}}],["src/user/dto/user.dto.ts:46",{"_index":1630,"title":{},"body":{"classes/UserProfileResponseDto.html":{}}}],["src/user/dto/user.dto.ts:47",{"_index":1627,"title":{},"body":{"classes/UserProfileResponseDto.html":{}}}],["src/user/dto/user.dto.ts:48",{"_index":1622,"title":{},"body":{"classes/UserProfileResponseDto.html":{}}}],["src/user/dto/user.dto.ts:49",{"_index":1633,"title":{},"body":{"classes/UserProfileResponseDto.html":{}}}],["src/user/dto/user.dto.ts:50",{"_index":1628,"title":{},"body":{"classes/UserProfileResponseDto.html":{}}}],["src/user/user.controller.ts",{"_index":1600,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:13",{"_index":1604,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:18",{"_index":1607,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":1620,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:21",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:6",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["stack",{"_index":1736,"title":{},"body":{"index.html":{}}}],["staff",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["staff)'})@apibody({type",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["start",{"_index":1777,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1779,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":767,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["started",{"_index":1721,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":38,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"injectables/HospitalService.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["statements",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":1809,"title":{},"body":{"index.html":{}}}],["stats",{"_index":1785,"title":{},"body":{"index.html":{}}}],["status",{"_index":52,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateRescueTeamDto.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"classes/UserProfileResponseDto.html":{},"index.html":{}}}],["status_update",{"_index":1510,"title":{},"body":{"injectables/SosService.html":{}}}],["statuscode",{"_index":1009,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["store",{"_index":1198,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["storeusersocket",{"_index":1144,"title":{},"body":{"classes/NotificationGateway.html":{}}}],["storeusersocket(userid",{"_index":1176,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["strategies/jwt.strategy",{"_index":373,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":1064,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":14,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["string(role).touppercase",{"_index":1424,"title":{},"body":{"guards/RolesGuard.html":{}}}],["string(user.role).touppercase",{"_index":1423,"title":{},"body":{"guards/RolesGuard.html":{}}}],["structure",{"_index":1007,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"index.html":{}}}],["sub",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{}}}],["subsequent",{"_index":1827,"title":{},"body":{"index.html":{}}}],["successful",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["successful'})@apiresponse({status",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["successfully",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PrismaService.html":{},"injectables/SupabaseService.html":{}}}],["summary",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabase",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"index.html":{}}}],["supabase.service",{"_index":1527,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["supabase/supabase",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["supabase/supabase.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["supabase_service_role_key",{"_index":1532,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["supabase_url",{"_index":1538,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["supabaseclient",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["supabaselogin",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabaselogin(@body",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabaselogin(body",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["supabasemodule",{"_index":101,"title":{"modules/SupabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SupabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["supabaseservice",{"_index":1525,"title":{"injectables/SupabaseService.html":{}},"body":{"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":1530,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["supabaseuser",{"_index":338,"title":{"interfaces/SupabaseUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{},"coverage.html":{}}}],["supabaseuser.email",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["supabaseuser.id",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["supabaseuserid",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["super",{"_index":1044,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["super.canactivate(context",{"_index":1055,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1834,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1745,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1835,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":1722,"title":{},"body":{"index.html":{},"properties.html":{}}}],["t",{"_index":1390,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["table",{"_index":1312,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["tables",{"_index":1304,"title":{},"body":{"injectables/PrismaService.html":{}}}],["tables.map((table",{"_index":1310,"title":{},"body":{"injectables/PrismaService.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":1381,"title":{},"body":{"injectables/RescueService.html":{},"index.html":{}}}],["teams",{"_index":735,"title":{},"body":{"injectables/DashboardService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"index.html":{}}}],["tech",{"_index":1735,"title":{},"body":{"index.html":{}}}],["test",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["thailand",{"_index":1725,"title":{},"body":{"index.html":{},"properties.html":{}}}],["this.$connect",{"_index":1300,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":1303,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$executerawunsafe(`truncate",{"_index":1311,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$transaction",{"_index":1309,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.findorcreateuser(supabaseuser",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.generateauthurl(oauthlogindto.provider",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getuserfromaccesstoken(accesstoken",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.handleoauthcallback(provider",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(logindto",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.loginwithsupabasetoken(body.access_token",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtoken(refreshtoken",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registerdto",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signjwt(payload",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatetoken(token",{"_index":1215,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.client",{"_index":1540,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["this.client.auth.getsession().then((session",{"_index":1542,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["this.configservice.get(\"jwt_refresh_expires_in",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get(\"jwt_refresh_secret",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get(\"oauth_redirect_url",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get(\"supabase_service_role_key",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get(\"supabase_url",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.dashboardservice.getactiveemergencies",{"_index":704,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboardservice.gethospitalcapacities",{"_index":708,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboardservice.getstats",{"_index":702,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboardservice.getteamlocations",{"_index":706,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.disconnect(client",{"_index":1196,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.extracttoken(client",{"_index":1195,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.findone(hospitalid",{"_index":941,"title":{},"body":{"injectables/HospitalService.html":{}}}],["this.findone(id",{"_index":935,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["this.findorcreateuser(supabaseuser",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hospitalservice.acceptemergency(hospitalid",{"_index":870,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.hospitalservice.create(createhospitaldto",{"_index":845,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.hospitalservice.findall(search",{"_index":848,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.hospitalservice.findnearbyhospitals(latitude",{"_index":877,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.hospitalservice.findone(id",{"_index":852,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.hospitalservice.getemergencyresponse(responseid",{"_index":890,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.hospitalservice.notifyrescueteam(responseid",{"_index":887,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.hospitalservice.remove(id",{"_index":860,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.hospitalservice.update(id",{"_index":856,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.hospitalservice.updatecapacity(id",{"_index":865,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.hospitalservice.updateemergencyresponsestatus(responseid",{"_index":883,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.hospitalservice.updateemergencyresponsestatusmanual(responseid",{"_index":895,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.jwtservice.sign(newpayload",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.debug(`received",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.logger.error",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["this.logger.error(\"invalid",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error(\"user",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error(`cannot",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error(`connection",{"_index":1209,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.logger.error(`emergency",{"_index":944,"title":{},"body":{"injectables/HospitalService.html":{}}}],["this.logger.error(`error",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.logger.error(`hospital",{"_index":931,"title":{},"body":{"injectables/HospitalService.html":{}}}],["this.logger.error(`oauth",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error(`unsupported",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":875,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["this.logger.log(\"creating",{"_index":923,"title":{},"body":{"injectables/HospitalService.html":{}}}],["this.logger.log(\"hospitalcontroller",{"_index":840,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.logger.log(\"hospitalservice",{"_index":922,"title":{},"body":{"injectables/HospitalService.html":{}}}],["this.logger.log(\"notification",{"_index":1192,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.logger.log(\"post",{"_index":843,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.logger.log(\"user",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`accepting",{"_index":940,"title":{},"body":{"injectables/HospitalService.html":{}}}],["this.logger.log(`client",{"_index":1207,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.logger.log(`created",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`delete",{"_index":859,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.logger.log(`finding",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HospitalService.html":{}}}],["this.logger.log(`generated",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`generating",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`get",{"_index":847,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.logger.log(`handling",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`logging",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`login",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`oauth",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`post",{"_index":868,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.logger.log(`put",{"_index":855,"title":{},"body":{"controllers/HospitalController.html":{}}}],["this.logger.log(`redirect",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`refreshing",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`registering",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`removing",{"_index":937,"title":{},"body":{"injectables/HospitalService.html":{}}}],["this.logger.log(`successfully",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`token",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`updating",{"_index":934,"title":{},"body":{"injectables/HospitalService.html":{}}}],["this.logger.log(`validating",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn(\"missing",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.logger.warn(`email",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn(`invalid",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn(`role",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn(`user",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notificationgateway.broadcastemergency",{"_index":1499,"title":{},"body":{"injectables/SosService.html":{}}}],["this.notificationgateway.broadcaststatusupdate",{"_index":1514,"title":{},"body":{"injectables/SosService.html":{}}}],["this.notificationgateway.sendtouser",{"_index":1267,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.notificationservice.createnotification",{"_index":958,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/SosService.html":{}}}],["this.notificationservice.findall(user.id",{"_index":1120,"title":{},"body":{"controllers/NotificationController.html":{}}}],["this.notificationservice.markallasread(user.id",{"_index":1126,"title":{},"body":{"controllers/NotificationController.html":{}}}],["this.notificationservice.markasread(id",{"_index":1123,"title":{},"body":{"controllers/NotificationController.html":{}}}],["this.prisma.$queryraw",{"_index":968,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["this.prisma.$transaction(async",{"_index":1504,"title":{},"body":{"injectables/SosService.html":{}}}],["this.prisma.emergencyrequest.count",{"_index":729,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.prisma.emergencyrequest.create",{"_index":1481,"title":{},"body":{"injectables/SosService.html":{}}}],["this.prisma.emergencyrequest.findmany",{"_index":739,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/SosService.html":{}}}],["this.prisma.emergencyrequest.findunique",{"_index":942,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/SosService.html":{}}}],["this.prisma.emergencyrequest.update",{"_index":957,"title":{},"body":{"injectables/HospitalService.html":{}}}],["this.prisma.emergencyresponse.create",{"_index":951,"title":{},"body":{"injectables/HospitalService.html":{}}}],["this.prisma.notification.create",{"_index":1257,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.prisma.notification.findmany",{"_index":1271,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.prisma.notification.update",{"_index":1268,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.prisma.notification.updatemany",{"_index":1270,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.prisma.organization.count",{"_index":736,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.prisma.organization.create",{"_index":924,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["this.prisma.organization.findfirst",{"_index":928,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["this.prisma.organization.findmany",{"_index":746,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["this.prisma.organization.update",{"_index":936,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/RescueService.html":{}}}],["this.prisma.user.create",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.findmany",{"_index":1491,"title":{},"body":{"injectables/SosService.html":{}}}],["this.prisma.user.findunique",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["this.reflector.getallandoverride",{"_index":1415,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.reflector.getallandoverride(\"ispublic",{"_index":1047,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.removeusersocket(client.id",{"_index":1210,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.rescueservice.create(createrescueteamdto",{"_index":1353,"title":{},"body":{"controllers/RescueController.html":{}}}],["this.rescueservice.findall(search",{"_index":1354,"title":{},"body":{"controllers/RescueController.html":{}}}],["this.rescueservice.findavailableteams(latitude",{"_index":1364,"title":{},"body":{"controllers/RescueController.html":{}}}],["this.rescueservice.findone(id",{"_index":1355,"title":{},"body":{"controllers/RescueController.html":{}}}],["this.rescueservice.update(id",{"_index":1356,"title":{},"body":{"controllers/RescueController.html":{}}}],["this.rescueservice.updatestatus(id",{"_index":1359,"title":{},"body":{"controllers/RescueController.html":{}}}],["this.server",{"_index":1231,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.server.emit(\"status",{"_index":1236,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.server.to(`role:${role}`).emit(event",{"_index":1230,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.server.to(`user:${userid}`).emit(event",{"_index":1229,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.sosservice.createemergencyrequest(createsosdto",{"_index":1452,"title":{},"body":{"controllers/SosController.html":{}}}],["this.sosservice.getallemergencyrequests",{"_index":1461,"title":{},"body":{"controllers/SosController.html":{}}}],["this.sosservice.getemergencyrequestbyid(id",{"_index":1465,"title":{},"body":{"controllers/SosController.html":{}}}],["this.sosservice.getemergencyrequests(user.id",{"_index":1457,"title":{},"body":{"controllers/SosController.html":{}}}],["this.sosservice.updatestatus(id",{"_index":1454,"title":{},"body":{"controllers/SosController.html":{}}}],["this.storeusersocket(user.id",{"_index":1200,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.supabase",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.supabase.auth.exchangecodeforsession(code",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.supabase.auth.getuser(access_token",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.supabase.auth.getuser(accesstoken",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.supabase.auth.refreshsession",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.supabase.auth.signinwithoauth",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findone(user.id",{"_index":1613,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateprofile(user.id",{"_index":1615,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersocketmap.delete(userid",{"_index":1225,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.usersocketmap.entries",{"_index":1220,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.usersocketmap.get(userid).add(socketid",{"_index":1218,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.usersocketmap.has(userid",{"_index":1216,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.usersocketmap.set(userid",{"_index":1217,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["this.validatetoken(token",{"_index":1197,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["through",{"_index":1732,"title":{},"body":{"index.html":{}}}],["throw",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/HospitalService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"injectables/SupabaseService.html":{},"injectables/UserService.html":{}}}],["throws",{"_index":1040,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["time",{"_index":1265,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["timestamp",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["title",{"_index":642,"title":{},"body":{"classes/CreateNotificationDto.html":{},"injectables/HospitalService.html":{},"classes/MarkAsReadDto.html":{},"injectables/NotificationService.html":{},"injectables/SosService.html":{}}}],["to(\"role:emergency_center",{"_index":1232,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["to(\"role:hospital",{"_index":1233,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["to(\"role:rescue_team",{"_index":1234,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["token",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"classes/NotificationGateway.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"interfaces/TokenPayload.html":{},"index.html":{}}}],["token'})@apibody({schema",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["token'})@apibody({type",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["token'})@isnotempty()@isstring",{"_index":1315,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["token_type",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{}}}],["tokenpayload",{"_index":263,"title":{"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"coverage.html":{}}}],["tokens",{"_index":1099,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["total",{"_index":728,"title":{},"body":{"injectables/DashboardService.html":{}}}],["totalbeds",{"_index":45,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{}}}],["totalemergencies",{"_index":722,"title":{},"body":{"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{}}}],["tracking",{"_index":1796,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["transforminterceptor",{"_index":1394,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/HospitalService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"injectables/RescueService.html":{},"guards/RolesGuard.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/NotificationGateway.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"interfaces/TokenPayload.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"injectables/DashboardService.html":{},"classes/DashboardStatsResponseDto.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"injectables/SupabaseService.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/TokenPayload-1.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"controllers/UserController.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1846,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1005,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{}}}],["types",{"_index":1744,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception(\"authentication",{"_index":1056,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception(\"cannot",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["unauthorizedexception(\"invalid",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(\"this",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(\"user",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception(\"validation",{"_index":1074,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('cannot",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":1324,"title":{},"body":{"classes/RegisterDto.html":{}}}],["undefined})@apiresponse({status",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@isnotempty()@isstring()@isin(['google",{"_index":1274,"title":{},"body":{"classes/OAuthLoginDto.html":{}}}],["unknown",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"injectables/NotificationService.html":{},"injectables/RescueService.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1844,"title":{},"body":{"properties.html":{}}}],["update",{"_index":780,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/NotificationGateway.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"injectables/UserService.html":{},"index.html":{}}}],["update(@param(\"id",{"_index":854,"title":{},"body":{"controllers/HospitalController.html":{}}}],["update(id",{"_index":817,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{}}}],["updatecapacity",{"_index":781,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["updatecapacity(id",{"_index":820,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["updatecapacitydto",{"_index":821,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["updated",{"_index":1507,"title":{},"body":{"injectables/SosService.html":{}}}],["updatedat",{"_index":1584,"title":{},"body":{"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["updatedemergency",{"_index":1503,"title":{},"body":{"injectables/SosService.html":{}}}],["updatedemergency.id",{"_index":1515,"title":{},"body":{"injectables/SosService.html":{}}}],["updateduser",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["updateemergencyresponsestatus",{"_index":782,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["updateemergencyresponsestatus(@param(\"id",{"_index":880,"title":{},"body":{"controllers/HospitalController.html":{}}}],["updateemergencyresponsestatus(responseid",{"_index":824,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["updateemergencyresponsestatusmanual",{"_index":783,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["updateemergencyresponsestatusmanual(responseid",{"_index":827,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{}}}],["updateemergencystatusdto",{"_index":623,"title":{"classes/UpdateEmergencyStatusDto.html":{}},"body":{"classes/CreateEmergencyRequestDto.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"classes/UpdateEmergencyStatusDto.html":{},"coverage.html":{}}}],["updatehospitalcapacitydto",{"_index":53,"title":{"classes/UpdateHospitalCapacityDto.html":{}},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"coverage.html":{}}}],["updatehospitaldto",{"_index":49,"title":{"classes/UpdateHospitalDto.html":{}},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateHospitalDto.html":{},"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"coverage.html":{}}}],["updateprofile",{"_index":1601,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateprofile(id",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofile(user",{"_index":1605,"title":{},"body":{"controllers/UserController.html":{}}}],["updateprofiledto",{"_index":1570,"title":{"classes/UpdateProfileDto.html":{}},"body":{"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateprofiledto.firstname",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofiledto.lastname",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofiledto.phone",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["updaterescueteamdto",{"_index":670,"title":{"classes/UpdateRescueTeamDto.html":{}},"body":{"classes/CreateRescueTeamDto.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"coverage.html":{}}}],["updaterescueteamstatusdto",{"_index":671,"title":{"classes/UpdateRescueTeamStatusDto.html":{}},"body":{"classes/CreateRescueTeamDto.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"coverage.html":{}}}],["updates",{"_index":1815,"title":{},"body":{"index.html":{}}}],["updatestatus",{"_index":1336,"title":{},"body":{"controllers/RescueController.html":{},"injectables/RescueService.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["updatestatus(id",{"_index":1345,"title":{},"body":{"controllers/RescueController.html":{},"injectables/RescueService.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["updatestatusdto",{"_index":1346,"title":{},"body":{"controllers/RescueController.html":{},"injectables/RescueService.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["updatestatusdto.currentemergencyid",{"_index":1384,"title":{},"body":{"injectables/RescueService.html":{}}}],["updatestatusdto.notes",{"_index":1385,"title":{},"body":{"injectables/RescueService.html":{},"injectables/SosService.html":{}}}],["updatestatusdto.status",{"_index":1383,"title":{},"body":{"injectables/RescueService.html":{},"injectables/SosService.html":{}}}],["urgent",{"_index":611,"title":{},"body":{"classes/CreateEmergencyRequestDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["url",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"injectables/SupabaseService.html":{},"index.html":{}}}],["use",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["usefactory",{"_index":378,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"controllers/NotificationController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"controllers/NotificationController.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('me')@apioperation({summary",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":1621,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":1117,"title":{},"body":{"controllers/NotificationController.html":{},"controllers/SosController.html":{},"controllers/UserController.html":{}}}],["user.decorator.ts",{"_index":1659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.firstname",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/NotificationController.html":{},"classes/NotificationGateway.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{}}}],["user.lastname",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.phone",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["user.role",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"classes/NotificationGateway.html":{},"guards/RolesGuard.html":{},"interfaces/TokenPayload.html":{}}}],["user.role.tostring",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.service",{"_index":1609,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.status",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user.supabaseuserid",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["user/user.module",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user@example.com",{"_index":1091,"title":{},"body":{"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["user@example.com'})@isnotempty()@isemail",{"_index":1080,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["user_metadata",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthTokens.html":{},"interfaces/SupabaseUser.html":{},"interfaces/TokenPayload-1.html":{}}}],["user_metadata.avatar_url",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_metadata.full_name",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_metadata.full_name.split",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_metadata.name",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_metadata.name.split",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_metadata.picture",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercontroller",{"_index":1599,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":643,"title":{},"body":{"classes/CreateNotificationDto.html":{},"injectables/HospitalService.html":{},"injectables/JwtStrategy.html":{},"classes/MarkAsReadDto.html":{},"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"injectables/SosService.html":{},"interfaces/TokenPayload.html":{}}}],["usermodule",{"_index":102,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userprofileresponsedto",{"_index":1582,"title":{"classes/UserProfileResponseDto.html":{}},"body":{"classes/UpdateProfileDto.html":{},"controllers/UserController.html":{},"classes/UserProfileResponseDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userrole",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DashboardController.html":{},"controllers/HospitalController.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"controllers/RescueController.html":{},"guards/RolesGuard.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{},"miscellaneous/variables.html":{}}}],["userrole.admin",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{}}}],["userrole.emergency_center",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"controllers/DashboardController.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["userrole.hospital",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HospitalController.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["userrole.patient",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrole.rescue_team",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"controllers/RescueController.html":{},"controllers/SosController.html":{},"injectables/SosService.html":{}}}],["users",{"_index":927,"title":{},"body":{"injectables/HospitalService.html":{},"injectables/PrismaService.html":{},"injectables/RescueService.html":{},"injectables/SosService.html":{},"controllers/UserController.html":{},"index.html":{}}}],["userservice",{"_index":1608,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersocketmap",{"_index":1133,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["userstatus",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateProfileDto.html":{},"classes/UserProfileResponseDto.html":{}}}],["userstatus.active",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["uses",{"_index":1812,"title":{},"body":{"index.html":{}}}],["using",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RescueService.html":{}}}],["utilities",{"_index":1789,"title":{},"body":{"index.html":{}}}],["v14",{"_index":1757,"title":{},"body":{"index.html":{}}}],["validate",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":1060,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validates",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"classes/NotificationGateway.html":{}}}],["validatetoken(token",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["validating",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["validator",{"_index":27,"title":{},"body":{"classes/AcceptEmergencyDto.html":{},"classes/CreateEmergencyRequestDto.html":{},"classes/CreateHospitalDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateRescueTeamDto.html":{},"classes/DashboardStatsResponseDto.html":{},"classes/LoginDto.html":{},"classes/MarkAsReadDto.html":{},"classes/OAuthCallbackDto.html":{},"classes/OAuthLoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RegisterDto.html":{},"classes/ReportQueryDto.html":{},"classes/UpdateEmergencyStatusDto.html":{},"classes/UpdateHospitalCapacityDto.html":{},"classes/UpdateHospitalDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{},"classes/UserProfileResponseDto.html":{},"dependencies.html":{}}}],["validproviders",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["validproviders.includes(provider",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HospitalService.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotificationGateway.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1771,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vehicletypes",{"_index":653,"title":{},"body":{"classes/CreateRescueTeamDto.html":{},"classes/UpdateRescueTeamDto.html":{},"classes/UpdateRescueTeamStatusDto.html":{}}}],["verify",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["version",{"_index":1842,"title":{},"body":{"properties.html":{}}}],["via",{"_index":1266,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["void",{"_index":993,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotificationGateway.html":{}}}],["warn",{"_index":1294,"title":{},"body":{"injectables/PrismaService.html":{}}}],["way",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["websocket",{"_index":1193,"title":{},"body":{"classes/NotificationGateway.html":{},"injectables/NotificationService.html":{},"interfaces/TokenPayload.html":{}}}],["websocketgateway",{"_index":1179,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["websocketserver",{"_index":1149,"title":{},"body":{"classes/NotificationGateway.html":{},"interfaces/TokenPayload.html":{}}}],["weekly",{"_index":762,"title":{},"body":{"classes/DashboardStatsResponseDto.html":{},"classes/ReportQueryDto.html":{},"miscellaneous/enumerations.html":{}}}],["whether",{"_index":1030,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["without",{"_index":1052,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["yarn",{"_index":1760,"title":{},"body":{"index.html":{}}}],["yes",{"_index":796,"title":{},"body":{"controllers/HospitalController.html":{},"injectables/HospitalService.html":{},"controllers/RescueController.html":{},"injectables/RescueService.html":{}}}],["zoom",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/HospitalModule.html":{},"modules/NotificationModule.html":{},"modules/PrismaModule.html":{},"modules/RescueModule.html":{},"modules/SosModule.html":{},"modules/SupabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptEmergencyDto.html":{"url":"classes/AcceptEmergencyDto.html","title":"class - AcceptEmergencyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptEmergencyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hospital/dto/hospital.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                emergencyId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emergencyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:93\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsNumber,\n  IsEmail,\n  IsUUID,\n  IsEnum,\n} from \"class-validator\";\n\nexport enum HospitalStatus {\n  ACTIVE = \"ACTIVE\",\n  INACTIVE = \"INACTIVE\",\n  MAINTENANCE = \"MAINTENANCE\",\n}\n\nexport class CreateHospitalDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  address: string;\n\n  @IsString()\n  city: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsString()\n  postalCode: string;\n\n  @IsNumber()\n  latitude: number;\n\n  @IsNumber()\n  longitude: number;\n\n  @IsString()\n  contactPhone: string;\n\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @IsOptional()\n  @IsNumber()\n  totalBeds?: number;\n\n  @IsOptional()\n  @IsNumber()\n  availableBeds?: number;\n\n  @IsOptional()\n  @IsNumber()\n  icuBeds?: number;\n\n  @IsOptional()\n  @IsNumber()\n  availableIcuBeds?: number;\n}\n\nexport class UpdateHospitalDto extends CreateHospitalDto {\n  @IsOptional()\n  @IsEnum(HospitalStatus)\n  status?: HospitalStatus;\n}\n\nexport class UpdateHospitalCapacityDto {\n  @IsNumber()\n  totalBeds: number;\n\n  @IsNumber()\n  availableBeds: number;\n\n  @IsNumber()\n  icuBeds: number;\n\n  @IsNumber()\n  availableIcuBeds: number;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n}\n\nexport class AcceptEmergencyDto {\n  @IsUUID()\n  emergencyId: string;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHello\n                            \n                            \n                                    \n                                    \n                                getHelloWithPrefix\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHelloWithPrefix\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHelloWithPrefix()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\nimport { Public } from \"./auth/decorators/public.decorator\";\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get() // สำหรับ /api (ตาม global prefix)\n  @Public()\n  getHelloWithPrefix(): { status: string; timestamp: string } {\n    return this.appService.getHello();\n  }\n\n  @Get(\"/\") // สำหรับ / โดยตรง (ข้าม global prefix)\n  @Public()\n  getHello(): { status: string; timestamp: string } {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nHospitalModule\n\nHospitalModule\n\nAppModule -->\n\nHospitalModule->AppModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nAppModule -->\n\nNotificationModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nRescueModule\n\nRescueModule\n\nAppModule -->\n\nRescueModule->AppModule\n\n\n\n\n\nSosModule\n\nSosModule\n\nAppModule -->\n\nSosModule->AppModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nAppModule -->\n\nSupabaseModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DashboardModule\n                        \n                        \n                            HospitalModule\n                        \n                        \n                            NotificationModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            RescueModule\n                        \n                        \n                            SosModule\n                        \n                        \n                            SupabaseModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { PrismaModule } from \"./prisma/prisma.module\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { UserModule } from \"./user/user.module\";\nimport { SosModule } from \"./sos/sos.module\";\nimport { HospitalModule } from \"./hospital/hospital.module\";\nimport { RescueModule } from \"./rescue/rescue.module\";\nimport { DashboardModule } from \"./dashboard/dashboard.module\";\nimport { NotificationModule } from \"./notification/notification.module\";\nimport { SupabaseModule } from \"./supabase/supabase.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: \".env\",\n    }),\n    SupabaseModule,\n    PrismaModule,\n    AuthModule,\n    UserModule,\n    SosModule,\n    HospitalModule,\n    RescueModule,\n    DashboardModule,\n    NotificationModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class AppService {\n  getHello(): { status: string; timestamp: string } {\n    return {\n      status: \"ok Let's go!\",\n      timestamp: new Date().toISOString(),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                oauthCallback\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                oauthLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                supabaseLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('me')@ApiOperation({summary: 'Get authenticated user profile'})@ApiBearerAuth()@ApiResponse({status: 200, description: 'User profile retrieved'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:202\n                        \n                    \n\n\n            \n                \n                        Test endpoint to verify user authentication\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')@ApiOperation({summary: 'Login with email and password'})@ApiBody({type: LoginDto})@ApiResponse({status: 200, description: 'Login successful'})@ApiResponse({status: 401, description: 'Login failed'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:84\n                        \n                    \n\n\n            \n                \n                        Login with email and password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        oauthCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    oauthCallback(provider: string, code: string, accessToken: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('callback')@ApiOperation({summary: 'Handle OAuth callback'})@ApiQuery({name: 'provider', required: true, description: 'OAuth provider (google, facebook, apple)'})@ApiQuery({name: 'code', required: false, description: 'Authorization code'})@ApiQuery({name: 'access_token', required: false, description: 'Access token for implicit flow'})@ApiResponse({status: 200, description: 'OAuth callback successful'})@ApiResponse({status: 400, description: 'Missing provider or code/access_token'})@ApiResponse({status: 401, description: 'Cannot authenticate with provider'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:134\n                        \n                    \n\n\n            \n                \n                        Handles OAuth callback from providers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                provider\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        oauthLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    oauthLogin(oauthLoginDto: OAuthLoginDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login/oauth')@ApiOperation({summary: 'Initiate OAuth login flow'})@ApiBody({type: OAuthLoginDto})@ApiResponse({status: 200, description: 'OAuth URL generated'})@ApiResponse({status: 401, description: 'Cannot initiate OAuth login'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:112\n                        \n                    \n\n\n            \n                \n                        Initiates OAuth login flow by redirecting to the appropriate provider\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oauthLoginDto\n                                            \n                                                            OAuthLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(refreshToken: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('refresh')@ApiOperation({summary: 'Refresh JWT token'})@ApiBody({type: RefreshTokenDto})@ApiResponse({status: 200, description: 'Token refreshed successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:214\n                        \n                    \n\n\n            \n                \n                        Refreshes the JWT token using a refresh token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')@ApiOperation({summary: 'Register a new user (staff)'})@ApiBody({type: RegisterDto})@ApiResponse({status: 201, description: 'Registration successful'})@ApiResponse({status: 400, description: 'Registration failed'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:50\n                        \n                    \n\n\n            \n                \n                        Register a new user (staff) with email and password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        supabaseLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    supabaseLogin(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('supabase-login')@ApiOperation({summary: 'Login with Supabase token'})@ApiBody({schema: undefined})@ApiResponse({status: 200, description: 'Supabase login successful'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:222\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Query,\n  Req,\n  Res,\n  HttpStatus,\n  UnauthorizedException,\n  Logger,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { Response } from \"express\";\nimport { AuthService } from \"./auth.service\";\nimport { OAuthLoginDto, RegisterDto, LoginDto, RefreshTokenDto } from \"./dto/auth.dto\"; // เพิ่ม RefreshTokenDto\nimport { JwtAuthGuard } from \"./guards/jwt-auth.guard\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { Public } from \"./decorators/public.decorator\";\nimport { UserRole } from \"@prisma/client\";\nimport { TokenPayload } from \"../common/interfaces/auth.interface\";\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n  ApiBody,\n  ApiQuery,\n} from \"@nestjs/swagger\";\n\n@ApiTags(\"Auth\")\n@Controller(\"auth\")\nexport class AuthController {\n  private readonly logger = new Logger(AuthController.name);\n\n  constructor(\n    private readonly authService: AuthService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * Register a new user (staff) with email and password\n   */\n  @Public()\n  @Post(\"register\")\n  @ApiOperation({ summary: \"Register a new user (staff)\" })\n  @ApiBody({ type: RegisterDto })\n  @ApiResponse({ status: 201, description: \"Registration successful\" })\n  @ApiResponse({ status: 400, description: \"Registration failed\" })\n  async register(@Body() registerDto: RegisterDto, @Res() res: Response) {\n    try {\n      const user = await this.authService.register(registerDto);\n      return res.status(HttpStatus.CREATED).json({\n        message: \"Registration successful\",\n        user: {\n          id: user.id,\n          email: user.email,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          phone: user.phone,\n          role: user.role,\n          status: user.status,\n          supabaseUserId: user.supabaseUserId,\n        },\n      });\n    } catch (error) {\n      this.logger.error(`Error during registration: ${error.message}`, error.stack);\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        message: \"Registration failed\",\n        error: error.message,\n      });\n    }\n  }\n\n  /**\n   * Login with email and password\n   */\n  @Public()\n  @Post(\"login\")\n  @ApiOperation({ summary: \"Login with email and password\" })\n  @ApiBody({ type: LoginDto })\n  @ApiResponse({ status: 200, description: \"Login successful\" })\n  @ApiResponse({ status: 401, description: \"Login failed\" })\n  async login(@Body() loginDto: LoginDto, @Res() res: Response) {\n    try {\n      const authResult = await this.authService.login(loginDto);\n      return res.status(HttpStatus.OK).json({\n        message: \"Login successful\",\n        access_token: authResult.access_token,\n        refresh_token: authResult.refresh_token,\n        token_type: authResult.token_type,\n        expires_in: authResult.expires_in,\n      });\n    } catch (error) {\n      this.logger.error(`Error during login: ${error.message}`, error.stack);\n      return res.status(HttpStatus.UNAUTHORIZED).json({\n        message: \"Login failed\",\n        error: error.message,\n      });\n    }\n  }\n\n  /**\n   * Initiates OAuth login flow by redirecting to the appropriate provider\n   */\n  @Public()\n  @Post(\"login/oauth\")\n  @ApiOperation({ summary: \"Initiate OAuth login flow\" })\n  @ApiBody({ type: OAuthLoginDto })\n  @ApiResponse({ status: 200, description: \"OAuth URL generated\" })\n  @ApiResponse({ status: 401, description: \"Cannot initiate OAuth login\" })\n  async oauthLogin(@Body() oauthLoginDto: OAuthLoginDto, @Res() res: Response) {\n    try {\n      const authUrl = await this.authService.generateAuthUrl(oauthLoginDto.provider);\n      return res.status(HttpStatus.OK).json({ url: authUrl });\n    } catch (error) {\n      this.logger.error(`Error in OAuth login: ${error.message}`, error.stack);\n      throw new UnauthorizedException(\"Cannot initiate OAuth login\");\n    }\n  }\n\n  /**\n   * Handles OAuth callback from providers\n   */\n  @Public()\n  @Get(\"callback\")\n  @ApiOperation({ summary: \"Handle OAuth callback\" })\n  @ApiQuery({ name: \"provider\", required: true, description: \"OAuth provider (google, facebook, apple)\" })\n  @ApiQuery({ name: \"code\", required: false, description: \"Authorization code\" })\n  @ApiQuery({ name: \"access_token\", required: false, description: \"Access token for implicit flow\" })\n  @ApiResponse({ status: 200, description: \"OAuth callback successful\" })\n  @ApiResponse({ status: 400, description: \"Missing provider or code/access_token\" })\n  @ApiResponse({ status: 401, description: \"Cannot authenticate with provider\" })\n  async oauthCallback(\n    @Query(\"provider\") provider: string,\n    @Query(\"code\") code: string,\n    @Query(\"access_token\") accessToken: string,\n    @Res() res: Response,\n  ) {\n    this.logger.debug(`Received callback -> provider: ${provider}, code: ${code}, access_token: ${accessToken}`);\n\n    if (!provider) {\n      this.logger.warn(\"Missing provider in callback\");\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        message: \"Missing provider in callback\",\n      });\n    }\n\n    try {\n      let authResult;\n      if (code) {\n        // Authorization Code Flow\n        authResult = await this.authService.handleOAuthCallback(provider, code);\n      } else if (accessToken) {\n        // Implicit Flow: Use access_token directly\n        const supabaseUser = await this.authService.getUserFromAccessToken(accessToken);\n        const user = await this.authService.findOrCreateUser(supabaseUser, provider);\n        const payload: TokenPayload = {\n          sub: user.id,\n          email: user.email,\n          role: user.role.toString(),\n        };\n        const jwtAccessToken = this.authService.signJwt(payload);\n        authResult = {\n          access_token: jwtAccessToken,\n          refresh_token: \"\",\n          token_type: \"Bearer\",\n          expires_in: parseInt(this.configService.get(\"JWT_EXPIRES_IN\", \"604800\")),\n        };\n      } else {\n        this.logger.warn(\"Missing code or access_token in callback\");\n        return res.status(HttpStatus.BAD_REQUEST).json({\n          message: \"Missing code or access_token in callback\",\n        });\n      }\n\n      return res.status(HttpStatus.OK).json({\n        message: \"OAuth callback successful\",\n        access_token: authResult.access_token,\n        refresh_token: authResult.refresh_token,\n        token_type: authResult.token_type,\n        expires_in: authResult.expires_in,\n      });\n    } catch (error) {\n      this.logger.error(`Error in OAuth callback: ${error.message}`, error.stack);\n      return res.status(HttpStatus.UNAUTHORIZED).json({\n        message: \"Cannot authenticate with provider\",\n        error: error.message,\n      });\n    }\n  }\n\n  /**\n   * Test endpoint to verify user authentication\n   */\n  @UseGuards(JwtAuthGuard)\n  @Get(\"me\")\n  @ApiOperation({ summary: \"Get authenticated user profile\" })\n  @ApiBearerAuth()\n  @ApiResponse({ status: 200, description: \"User profile retrieved\" })\n  @ApiResponse({ status: 401, description: \"Unauthorized\" })\n  getProfile(@Req() req) {\n    return req.user;\n  }\n\n  /**\n   * Refreshes the JWT token using a refresh token\n   */\n  @Public()\n  @Post(\"refresh\")\n  @ApiOperation({ summary: \"Refresh JWT token\" })\n  @ApiBody({ type: RefreshTokenDto })\n  @ApiResponse({ status: 200, description: \"Token refreshed successfully\" })\n  async refreshToken(@Body(\"refreshToken\") refreshToken: string) {\n    return this.authService.refreshToken(refreshToken);\n  }\n\n  @Post(\"supabase-login\")\n  @ApiOperation({ summary: \"Login with Supabase token\" })\n  @ApiBody({ schema: { type: \"object\", properties: { access_token: { type: \"string\" } } } })\n  @ApiResponse({ status: 200, description: \"Supabase login successful\" })\n  async supabaseLogin(@Body() body: { access_token: string }) {\n    return this.authService.loginWithSupabaseToken(body.access_token);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\nimport { JwtStrategy } from \"./strategies/jwt.strategy\";\nimport { PrismaModule } from \"../prisma/prisma.module\";\nimport { UserModule } from \"../user/user.module\";\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: \"jwt\" }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get(\"JWT_SECRET\"),\n        signOptions: {\n          expiresIn: configService.get(\"JWT_EXPIRES_IN\", \"7d\"),\n        },\n      }),\n    }),\n    PrismaModule,\n    UserModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [AuthService, JwtStrategy, PassportModule, JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                supabase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findOrCreateUser\n                            \n                            \n                                    Async\n                                generateAuthUrl\n                            \n                            \n                                    Public\n                                    Async\n                                getUserFromAccessToken\n                            \n                            \n                                    Async\n                                handleOAuthCallback\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                loginWithSupabaseToken\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Public\n                                signJwt\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, jwtService: JwtService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOrCreateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOrCreateUser(supabaseUser: SupabaseUser, provider: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:263\n                        \n                    \n\n\n            \n                \n                        Find existing user or create a new one based on OAuth user data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                supabaseUser\n                                            \n                                                            SupabaseUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                provider\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateAuthUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAuthUrl(provider: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:169\n                        \n                    \n\n\n            \n                \n                        Generates an authorization URL for the specified OAuth provider\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                provider\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getUserFromAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserFromAccessToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:448\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleOAuthCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleOAuthCallback(provider: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:213\n                        \n                    \n\n\n            \n                \n                        Handles the OAuth callback from providers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                provider\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Login with email and password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loginWithSupabaseToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginWithSupabaseToken(access_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:409\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                access_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:340\n                        \n                    \n\n\n            \n                \n                        Refreshes an access token using a refresh token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Register a new user with email and password (for staff)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        signJwt\n                        \n                    \n                \n            \n            \n                \n                        \n                    signJwt(payload: TokenPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:456\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            TokenPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:314\n                        \n                    \n\n\n            \n                \n                        Validates a JWT token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AuthService.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        supabase\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SupabaseClient\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  UnauthorizedException,\n  InternalServerErrorException,\n  Logger,\n  BadRequestException,\n  ConflictException,\n} from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { createClient, SupabaseClient } from \"@supabase/supabase-js\";\nimport { PrismaService } from \"../prisma/prisma.service\";\nimport {\n  SupabaseUser,\n  TokenPayload,\n  AuthTokens,\n} from \"../common/interfaces/auth.interface\";\nimport { UserRole, UserStatus } from \"@prisma/client\";\nimport * as bcrypt from \"bcrypt\";\nimport { RegisterDto, LoginDto } from \"./dto/auth.dto\";\nimport { config } from \"dotenv\";\nconfig();\n\n@Injectable()\nexport class AuthService {\n  private supabase: SupabaseClient;\n  private readonly logger = new Logger(AuthService.name);\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly jwtService: JwtService,\n    private readonly prisma: PrismaService,\n  ) {\n    this.supabase = createClient(\n      this.configService.get(\"SUPABASE_URL\"),\n      this.configService.get(\"SUPABASE_SERVICE_ROLE_KEY\"),\n    );\n  }\n\n  /**\n   * Register a new user with email and password (for staff)\n   */\n  async register(registerDto: RegisterDto) {\n    this.logger.log(`Registering new user: ${registerDto.email}`);\n\n    const { email, password, firstName, lastName, phone, role } = registerDto;\n\n    // Validate role (PATIENT not allowed for regular registration)\n    const allowedRoles: UserRole[] = [\n      UserRole.EMERGENCY_CENTER,\n      UserRole.HOSPITAL,\n      UserRole.RESCUE_TEAM,\n      UserRole.ADMIN,\n    ];\n    if (role && !allowedRoles.includes(role)) {\n      this.logger.warn(`Role not allowed: ${role}`);\n      throw new BadRequestException(\"This role cannot be registered this way\");\n    }\n\n    try {\n      // Check if email already exists\n      const existingUser = await this.prisma.user.findUnique({\n        where: { email },\n      });\n\n      if (existingUser) {\n        this.logger.warn(`Email already exists: ${email}`);\n        throw new ConflictException(\"This email is already in use\");\n      }\n\n      // Hash password\n      const saltRounds = 10;\n      const hashedPassword = await bcrypt.hash(password, saltRounds);\n\n      // Create new user\n      const user = await this.prisma.user.create({\n        data: {\n          email,\n          password: hashedPassword,\n          firstName,\n          lastName,\n          phone: phone || null,\n          role: role || UserRole.ADMIN,\n          status: UserStatus.ACTIVE,\n        },\n      });\n\n      this.logger.log(`Successfully created new user: ${user.id}`);\n      return user;\n    } catch (error) {\n      this.logger.error(`Error during registration: ${error.message}`, error.stack);\n      throw error instanceof ConflictException\n        ? error\n        : new InternalServerErrorException(\"Cannot register user\");\n    }\n  }\n\n  /**\n   * Login with email and password\n   */\n  async login(loginDto: LoginDto): Promise {\n    this.logger.log(`Logging in user: ${loginDto.email}`);\n\n    const { email, password } = loginDto;\n\n    try {\n      // Find user and select password\n      const user = await this.prisma.user.findUnique({\n        where: { email },\n        select: {\n          id: true,\n          email: true,\n          password: true,\n          role: true,\n          status: true,\n        },\n      });\n\n      if (!user || !user.password) {\n        this.logger.warn(`User not found or no password set: ${email}`);\n        throw new UnauthorizedException(\"Invalid email or password\");\n      }\n\n      // Verify password\n      const isPasswordValid = await bcrypt.compare(password, user.password);\n      if (!isPasswordValid) {\n        this.logger.warn(`Invalid password for: ${email}`);\n        throw new UnauthorizedException(\"Invalid email or password\");\n      }\n\n      if (user.status !== UserStatus.ACTIVE) {\n        this.logger.warn(`User is not active: ${email}`);\n        throw new UnauthorizedException(\"This account is disabled\");\n      }\n\n      // Generate JWT token\n      const payload: TokenPayload = {\n        sub: user.id,\n        email: user.email,\n        role: user.role.toString(),\n      };\n\n      const accessToken = this.jwtService.sign(payload);\n\n      // Generate refresh token using JWT\n      const refreshToken = this.jwtService.sign(payload, {\n        secret: this.configService.get(\"JWT_REFRESH_SECRET\"),\n        expiresIn: this.configService.get(\"JWT_REFRESH_EXPIRES_IN\", \"30d\"),\n      });\n\n      this.logger.log(`Login successful for user: ${user.id}`);\n      return {\n        access_token: accessToken,\n        refresh_token: refreshToken,\n        token_type: \"Bearer\",\n        expires_in: parseInt(this.configService.get(\"JWT_EXPIRES_IN\", \"604800\")),\n      };\n    } catch (error) {\n      this.logger.error(`Error during login: ${error.message}`, error.stack);\n      throw error instanceof UnauthorizedException\n        ? error\n        : new InternalServerErrorException(\"Cannot login\");\n    }\n  }\n\n  /**\n   * Generates an authorization URL for the specified OAuth provider\n   */\n  async generateAuthUrl(provider: string): Promise {\n    const validProviders = [\"google\", \"facebook\", \"apple\"];\n\n    this.logger.log(`Generating auth URL for provider: ${provider}`);\n\n    if (!validProviders.includes(provider)) {\n      this.logger.error(`Unsupported provider: ${provider}`);\n      throw new BadRequestException(`Unsupported provider: ${provider}`);\n    }\n\n    try {\n      const redirectUrl = this.configService.get(\"OAUTH_REDIRECT_URL\");\n      this.logger.log(`Redirect URL: ${redirectUrl}`);\n\n      const { data, error } = await this.supabase.auth.signInWithOAuth({\n        provider: provider as any,\n        options: {\n          redirectTo: redirectUrl,\n          queryParams: {\n            response_type: \"code\",\n            access_type: \"offline\",\n          },\n        },\n      });\n\n      if (error) {\n        this.logger.error(`Cannot generate auth URL: ${error.message}`);\n        throw new InternalServerErrorException(\"Cannot generate authentication URL\");\n      }\n\n      this.logger.log(`Successfully generated auth URL: ${data.url}`);\n      return data.url;\n    } catch (error) {\n      this.logger.error(\n        `Error generating ${provider} auth URL: ${error.message}`,\n        error.stack,\n      );\n      throw new InternalServerErrorException(\"Cannot initiate OAuth flow\");\n    }\n  }\n\n  /**\n   * Handles the OAuth callback from providers\n   */\n  async handleOAuthCallback(provider: string, code: string): Promise {\n    this.logger.log(`Handling OAuth callback for provider: ${provider} with code: ${code}`);\n\n    try {\n      const { data, error } = await this.supabase.auth.exchangeCodeForSession(code);\n\n      if (error || !data?.session) {\n        this.logger.error(`OAuth code exchange failed: ${error?.message}`);\n        throw new UnauthorizedException(\"Cannot authenticate with provider\");\n      }\n\n      this.logger.log(`OAuth session data: ${JSON.stringify(data)}`);\n\n      const supabaseUser = data.user as SupabaseUser;\n\n      if (!supabaseUser || !supabaseUser.id) {\n        this.logger.error(\"Invalid user data received from provider\");\n        throw new UnauthorizedException(\"Invalid user data received from provider\");\n      }\n\n      const user = await this.findOrCreateUser(supabaseUser, provider);\n\n      const payload: TokenPayload = {\n        sub: user.id,\n        email: user.email,\n        role: user.role.toString(),\n      };\n\n      const accessToken = this.jwtService.sign(payload);\n\n      this.logger.log(`Generated access token for user: ${user.id}`);\n\n      return {\n        access_token: accessToken,\n        refresh_token: data.session.refresh_token,\n        token_type: \"Bearer\",\n        expires_in: parseInt(this.configService.get(\"JWT_EXPIRES_IN\", \"604800\")),\n      };\n    } catch (error) {\n      this.logger.error(`Error handling OAuth callback: ${error.message}`, error.stack);\n      if (error instanceof UnauthorizedException) {\n        throw error;\n      }\n      throw new InternalServerErrorException(\"Cannot process authentication\");\n    }\n  }\n\n  /**\n   * Find existing user or create a new one based on OAuth user data\n   */\n  public async findOrCreateUser(supabaseUser: SupabaseUser, provider: string) {\n    this.logger.log(`Finding or creating user from provider: ${provider}`);\n\n    try {\n      let user = await this.prisma.user.findUnique({\n        where: { supabaseUserId: supabaseUser.id },\n      });\n\n      if (!user) {\n        this.logger.log(\"User not found, creating new user\");\n\n        const { user_metadata } = supabaseUser;\n\n        let firstName = \"\";\n        let lastName = \"\";\n\n        if (user_metadata.full_name) {\n          const nameParts = user_metadata.full_name.split(\" \");\n          firstName = nameParts[0] || \"\";\n          lastName = nameParts.slice(1).join(\" \") || \"\";\n        } else if (user_metadata.name) {\n          const nameParts = user_metadata.name.split(\" \");\n          firstName = nameParts[0] || \"\";\n          lastName = nameParts.slice(1).join(\" \") || \"\";\n        }\n\n        user = await this.prisma.user.create({\n          data: {\n            email: supabaseUser.email,\n            firstName,\n            lastName,\n            role: UserRole.PATIENT,\n            profileImageUrl: user_metadata.avatar_url || user_metadata.picture,\n            supabaseUserId: supabaseUser.id,\n            status: UserStatus.ACTIVE,\n          },\n        });\n\n        this.logger.log(`Created new user from ${provider} OAuth: ${user.id}`);\n      }\n\n      return user;\n    } catch (error) {\n      this.logger.error(`Error finding/creating user: ${error.message}`, error.stack);\n      throw new InternalServerErrorException(\"Cannot process user data\");\n    }\n  }\n\n  /**\n   * Validates a JWT token\n   */\n  async validateToken(token: string): Promise {\n    this.logger.log(`Validating token: ${token}`);\n\n    try {\n      const payload = this.jwtService.verify(token);\n\n      const user = await this.prisma.user.findUnique({\n        where: { id: payload.sub },\n      });\n\n      if (!user || user.status !== UserStatus.ACTIVE) {\n        this.logger.error(\"User not found or inactive\");\n        throw new UnauthorizedException(\"User not found or inactive\");\n      }\n\n      this.logger.log(`Token validation successful for user: ${payload.sub}`);\n      return payload;\n    } catch (error) {\n      this.logger.error(`Error validating token: ${error.message}`, error.stack);\n      throw new UnauthorizedException(\"Invalid token\");\n    }\n  }\n\n  /**\n   * Refreshes an access token using a refresh token\n   */\n  async refreshToken(refreshToken: string): Promise {\n    this.logger.log(`Refreshing token with refresh token`);\n\n    try {\n      // Check if it's a refresh token from OAuth (Supabase) or regular login\n      try {\n        // Try to verify as JWT refresh token\n        const payload = this.jwtService.verify(refreshToken, {\n          secret: this.configService.get(\"JWT_REFRESH_SECRET\"),\n        });\n\n        // Find user\n        const user = await this.prisma.user.findUnique({\n          where: { id: payload.sub },\n        });\n\n        if (!user || user.status !== UserStatus.ACTIVE) {\n          this.logger.error(\"User not found or inactive\");\n          throw new UnauthorizedException(\"User not found or inactive\");\n        }\n\n        // Generate new access token\n        const newPayload: TokenPayload = {\n          sub: user.id,\n          email: user.email,\n          role: user.role.toString(),\n        };\n\n        this.logger.log(`Generated new access token for user: ${user.id}`);\n        return {\n          access_token: this.jwtService.sign(newPayload),\n        };\n      } catch (jwtError) {\n        // If not a JWT refresh token, try Supabase (for OAuth)\n        const { data, error } = await this.supabase.auth.refreshSession({\n          refresh_token: refreshToken,\n        });\n\n        if (error || !data?.session) {\n          this.logger.error(`Cannot refresh session: ${error?.message}`);\n          throw new UnauthorizedException(\"Invalid refresh token\");\n        }\n\n        const user = await this.prisma.user.findUnique({\n          where: { supabaseUserId: data.user.id },\n        });\n\n        if (!user || user.status !== UserStatus.ACTIVE) {\n          this.logger.error(\"User not found or inactive\");\n          throw new UnauthorizedException(\"User not found or inactive\");\n        }\n\n        const payload: TokenPayload = {\n          sub: user.id,\n          email: user.email,\n          role: user.role.toString(),\n        };\n\n        this.logger.log(`Generated new access token for user: ${user.id}`);\n        return {\n          access_token: this.jwtService.sign(payload),\n        };\n      }\n    } catch (error) {\n      this.logger.error(`Error refreshing token: ${error.message}`, error.stack);\n      throw new UnauthorizedException(\"Cannot refresh token\");\n    }\n  }\n\n  async loginWithSupabaseToken(access_token: string): Promise {\n    this.logger.log(`Validating access token from Supabase`);\n\n    try {\n      const { data, error } = await this.supabase.auth.getUser(access_token);\n\n      if (error || !data?.user) {\n        this.logger.error(`Cannot validate access token: ${error?.message}`);\n        throw new UnauthorizedException(\"Cannot validate token\");\n      }\n\n      const supabaseUser = data.user as SupabaseUser;\n\n      const user = await this.findOrCreateUser(supabaseUser, \"supabase\");\n\n      const payload: TokenPayload = {\n        sub: user.id,\n        email: user.email,\n        role: user.role.toString(),\n      };\n\n      const jwtAccessToken = this.jwtService.sign(payload);\n      const jwtRefreshToken = this.jwtService.sign(payload, {\n        secret: this.configService.get(\"JWT_REFRESH_SECRET\"),\n        expiresIn: this.configService.get(\"JWT_REFRESH_EXPIRES_IN\", \"30d\"),\n      });\n\n      return {\n        access_token: jwtAccessToken,\n        refresh_token: jwtRefreshToken,\n        token_type: \"Bearer\",\n        expires_in: parseInt(this.configService.get(\"JWT_EXPIRES_IN\", \"604800\")),\n      };\n    } catch (error) {\n      this.logger.error(`Error logging in with Supabase token: ${error.message}`, error.stack);\n      throw new InternalServerErrorException(\"Cannot login with Supabase token\");\n    }\n  }\n\n  public async getUserFromAccessToken(accessToken: string): Promise {\n    const { data, error } = await this.supabase.auth.getUser(accessToken);\n    if (error || !data?.user) {\n      throw new UnauthorizedException('Cannot authenticate with provider');\n    }\n    return data.user as SupabaseUser;\n  }\n\n  public signJwt(payload: TokenPayload): string {\n    return this.jwtService.sign(payload);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthTokens.html":{"url":"interfaces/AuthTokens.html","title":"interface - AuthTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  sub: string;\n  email: string;\n  role: string;\n  iat?: number;\n  exp?: number;\n}\n\nexport interface SupabaseUser {\n  id: string;\n  email: string;\n  app_metadata: {\n    provider?: string;\n    providers?: string[];\n  };\n  user_metadata: {\n    full_name?: string;\n    avatar_url?: string;\n    name?: string;\n    email?: string;\n    email_verified?: boolean;\n    phone?: string;\n    picture?: string;\n  };\n  role?: string;\n  aud: string;\n}\n\nexport interface AuthTokens {\n  access_token: string;\n  refresh_token?: string;\n  expires_in?: number;\n  token_type?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmergencyRequestDto.html":{"url":"classes/CreateEmergencyRequestDto.html","title":"class - CreateEmergencyRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmergencyRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sos/dto/sos.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                grade\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                latitude\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                longitude\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                medicalInfo\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sos/dto/sos.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmergencyGrade\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(EmergencyGrade)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sos/dto/sos.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sos/dto/sos.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sos/dto/sos.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sos/dto/sos.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        medicalInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sos/dto/sos.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmergencyType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(EmergencyType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sos/dto/sos.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsNumber,\n  IsEnum,\n  IsObject,\n} from \"class-validator\";\n\nexport enum EmergencyGrade {\n  CRITICAL = \"CRITICAL\",\n  URGENT = \"URGENT\",\n  NON_URGENT = \"NON_URGENT\",\n}\n\nexport enum EmergencyType {\n  ACCIDENT = \"ACCIDENT\",\n  MEDICAL = \"MEDICAL\",\n  FIRE = \"FIRE\",\n  CRIME = \"CRIME\",\n  OTHER = \"OTHER\",\n}\n\nexport enum EmergencyStatus {\n  PENDING = \"PENDING\",\n  ASSIGNED = \"ASSIGNED\",\n  IN_PROGRESS = \"IN_PROGRESS\",\n  COMPLETED = \"COMPLETED\",\n  CANCELLED = \"CANCELLED\",\n}\n\nexport class CreateEmergencyRequestDto {\n  @IsString()\n  description: string;\n\n  @IsOptional()\n  @IsString()\n  location?: string;\n\n  @IsOptional()\n  @IsNumber()\n  latitude?: number;\n\n  @IsOptional()\n  @IsNumber()\n  longitude?: number;\n\n  @IsEnum(EmergencyGrade)\n  grade: EmergencyGrade;\n\n  @IsEnum(EmergencyType)\n  type: EmergencyType;\n\n  @IsOptional()\n  @IsObject()\n  medicalInfo?: Record;\n}\n\nexport class UpdateEmergencyStatusDto {\n  @IsEnum(EmergencyStatus)\n  status: EmergencyStatus;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHospitalDto.html":{"url":"classes/CreateHospitalDto.html","title":"class - CreateHospitalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHospitalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hospital/dto/hospital.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                availableBeds\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                availableIcuBeds\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                contactPhone\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                icuBeds\n                            \n                            \n                                    \n                                latitude\n                            \n                            \n                                    \n                                longitude\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                postalCode\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                totalBeds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        availableBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        availableIcuBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contactPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        icuBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        totalBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsNumber,\n  IsEmail,\n  IsUUID,\n  IsEnum,\n} from \"class-validator\";\n\nexport enum HospitalStatus {\n  ACTIVE = \"ACTIVE\",\n  INACTIVE = \"INACTIVE\",\n  MAINTENANCE = \"MAINTENANCE\",\n}\n\nexport class CreateHospitalDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  address: string;\n\n  @IsString()\n  city: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsString()\n  postalCode: string;\n\n  @IsNumber()\n  latitude: number;\n\n  @IsNumber()\n  longitude: number;\n\n  @IsString()\n  contactPhone: string;\n\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @IsOptional()\n  @IsNumber()\n  totalBeds?: number;\n\n  @IsOptional()\n  @IsNumber()\n  availableBeds?: number;\n\n  @IsOptional()\n  @IsNumber()\n  icuBeds?: number;\n\n  @IsOptional()\n  @IsNumber()\n  availableIcuBeds?: number;\n}\n\nexport class UpdateHospitalDto extends CreateHospitalDto {\n  @IsOptional()\n  @IsEnum(HospitalStatus)\n  status?: HospitalStatus;\n}\n\nexport class UpdateHospitalCapacityDto {\n  @IsNumber()\n  totalBeds: number;\n\n  @IsNumber()\n  availableBeds: number;\n\n  @IsNumber()\n  icuBeds: number;\n\n  @IsNumber()\n  availableIcuBeds: number;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n}\n\nexport class AcceptEmergencyDto {\n  @IsUUID()\n  emergencyId: string;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNotificationDto.html":{"url":"classes/CreateNotificationDto.html","title":"class - CreateNotificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNotificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notification/dto/notification.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                body\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                metadata\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notification/dto/notification.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notification/dto/notification.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notification/dto/notification.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notification/dto/notification.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notification/dto/notification.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsUUID, IsOptional, IsObject } from \"class-validator\";\n\nexport class CreateNotificationDto {\n  @IsString()\n  type: string;\n\n  @IsString()\n  title: string;\n\n  @IsString()\n  body: string;\n\n  @IsUUID()\n  userId: string;\n\n  @IsOptional()\n  @IsObject()\n  metadata?: Record;\n}\n\nexport class MarkAsReadDto {\n  @IsUUID()\n  notificationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRescueTeamDto.html":{"url":"classes/CreateRescueTeamDto.html","title":"class - CreateRescueTeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRescueTeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rescue/dto/rescue.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                contactPhone\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                latitude\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                longitude\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                postalCode\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                vehicleTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contactPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        vehicleTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsNumber,\n  IsEmail,\n  IsEnum,\n  IsArray,\n  IsUUID,\n} from \"class-validator\";\n\nexport enum RescueTeamStatus {\n  AVAILABLE = \"AVAILABLE\",\n  BUSY = \"BUSY\",\n  OFF_DUTY = \"OFF_DUTY\",\n  MAINTENANCE = \"MAINTENANCE\",\n}\n\nexport class CreateRescueTeamDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  address: string;\n\n  @IsString()\n  city: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsString()\n  postalCode: string;\n\n  @IsOptional()\n  @IsNumber()\n  latitude?: number;\n\n  @IsOptional()\n  @IsNumber()\n  longitude?: number;\n\n  @IsString()\n  contactPhone: string;\n\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @IsOptional()\n  @IsArray()\n  vehicleTypes?: string[];\n}\n\nexport class UpdateRescueTeamDto {\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @IsOptional()\n  @IsString()\n  address?: string;\n\n  @IsOptional()\n  @IsString()\n  city?: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsOptional()\n  @IsString()\n  postalCode?: string;\n\n  @IsOptional()\n  @IsNumber()\n  latitude?: number;\n\n  @IsOptional()\n  @IsNumber()\n  longitude?: number;\n\n  @IsOptional()\n  @IsString()\n  contactPhone?: string;\n\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @IsOptional()\n  @IsArray()\n  vehicleTypes?: string[];\n}\n\nexport class UpdateRescueTeamStatusDto {\n  @IsEnum(RescueTeamStatus)\n  status: RescueTeamStatus;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n\n  @IsOptional()\n  @IsUUID()\n  currentEmergencyId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getActiveEmergencies\n                            \n                            \n                                    \n                                getHospitalCapacities\n                            \n                            \n                                    \n                                getStats\n                            \n                            \n                                    \n                                getTeamLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getActiveEmergencies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveEmergencies()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('active-emergencies')\n                \n            \n\n                    \n                        \n                            Defined in src/dashboard/dashboard.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHospitalCapacities\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHospitalCapacities()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hospital-capacities')\n                \n            \n\n                    \n                        \n                            Defined in src/dashboard/dashboard.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStats()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('stats')\n                \n            \n\n                    \n                        \n                            Defined in src/dashboard/dashboard.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getTeamLocations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTeamLocations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('team-locations')\n                \n            \n\n                    \n                        \n                            Defined in src/dashboard/dashboard.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from \"@nestjs/common\";\nimport { DashboardService } from \"./dashboard.service\";\nimport { JwtAuthGuard } from \"../auth/guards/jwt-auth.guard\";\nimport { RolesGuard } from \"../auth/guards/roles.guard\";\nimport { Roles } from \"../auth/decorators/roles.decorator\";\nimport { UserRole } from \"@prisma/client\";\n\n@Controller(\"dashboard\")\n@UseGuards(JwtAuthGuard, RolesGuard)\n@Roles(UserRole.ADMIN, UserRole.EMERGENCY_CENTER)\nexport class DashboardController {\n  constructor(private readonly dashboardService: DashboardService) {}\n\n  @Get(\"stats\")\n  getStats() {\n    return this.dashboardService.getStats();\n  }\n\n  @Get(\"active-emergencies\")\n  getActiveEmergencies() {\n    return this.dashboardService.getActiveEmergencies();\n  }\n\n  @Get(\"team-locations\")\n  getTeamLocations() {\n    return this.dashboardService.getTeamLocations();\n  }\n\n  @Get(\"hospital-capacities\")\n  getHospitalCapacities() {\n    return this.dashboardService.getHospitalCapacities();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_DashboardModule_imports\n\n\n\n\nHospitalModule\n\nHospitalModule\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nHospitalModule->DashboardModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nDashboardModule -->\n\nPrismaModule->DashboardModule\n\n\n\n\n\nRescueModule\n\nRescueModule\n\nDashboardModule -->\n\nRescueModule->DashboardModule\n\n\n\n\n\nSosModule\n\nSosModule\n\nDashboardModule -->\n\nSosModule->DashboardModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dashboard/dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DashboardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HospitalModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            RescueModule\n                        \n                        \n                            SosModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { DashboardController } from \"./dashboard.controller\";\nimport { DashboardService } from \"./dashboard.service\";\nimport { PrismaModule } from \"../prisma/prisma.module\";\nimport { SosModule } from \"../sos/sos.module\";\nimport { HospitalModule } from \"../hospital/hospital.module\";\nimport { RescueModule } from \"../rescue/rescue.module\";\n\n@Module({\n  imports: [PrismaModule, SosModule, HospitalModule, RescueModule],\n  controllers: [DashboardController],\n  providers: [DashboardService],\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardService.html":{"url":"injectables/DashboardService.html","title":"injectable - DashboardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dashboard.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getActiveEmergencies\n                            \n                            \n                                    Async\n                                getHospitalCapacities\n                            \n                            \n                                    Async\n                                getStats\n                            \n                            \n                                    Async\n                                getTeamLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/dashboard.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getActiveEmergencies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveEmergencies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/dashboard/dashboard.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getHospitalCapacities\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHospitalCapacities()\n                \n            \n\n\n                    \n                        \n                            Defined in src/dashboard/dashboard.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStats()\n                \n            \n\n\n                    \n                        \n                            Defined in src/dashboard/dashboard.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTeamLocations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTeamLocations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/dashboard/dashboard.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PrismaService } from \"../prisma/prisma.service\";\nimport { EmergencyStatus } from \"../sos/dto/sos.dto\";\n\n@Injectable()\nexport class DashboardService {\n  constructor(private prisma: PrismaService) {}\n\n  async getStats() {\n    const [\n      totalEmergencies,\n      activeEmergencies,\n      completedEmergencies,\n      activeTeams,\n      hospitals,\n    ] = await Promise.all([\n      // Total emergencies\n      this.prisma.emergencyRequest.count(),\n      // Active emergencies\n      this.prisma.emergencyRequest.count({\n        where: {\n          status: {\n            in: [\n              EmergencyStatus.PENDING,\n              EmergencyStatus.ASSIGNED,\n              EmergencyStatus.IN_PROGRESS,\n            ],\n          },\n        },\n      }),\n      // Completed emergencies\n      this.prisma.emergencyRequest.count({\n        where: {\n          status: EmergencyStatus.COMPLETED,\n        },\n      }),\n      // Active rescue teams\n      this.prisma.organization.count({\n        where: {\n          type: \"RESCUE_TEAM\",\n          status: \"ACTIVE\",\n        },\n      }),\n      // Active hospitals\n      this.prisma.organization.count({\n        where: {\n          type: \"HOSPITAL\",\n          status: \"ACTIVE\",\n        },\n      }),\n    ]);\n\n    return {\n      totalEmergencies,\n      activeEmergencies,\n      completedEmergencies,\n      activeTeams,\n      hospitals,\n    };\n  }\n\n  async getActiveEmergencies() {\n    return this.prisma.emergencyRequest.findMany({\n      where: {\n        status: {\n          in: [\n            EmergencyStatus.PENDING,\n            EmergencyStatus.ASSIGNED,\n            EmergencyStatus.IN_PROGRESS,\n          ],\n        },\n      },\n      include: {\n        patient: {\n          select: {\n            id: true,\n            firstName: true,\n            lastName: true,\n            phone: true,\n          },\n        },\n        responses: {\n          include: {\n            organization: true,\n          },\n        },\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n  }\n\n  async getTeamLocations() {\n    return this.prisma.organization.findMany({\n      where: {\n        type: \"RESCUE_TEAM\",\n        status: \"ACTIVE\",\n      },\n      select: {\n        id: true,\n        name: true,\n        latitude: true,\n        longitude: true,\n        status: true,\n        medicalInfo: true,\n      },\n    });\n  }\n\n  async getHospitalCapacities() {\n    return this.prisma.organization.findMany({\n      where: {\n        type: \"HOSPITAL\",\n        status: \"ACTIVE\",\n      },\n      select: {\n        id: true,\n        name: true,\n        medicalInfo: true,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardStatsResponseDto.html":{"url":"classes/DashboardStatsResponseDto.html","title":"class - DashboardStatsResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardStatsResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dto/dashboard.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeEmergencies\n                            \n                            \n                                activeTeams\n                            \n                            \n                                availableHospitalBeds\n                            \n                            \n                                averageResponseTime\n                            \n                            \n                                cancelledEmergencies\n                            \n                            \n                                completedEmergencies\n                            \n                            \n                                totalEmergencies\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeEmergencies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/dashboard.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeTeams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/dashboard.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availableHospitalBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/dashboard.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        averageResponseTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/dashboard.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelledEmergencies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/dashboard.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completedEmergencies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/dashboard.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalEmergencies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/dashboard.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsDateString, IsEnum } from \"class-validator\";\n\nenum ReportType {\n  DAILY = \"DAILY\",\n  WEEKLY = \"WEEKLY\",\n  MONTHLY = \"MONTHLY\",\n  CUSTOM = \"CUSTOM\",\n}\n\nexport class ReportQueryDto {\n  @IsEnum(ReportType)\n  type: ReportType;\n\n  @IsOptional()\n  @IsDateString()\n  startDate?: string;\n\n  @IsOptional()\n  @IsDateString()\n  endDate?: string;\n\n  @IsOptional()\n  @IsString()\n  region?: string;\n\n  @IsOptional()\n  @IsString()\n  category?: string;\n}\n\nexport class DashboardStatsResponseDto {\n  totalEmergencies: number;\n  activeEmergencies: number;\n  completedEmergencies: number;\n  cancelledEmergencies: number;\n  averageResponseTime: number;\n  activeTeams: number;\n  availableHospitalBeds: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HospitalController.html":{"url":"controllers/HospitalController.html","title":"controller - HospitalController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HospitalController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hospital/hospital.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                hospitals\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                acceptEmergency\n                            \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findNearbyHospitals\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getEmergencyResponse\n                            \n                            \n                                    \n                                    \n                                    Async\n                                notifyRescueTeam\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                updateCapacity\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateEmergencyResponseStatus\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateEmergencyResponseStatusManual\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        acceptEmergency\n                        \n                    \n                \n            \n            \n                \n                        \n                    acceptEmergency(hospitalId: string, acceptEmergencyDto: AcceptEmergencyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/accept-emergency')@Roles(UserRole.HOSPITAL)\n                \n            \n\n                    \n                        \n                            Defined in src/hospital/hospital.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hospitalId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                acceptEmergencyDto\n                                            \n                                                            AcceptEmergencyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createHospitalDto: CreateHospitalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(UserRole.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/hospital/hospital.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createHospitalDto\n                                            \n                                                            CreateHospitalDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(search?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Roles(UserRole.ADMIN, UserRole.HOSPITAL)\n                \n            \n\n                    \n                        \n                            Defined in src/hospital/hospital.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findNearbyHospitals\n                        \n                    \n                \n            \n            \n                \n                        \n                    findNearbyHospitals(latitude: number, longitude: number, radius: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('nearby/:latitude/:longitude')@Roles(UserRole.ADMIN, UserRole.HOSPITAL)\n                \n            \n\n                    \n                        \n                            Defined in src/hospital/hospital.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                latitude\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                longitude\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                radius\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Roles(UserRole.ADMIN, UserRole.HOSPITAL)\n                \n            \n\n                    \n                        \n                            Defined in src/hospital/hospital.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getEmergencyResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmergencyResponse(responseId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('emergency-responses/:id')@Roles(UserRole.HOSPITAL)\n                \n            \n\n                    \n                        \n                            Defined in src/hospital/hospital.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                responseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        notifyRescueTeam\n                        \n                    \n                \n            \n            \n                \n                        \n                    notifyRescueTeam(responseId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('emergency-responses/:id/notify-rescue')@Roles(UserRole.HOSPITAL)\n                \n            \n\n                    \n                        \n                            Defined in src/hospital/hospital.controller.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                responseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Roles(UserRole.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/hospital/hospital.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateHospitalDto: UpdateHospitalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@Roles(UserRole.ADMIN, UserRole.HOSPITAL)\n                \n            \n\n                    \n                        \n                            Defined in src/hospital/hospital.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateHospitalDto\n                                            \n                                                            UpdateHospitalDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateCapacity\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCapacity(id: string, updateCapacityDto: UpdateHospitalCapacityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id/capacity')@Roles(UserRole.HOSPITAL)\n                \n            \n\n                    \n                        \n                            Defined in src/hospital/hospital.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCapacityDto\n                                            \n                                                            UpdateHospitalCapacityDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateEmergencyResponseStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmergencyResponseStatus(responseId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('emergency-responses/:id')@Roles(UserRole.HOSPITAL)\n                \n            \n\n                    \n                        \n                            Defined in src/hospital/hospital.controller.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                responseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateEmergencyResponseStatusManual\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmergencyResponseStatusManual(responseId: string, status: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('emergency-responses/:id/status')@Roles(UserRole.HOSPITAL)\n                \n            \n\n                    \n                        \n                            Defined in src/hospital/hospital.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                responseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Put, Patch, Delete, Param, Body, UseGuards, Query, Logger } from \"@nestjs/common\";\nimport { HospitalService } from \"./hospital.service\";\nimport { JwtAuthGuard } from \"../auth/guards/jwt-auth.guard\";\nimport { RolesGuard } from \"../auth/guards/roles.guard\";\nimport { Roles } from \"../auth/decorators/roles.decorator\";\nimport { UserRole } from \"@prisma/client\";\nimport {\n  CreateHospitalDto,\n  UpdateHospitalDto,\n  UpdateHospitalCapacityDto,\n  AcceptEmergencyDto,\n} from \"./dto/hospital.dto\";\n\n@Controller(\"hospitals\")\n@UseGuards(JwtAuthGuard, RolesGuard)\nexport class HospitalController {\n  private readonly logger = new Logger(HospitalController.name);\n\n  constructor(private readonly hospitalService: HospitalService) {\n    this.logger.log(\"HospitalController initialized\");\n  }\n\n  @Post()\n  @Roles(UserRole.ADMIN)\n  create(@Body() createHospitalDto: CreateHospitalDto) {\n    this.logger.log(\"POST /hospitals called\");\n    return this.hospitalService.create(createHospitalDto);\n  }\n\n  @Get()\n  @Roles(UserRole.ADMIN, UserRole.HOSPITAL)\n  findAll(@Query(\"search\") search?: string) {\n    this.logger.log(`GET /hospitals called with search: ${search}`);\n    return this.hospitalService.findAll(search);\n  }\n\n  @Get(\":id\")\n  @Roles(UserRole.ADMIN, UserRole.HOSPITAL)\n  findOne(@Param(\"id\") id: string) {\n    this.logger.log(`GET /hospitals/${id} called`);\n    return this.hospitalService.findOne(id);\n  }\n\n  @Put(\":id\")\n  @Roles(UserRole.ADMIN, UserRole.HOSPITAL)\n  update(@Param(\"id\") id: string, @Body() updateHospitalDto: UpdateHospitalDto) {\n    this.logger.log(`PUT /hospitals/${id} called`);\n    return this.hospitalService.update(id, updateHospitalDto);\n  }\n\n  @Delete(\":id\")\n  @Roles(UserRole.ADMIN)\n  remove(@Param(\"id\") id: string) {\n    this.logger.log(`DELETE /hospitals/${id} called`);\n    return this.hospitalService.remove(id);\n  }\n\n  @Put(\":id/capacity\")\n  @Roles(UserRole.HOSPITAL)\n  updateCapacity(\n    @Param(\"id\") id: string,\n    @Body() updateCapacityDto: UpdateHospitalCapacityDto,\n  ) {\n    this.logger.log(`PUT /hospitals/${id}/capacity called`);\n    return this.hospitalService.updateCapacity(id, updateCapacityDto);\n  }\n\n  @Post(\":id/accept-emergency\")\n  @Roles(UserRole.HOSPITAL)\n  async acceptEmergency(\n    @Param(\"id\") hospitalId: string,\n    @Body() acceptEmergencyDto: AcceptEmergencyDto,\n  ) {\n    this.logger.log(`POST /hospitals/${hospitalId}/accept-emergency called`);\n    return this.hospitalService.acceptEmergency(hospitalId, acceptEmergencyDto);\n  }\n\n  @Get(\"nearby/:latitude/:longitude\")\n  @Roles(UserRole.ADMIN, UserRole.HOSPITAL)\n  findNearbyHospitals(\n    @Param(\"latitude\") latitude: number,\n    @Param(\"longitude\") longitude: number,\n    @Query(\"radius\") radius: number,\n  ) {\n    this.logger.log(\n      `GET /hospitals/nearby/${latitude}/${longitude} called with radius: ${radius}`,\n    );\n    return this.hospitalService.findNearbyHospitals(latitude, longitude, radius);\n  }\n\n  @Put(\"emergency-responses/:id\")\n  @Roles(UserRole.HOSPITAL)\n  async updateEmergencyResponseStatus(@Param(\"id\") responseId: string) {\n    this.logger.log(`PUT /hospitals/emergency-responses/${responseId} called`);\n    return this.hospitalService.updateEmergencyResponseStatus(responseId);\n  }\n\n  @Post(\"emergency-responses/:id/notify-rescue\")\n  @Roles(UserRole.HOSPITAL)\n  async notifyRescueTeam(@Param(\"id\") responseId: string) {\n    this.logger.log(\n      `POST /hospitals/emergency-responses/${responseId}/notify-rescue called`,\n    );\n    return this.hospitalService.notifyRescueTeam(responseId);\n  }\n\n  @Get(\"emergency-responses/:id\")\n  @Roles(UserRole.HOSPITAL)\n  async getEmergencyResponse(@Param(\"id\") responseId: string) {\n    this.logger.log(`GET /hospitals/emergency-responses/${responseId} called`);\n    return this.hospitalService.getEmergencyResponse(responseId);\n  }\n\n  // เพิ่ม endpoint ใหม่: PATCH /hospitals/emergency-responses/:id/status\n  @Patch(\"emergency-responses/:id/status\")\n  @Roles(UserRole.HOSPITAL)\n  async updateEmergencyResponseStatusManual(\n    @Param(\"id\") responseId: string,\n    @Body(\"status\") status: string,\n  ) {\n    this.logger.log(\n      `PATCH /hospitals/emergency-responses/${responseId}/status called with status: ${status}`,\n    );\n    return this.hospitalService.updateEmergencyResponseStatusManual(responseId, status);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HospitalModule.html":{"url":"modules/HospitalModule.html","title":"module - HospitalModule","body":"\n                   \n\n\n\n\n    Modules\n    HospitalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HospitalModule\n\n\n\ncluster_HospitalModule_exports\n\n\n\ncluster_HospitalModule_imports\n\n\n\ncluster_HospitalModule_providers\n\n\n\n\nNotificationModule\n\nNotificationModule\n\n\n\nHospitalModule\n\nHospitalModule\n\nHospitalModule -->\n\nNotificationModule->HospitalModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nHospitalModule -->\n\nPrismaModule->HospitalModule\n\n\n\n\n\nHospitalService \n\nHospitalService \n\nHospitalService  -->\n\nHospitalModule->HospitalService \n\n\n\n\n\nHospitalService\n\nHospitalService\n\nHospitalModule -->\n\nHospitalService->HospitalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/hospital/hospital.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HospitalService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HospitalController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NotificationModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HospitalService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HospitalService } from \"./hospital.service\";\nimport { PrismaModule } from \"../prisma/prisma.module\";\nimport { NotificationModule } from \"../notification/notification.module\";\nimport { HospitalController } from \"./hospital.controller\";\n\n@Module({\n  imports: [\n    PrismaModule,\n    NotificationModule,\n  ],\n  controllers: [HospitalController], // ย้ายมาที่นี่\n  providers: [HospitalService],\n  exports: [HospitalService],\n})\nexport class HospitalModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HospitalService.html":{"url":"injectables/HospitalService.html","title":"injectable - HospitalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HospitalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hospital/hospital.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                acceptEmergency\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findNearbyHospitals\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getEmergencyResponse\n                            \n                            \n                                    Async\n                                notifyRescueTeam\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateCapacity\n                            \n                            \n                                    Async\n                                updateEmergencyResponseStatus\n                            \n                            \n                                    Async\n                                updateEmergencyResponseStatusManual\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/hospital/hospital.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        acceptEmergency\n                        \n                    \n                \n            \n            \n                \n                        \n                    acceptEmergency(hospitalId: string, acceptEmergencyDto: AcceptEmergencyDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/hospital/hospital.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hospitalId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                acceptEmergencyDto\n                                            \n                                                            AcceptEmergencyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createHospitalDto: CreateHospitalDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/hospital/hospital.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createHospitalDto\n                                            \n                                                            CreateHospitalDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(search?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/hospital/hospital.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findNearbyHospitals\n                        \n                    \n                \n            \n            \n                \n                        \n                    findNearbyHospitals(latitude: number, longitude: number, radius: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/hospital/hospital.service.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                latitude\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                longitude\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                radius\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/hospital/hospital.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getEmergencyResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmergencyResponse(responseId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/hospital/hospital.service.ts:351\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                responseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        notifyRescueTeam\n                        \n                    \n                \n            \n            \n                \n                        \n                    notifyRescueTeam(responseId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/hospital/hospital.service.ts:285\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                responseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/hospital/hospital.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateHospitalDto: UpdateHospitalDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/hospital/hospital.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateHospitalDto\n                                            \n                                                            UpdateHospitalDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateCapacity\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCapacity(id: string, updateCapacityDto: UpdateHospitalCapacityDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/hospital/hospital.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCapacityDto\n                                            \n                                                            UpdateHospitalCapacityDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEmergencyResponseStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmergencyResponseStatus(responseId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/hospital/hospital.service.ts:233\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                responseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEmergencyResponseStatusManual\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmergencyResponseStatusManual(responseId: string, status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/hospital/hospital.service.ts:378\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                responseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HospitalService.name)\n                    \n                \n                    \n                        \n                                Defined in src/hospital/hospital.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n  Logger,\n} from \"@nestjs/common\";\nimport { PrismaService } from \"../prisma/prisma.service\";\nimport { NotificationService } from \"../notification/notification.service\";\nimport {\n  CreateHospitalDto,\n  UpdateHospitalDto,\n  UpdateHospitalCapacityDto,\n  AcceptEmergencyDto,\n} from \"./dto/hospital.dto\";\nimport { EmergencyStatus } from \"../sos/dto/sos.dto\";\n\n// กำหนด type สำหรับ QueryMode\ntype QueryMode = \"default\" | \"insensitive\";\n\n@Injectable()\nexport class HospitalService {\n  private readonly logger = new Logger(HospitalService.name);\n\n  constructor(\n    private prisma: PrismaService,\n    private notificationService: NotificationService,\n  ) {\n    this.logger.log(\"HospitalService initialized\");\n  }\n\n  async create(createHospitalDto: CreateHospitalDto) {\n    this.logger.log(\"Creating new hospital\");\n    return this.prisma.organization.create({\n      data: {\n        ...createHospitalDto,\n        type: \"HOSPITAL\",\n      },\n    });\n  }\n\n  async findAll(search?: string) {\n    this.logger.log(`Finding all hospitals with search: ${search}`);\n    const where = {\n      type: \"HOSPITAL\",\n      ...(search && {\n        OR: [\n          { name: { contains: search, mode: \"insensitive\" as QueryMode } },\n          { city: { contains: search, mode: \"insensitive\" as QueryMode } },\n        ],\n      }),\n    };\n\n    return this.prisma.organization.findMany({\n      where,\n      include: {\n        users: {\n          select: {\n            id: true,\n            firstName: true,\n            lastName: true,\n            role: true,\n          },\n        },\n      },\n    });\n  }\n\n  async findOne(id: string) {\n    this.logger.log(`Finding hospital with ID: ${id}`);\n    const hospital = await this.prisma.organization.findFirst({\n      where: {\n        id,\n        type: \"HOSPITAL\",\n      },\n      include: {\n        users: {\n          select: {\n            id: true,\n            firstName: true,\n            lastName: true,\n            role: true,\n          },\n        },\n        emergencyResponses: {\n          include: {\n            emergencyRequest: true,\n          },\n        },\n      },\n    });\n\n    if (!hospital) {\n      this.logger.error(`Hospital with ID ${id} not found`);\n      throw new NotFoundException(\"Hospital not found\");\n    }\n\n    return {\n      ...hospital,\n      medicalInfo: hospital.medicalInfo || {},\n    };\n  }\n\n  async update(id: string, updateHospitalDto: UpdateHospitalDto) {\n    this.logger.log(`Updating hospital with ID: ${id}`);\n    const hospital = await this.findOne(id);\n\n    return this.prisma.organization.update({\n      where: { id },\n      data: updateHospitalDto,\n    });\n  }\n\n  async remove(id: string) {\n    this.logger.log(`Removing hospital with ID: ${id}`);\n    const hospital = await this.findOne(id);\n\n    return this.prisma.organization.update({\n      where: { id },\n      data: { status: \"INACTIVE\" },\n    });\n  }\n\n  async updateCapacity(\n    id: string,\n    updateCapacityDto: UpdateHospitalCapacityDto,\n  ) {\n    this.logger.log(`Updating capacity for hospital with ID: ${id}`);\n    const hospital = await this.findOne(id);\n\n    const medicalInfo = hospital.medicalInfo as Record | null;\n\n    const capacityPlainObject = { ...updateCapacityDto };\n\n    return this.prisma.organization.update({\n      where: { id },\n      data: {\n        medicalInfo: {\n          ...(medicalInfo || {}),\n          capacity: capacityPlainObject,\n        },\n      },\n    });\n  }\n\n  async acceptEmergency(\n    hospitalId: string,\n    acceptEmergencyDto: AcceptEmergencyDto,\n  ) {\n    this.logger.log(`Accepting emergency for hospital ID: ${hospitalId}`);\n    const hospital = await this.findOne(hospitalId);\n\n    const emergency = await this.prisma.emergencyRequest.findUnique({\n      where: { id: acceptEmergencyDto.emergencyId },\n      include: { patient: true },\n    });\n\n    if (!emergency) {\n      this.logger.error(`Emergency request with ID ${acceptEmergencyDto.emergencyId} not found`);\n      throw new NotFoundException(\"Emergency request not found\");\n    }\n\n    if (emergency.status !== EmergencyStatus.PENDING) {\n      this.logger.error(`Emergency request ${acceptEmergencyDto.emergencyId} is not in PENDING state, current state: ${emergency.status}`);\n      throw new BadRequestException(\"Emergency request is no longer pending\");\n    }\n\n    const response = await this.prisma.emergencyResponse.create({\n      data: {\n        status: \"ACCEPTED\",\n        notes: acceptEmergencyDto.notes,\n        organizationId: hospitalId,\n        emergencyRequestId: emergency.id,\n      },\n    });\n\n    await this.prisma.emergencyRequest.update({\n      where: { id: emergency.id },\n      data: { status: EmergencyStatus.ASSIGNED },\n    });\n\n    await this.notificationService.createNotification({\n      type: \"EMERGENCY_ACCEPTED\",\n      title: \"Hospital Accepted Your Emergency\",\n      body: `${hospital.name} has accepted your emergency request`,\n      userId: emergency.patient.id,\n      metadata: {\n        emergencyId: emergency.id,\n        hospitalId: hospital.id,\n        hospitalName: hospital.name,\n      },\n    });\n\n    return response;\n  }\n\n  async findNearbyHospitals(\n    latitude: number,\n    longitude: number,\n    radius: number = 10,\n  ) {\n    this.logger.log(\n      `Finding nearby hospitals for lat: ${latitude}, lon: ${longitude}, radius: ${radius}`,\n    );\n    const hospitals = await this.prisma.$queryRaw`\n      SELECT \n        id,\n        name,\n        address,\n        city,\n        latitude,\n        longitude,\n        \"contactPhone\",\n        \"contactEmail\",\n        status,\n        (\n          6371 * acos(\n            cos(radians(${latitude})) * cos(radians(latitude)) *\n            cos(radians(longitude) - radians(${longitude})) +\n            sin(radians(${latitude})) * sin(radians(latitude))\n          )\n        ) AS distance\n      FROM \"emergency_project\".\"organizations\"\n      WHERE \n        type = 'HOSPITAL'\n        AND status = 'ACTIVE'\n      HAVING distance \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HttpExceptionFilter.name)\n                    \n                \n                    \n                        \n                                Defined in src/common/filters/http-exception.filter.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/http-exception.filter.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from \"@nestjs/common\";\nimport { Request, Response } from \"express\";\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  private readonly logger = new Logger(HttpExceptionFilter.name);\n\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n    const errorResponse = exception.getResponse();\n\n    // Log the error\n    this.logger.error(\n      `[${request.method}] ${request.url} - ${status}: ${\n        typeof errorResponse === \"object\"\n          ? JSON.stringify(errorResponse)\n          : errorResponse\n      }`,\n    );\n\n    // Structure the error response\n    const formattedError = {\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      method: request.method,\n      error:\n        typeof errorResponse === \"object\"\n          ? errorResponse\n          : { message: errorResponse },\n    };\n\n    response.status(status).json(formattedError);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard(\"jwt\")\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:21\n                        \n                    \n\n\n            \n                \n                        Determines if the current route requires authentication\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The execution context\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                Whether the request should proceed or be rejected\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any, info: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:45\n                        \n                    \n\n\n            \n                \n                        Handles authentication errors\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Error from authentication\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Additional information\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Never - throws an exception\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  ExecutionContext,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { Reflector } from \"@nestjs/core\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(\"jwt\") {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  /**\n   * Determines if the current route requires authentication\n   * @param context The execution context\n   * @returns Whether the request should proceed or be rejected\n   */\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    // Check if the route has the IS_PUBLIC_KEY metadata\n    const isPublic = this.reflector.getAllAndOverride(\"isPublic\", [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    // If route is marked as public, allow access without authentication\n    if (isPublic) {\n      return true;\n    }\n\n    // Otherwise, use the parent AuthGuard to check JWT token\n    return super.canActivate(context);\n  }\n\n  /**\n   * Handles authentication errors\n   * @param err Error from authentication\n   * @param info Additional information\n   * @returns Never - throws an exception\n   */\n  handleRequest(err: any, user: any, info: any) {\n    // If authentication failed or no user was found\n    if (err || !user) {\n      throw err || new UnauthorizedException(\"Authentication required\");\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: TokenPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt.strategy.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            TokenPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { PrismaService } from \"../../prisma/prisma.service\";\nimport { TokenPayload } from \"../../common/interfaces/auth.interface\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly prisma: PrismaService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(\"JWT_SECRET\"),\n    });\n    // Log JWT_SECRET เพื่อตรวจสอบ\n    console.log('JwtStrategy - JWT_SECRET:', configService.get(\"JWT_SECRET\"));\n  }\n\n  async validate(payload: TokenPayload) {\n    console.log('JwtStrategy - Payload:', payload); // Log payload เพื่อดูข้อมูลโทเคน\n\n    const { sub: userId } = payload;\n    console.log('JwtStrategy - User ID:', userId); // Log userId ที่ดึงจาก payload\n\n    try {\n      const user = await this.prisma.user.findUnique({\n        where: { id: userId },\n        select: {\n          id: true,\n          email: true,\n          firstName: true,\n          lastName: true,\n          role: true,\n          status: true,\n        },\n      });\n      console.log('JwtStrategy - User from DB:', user); // Log ผู้ใช้ที่ query ได้\n\n      if (!user) {\n        console.error('JwtStrategy - Error: User not found for ID:', userId);\n        throw new UnauthorizedException(\"User not found\");\n      }\n\n      if (user.status !== \"ACTIVE\") {\n        console.error('JwtStrategy - Error: User is not active:', user);\n        throw new UnauthorizedException(\"User is inactive\");\n      }\n\n      console.log('JwtStrategy - Validation successful for user:', user);\n      return user;\n    } catch (error) {\n      console.error('JwtStrategy - Error during validation:', error.message);\n      throw new UnauthorizedException(\"Validation failed: \" + error.message);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for user login (email/password)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User email', example: 'user@example.com'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User password', example: 'password123'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsEmail,\n  IsIn,\n  IsOptional,\n  IsEnum,\n} from \"class-validator\";\nimport { UserRole } from \"@prisma/client\";\nimport { ApiProperty } from \"@nestjs/swagger\"; // เพิ่ม import\n\n/**\n * DTO for initiating an OAuth login flow\n */\nexport class OAuthLoginDto {\n  @ApiProperty({ description: \"OAuth provider\", enum: [\"google\", \"facebook\", \"apple\"] })\n  @IsNotEmpty()\n  @IsString()\n  @IsIn([\"google\", \"facebook\", \"apple\"])\n  provider: string;\n\n  @ApiProperty({ description: \"Redirect URL after login (optional)\", required: false })\n  @IsOptional()\n  @IsString()\n  redirectUrl?: string;\n}\n\n/**\n * DTO for handling OAuth callback\n */\nexport class OAuthCallbackDto {\n  @ApiProperty({ description: \"Authorization code from OAuth provider\" })\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n}\n\n/**\n * DTO for user registration (email/password)\n */\nexport class RegisterDto {\n  @ApiProperty({ description: \"User email\", example: \"user@example.com\" })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: \"User password\", example: \"password123\" })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @ApiProperty({ description: \"User first name\", example: \"John\" })\n  @IsNotEmpty()\n  @IsString()\n  firstName: string;\n\n  @ApiProperty({ description: \"User last name\", example: \"Doe\" })\n  @IsNotEmpty()\n  @IsString()\n  lastName: string;\n\n  @ApiProperty({ description: \"User phone number (optional)\", example: \"1234567890\", required: false })\n  @IsOptional()\n  @IsString()\n  phone?: string;\n\n  @ApiProperty({\n    description: \"User role\",\n    enum: UserRole,\n    example: UserRole.EMERGENCY_CENTER,\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(UserRole)\n  @IsIn([\n    UserRole.EMERGENCY_CENTER,\n    UserRole.HOSPITAL,\n    UserRole.RESCUE_TEAM,\n    UserRole.ADMIN,\n  ])\n  role?: UserRole; // จำกัดบทบาทสำหรับเจ้าหน้าที่\n}\n\n/**\n * DTO for user login (email/password)\n */\nexport class LoginDto {\n  @ApiProperty({ description: \"User email\", example: \"user@example.com\" })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: \"User password\", example: \"password123\" })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n/**\n * DTO for refreshing tokens\n */\nexport class RefreshTokenDto {\n  @ApiProperty({ description: \"Refresh token\" })\n  @IsNotEmpty()\n  @IsString()\n  refreshToken: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkAsReadDto.html":{"url":"classes/MarkAsReadDto.html","title":"class - MarkAsReadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkAsReadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notification/dto/notification.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                notificationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notificationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notification/dto/notification.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsUUID, IsOptional, IsObject } from \"class-validator\";\n\nexport class CreateNotificationDto {\n  @IsString()\n  type: string;\n\n  @IsString()\n  title: string;\n\n  @IsString()\n  body: string;\n\n  @IsUUID()\n  userId: string;\n\n  @IsOptional()\n  @IsObject()\n  metadata?: Record;\n}\n\nexport class MarkAsReadDto {\n  @IsUUID()\n  notificationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationController.html":{"url":"controllers/NotificationController.html","title":"controller - NotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notification/notification.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                notifications\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                markAllAsRead\n                            \n                            \n                                    \n                                markAsRead\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(user: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/notification/notification.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        markAllAsRead\n                        \n                    \n                \n            \n            \n                \n                        \n                    markAllAsRead(user: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('read-all')\n                \n            \n\n                    \n                        \n                            Defined in src/notification/notification.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        markAsRead\n                        \n                    \n                \n            \n            \n                \n                        \n                    markAsRead(id: string, user: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id/read')\n                \n            \n\n                    \n                        \n                            Defined in src/notification/notification.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Put, Param, UseGuards } from \"@nestjs/common\";\nimport { NotificationService } from \"./notification.service\";\nimport { JwtAuthGuard } from \"../auth/guards/jwt-auth.guard\";\nimport { CurrentUser } from \"../auth/decorators/current-user.decorator\";\n\n@Controller(\"notifications\")\n@UseGuards(JwtAuthGuard)\nexport class NotificationController {\n  constructor(private readonly notificationService: NotificationService) {}\n\n  @Get()\n  findAll(@CurrentUser() user: any) {\n    return this.notificationService.findAll(user.id);\n  }\n\n  @Put(\":id/read\")\n  markAsRead(@Param(\"id\") id: string, @CurrentUser() user: any) {\n    return this.notificationService.markAsRead(id, user.id);\n  }\n\n  @Put(\"read-all\")\n  markAllAsRead(@CurrentUser() user: any) {\n    return this.notificationService.markAllAsRead(user.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationGateway.html":{"url":"classes/NotificationGateway.html","title":"class - NotificationGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notification/notification.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayInit\n                        OnGatewayConnection\n                        OnGatewayDisconnect\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    \n                                server\n                            \n                            \n                                    Private\n                                userSocketMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterInit\n                            \n                            \n                                broadcastEmergency\n                            \n                            \n                                broadcastStatusUpdate\n                            \n                            \n                                    Private\n                                disconnect\n                            \n                            \n                                    Private\n                                extractToken\n                            \n                            \n                                    Async\n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                    Private\n                                removeUserSocket\n                            \n                            \n                                sendToRole\n                            \n                            \n                                sendToUser\n                            \n                            \n                                    Private\n                                storeUserSocket\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, authService: AuthService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/notification/notification.gateway.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(\"NotificationGateway\")\n                    \n                \n                    \n                        \n                                Defined in src/notification/notification.gateway.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notification/notification.gateway.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSocketMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/notification/notification.gateway.ts:37\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterInit\n                        \n                    \n                \n            \n            \n                \nafterInit(server: Server)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.gateway.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                server\n                                            \n                                                        Server\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastEmergency\n                        \n                    \n                \n            \n            \n                \nbroadcastEmergency(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.gateway.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastStatusUpdate\n                        \n                    \n                \n            \n            \n                \nbroadcastStatusUpdate(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.gateway.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        disconnect\n                        \n                    \n                \n            \n            \n                \n                        \n                    disconnect(client: Socket)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.gateway.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractToken(client: Socket)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.gateway.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleConnection(client: Socket)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.gateway.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: Socket)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.gateway.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeUserSocket\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUserSocket(socketId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.gateway.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                socketId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendToRole\n                        \n                    \n                \n            \n            \n                \nsendToRole(role: string, event: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.gateway.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendToUser\n                        \n                    \n                \n            \n            \n                \nsendToUser(userId: string, event: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.gateway.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storeUserSocket\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeUserSocket(userId: string, socketId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.gateway.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                socketId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.gateway.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  WebSocketServer,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  OnGatewayInit,\n} from \"@nestjs/websockets\";\nimport { Server, Socket } from \"socket.io\";\nimport { Logger } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { AuthService } from \"../auth/auth.service\";\nimport { PrismaService } from \"../prisma/prisma.service\";\n\n// กำหนด interface TokenPayload\ninterface TokenPayload {\n  id: string;\n  sub: string;\n  email: string;\n  role: string;\n  iat?: number;\n  exp?: number;\n}\n\n@WebSocketGateway({\n  cors: {\n    origin: \"*\", // In production, replace with actual frontend domain\n    methods: [\"GET\", \"POST\"],\n    credentials: true,\n  },\n  namespace: \"/notifications\",\n})\nexport class NotificationGateway\n  implements OnGatewayInit, OnGatewayConnection, OnGatewayDisconnect\n{\n  @WebSocketServer() server: Server;\n  private logger = new Logger(\"NotificationGateway\");\n  private userSocketMap: Map> = new Map();\n\n  constructor(\n    private jwtService: JwtService,\n    private authService: AuthService,\n    private prisma: PrismaService,\n  ) {}\n\n  afterInit(server: Server) {\n    this.logger.log(\"Notification WebSocket Gateway initialized\");\n  }\n\n  async handleConnection(client: Socket) {\n    try {\n      const token = this.extractToken(client);\n      if (!token) {\n        this.disconnect(client);\n        return;\n      }\n\n      const user = await this.validateToken(token);\n      if (!user) {\n        this.disconnect(client);\n        return;\n      }\n\n      // Store socket connection\n      this.storeUserSocket(user.id, client.id);\n\n      // Join user-specific room\n      client.join(`user:${user.id}`);\n\n      // Join role-based room\n      if (user.role) {\n        client.join(`role:${user.role}`);\n      }\n\n      this.logger.log(`Client connected: ${client.id} for user ${user.id}`);\n    } catch (error) {\n      this.logger.error(`Connection error: ${error.message}`);\n      this.disconnect(client);\n    }\n  }\n\n  handleDisconnect(client: Socket) {\n    this.removeUserSocket(client.id);\n    this.logger.log(`Client disconnected: ${client.id}`);\n  }\n\n  private extractToken(client: Socket): string | null {\n    const auth =\n      client.handshake.auth.token || client.handshake.headers.authorization;\n\n    if (!auth) return null;\n\n    return auth.replace(\"Bearer \", \"\");\n  }\n\n  private async validateToken(token: string): Promise {\n    try {\n      const payload = await this.authService.validateToken(token);\n      return payload as TokenPayload;\n    } catch {\n      return null;\n    }\n  }\n\n  private storeUserSocket(userId: string, socketId: string) {\n    if (!this.userSocketMap.has(userId)) {\n      this.userSocketMap.set(userId, new Set());\n    }\n    this.userSocketMap.get(userId).add(socketId);\n  }\n\n  private removeUserSocket(socketId: string) {\n    for (const [userId, sockets] of this.userSocketMap.entries()) {\n      if (sockets.has(socketId)) {\n        sockets.delete(socketId);\n        if (sockets.size === 0) {\n          this.userSocketMap.delete(userId);\n        }\n        break;\n      }\n    }\n  }\n\n  private disconnect(client: Socket) {\n    client.disconnect(true);\n  }\n\n  // Public methods for sending notifications\n  sendToUser(userId: string, event: string, data: any) {\n    this.server.to(`user:${userId}`).emit(event, data);\n  }\n\n  sendToRole(role: string, event: string, data: any) {\n    this.server.to(`role:${role}`).emit(event, data);\n  }\n\n  broadcastEmergency(data: any) {\n    this.server\n      .to(\"role:EMERGENCY_CENTER\")\n      .to(\"role:HOSPITAL\")\n      .to(\"role:RESCUE_TEAM\")\n      .emit(\"emergency\", data);\n  }\n\n  broadcastStatusUpdate(data: any) {\n    this.server.emit(\"status-update\", data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_NotificationModule_imports\n\n\n\ncluster_NotificationModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nAuthModule->NotificationModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nNotificationModule -->\n\nPrismaModule->NotificationModule\n\n\n\n\n\nNotificationGateway \n\nNotificationGateway \n\nNotificationGateway  -->\n\nNotificationModule->NotificationGateway \n\n\n\n\n\nNotificationService \n\nNotificationService \n\nNotificationService  -->\n\nNotificationModule->NotificationService \n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notification/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NotificationGateway\n                        \n                        \n                            NotificationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { NotificationController } from \"./notification.controller\";\nimport { NotificationService } from \"./notification.service\";\nimport { NotificationGateway } from \"./notification.gateway\";\nimport { PrismaModule } from \"../prisma/prisma.module\";\nimport { AuthModule } from \"../auth/auth.module\";\nimport { JwtModule } from \"@nestjs/jwt\";\n\n@Module({\n  imports: [\n    PrismaModule,\n    AuthModule,\n    JwtModule.register({}), // เพิ่ม JwtModule ถ้าจำเป็นสำหรับ JwtService\n  ],\n  controllers: [NotificationController],\n  providers: [NotificationService, NotificationGateway],\n  exports: [NotificationService, NotificationGateway],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notification/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNotification\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                markAllAsRead\n                            \n                            \n                                    Async\n                                markAsRead\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, notificationGateway: NotificationGateway)\n                    \n                \n                        \n                            \n                                Defined in src/notification/notification.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationGateway\n                                                  \n                                                        \n                                                                        NotificationGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNotification(createNotificationDto: CreateNotificationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNotificationDto\n                                            \n                                                            CreateNotificationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        markAllAsRead\n                        \n                    \n                \n            \n            \n                \n                        \n                    markAllAsRead(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        markAsRead\n                        \n                    \n                \n            \n            \n                \n                        \n                    markAsRead(id: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notification/notification.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PrismaService } from \"../prisma/prisma.service\";\nimport { NotificationGateway } from \"./notification.gateway\";\nimport { CreateNotificationDto } from \"./dto/notification.dto\";\n\n@Injectable()\nexport class NotificationService {\n  constructor(\n    private prisma: PrismaService,\n    private notificationGateway: NotificationGateway,\n  ) {}\n\n  async createNotification(createNotificationDto: CreateNotificationDto) {\n    const notification = await this.prisma.notification.create({\n      data: {\n        type: createNotificationDto.type,\n        title: createNotificationDto.title,\n        body: createNotificationDto.body,\n        userId: createNotificationDto.userId,\n        metadata: createNotificationDto.metadata,\n      },\n    });\n\n    // Send real-time notification via WebSocket\n    this.notificationGateway.sendToUser(\n      createNotificationDto.userId,\n      \"notification\",\n      notification,\n    );\n\n    return notification;\n  }\n\n  async markAsRead(id: string, userId: string) {\n    return this.prisma.notification.update({\n      where: {\n        id,\n        userId,\n      },\n      data: {\n        isRead: true,\n      },\n    });\n  }\n\n  async markAllAsRead(userId: string) {\n    return this.prisma.notification.updateMany({\n      where: {\n        userId,\n        isRead: false,\n      },\n      data: {\n        isRead: true,\n      },\n    });\n  }\n\n  async findAll(userId: string) {\n    return this.prisma.notification.findMany({\n      where: {\n        userId,\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthCallbackDto.html":{"url":"classes/OAuthCallbackDto.html","title":"class - OAuthCallbackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthCallbackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for handling OAuth callback\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Authorization code from OAuth provider'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsEmail,\n  IsIn,\n  IsOptional,\n  IsEnum,\n} from \"class-validator\";\nimport { UserRole } from \"@prisma/client\";\nimport { ApiProperty } from \"@nestjs/swagger\"; // เพิ่ม import\n\n/**\n * DTO for initiating an OAuth login flow\n */\nexport class OAuthLoginDto {\n  @ApiProperty({ description: \"OAuth provider\", enum: [\"google\", \"facebook\", \"apple\"] })\n  @IsNotEmpty()\n  @IsString()\n  @IsIn([\"google\", \"facebook\", \"apple\"])\n  provider: string;\n\n  @ApiProperty({ description: \"Redirect URL after login (optional)\", required: false })\n  @IsOptional()\n  @IsString()\n  redirectUrl?: string;\n}\n\n/**\n * DTO for handling OAuth callback\n */\nexport class OAuthCallbackDto {\n  @ApiProperty({ description: \"Authorization code from OAuth provider\" })\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n}\n\n/**\n * DTO for user registration (email/password)\n */\nexport class RegisterDto {\n  @ApiProperty({ description: \"User email\", example: \"user@example.com\" })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: \"User password\", example: \"password123\" })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @ApiProperty({ description: \"User first name\", example: \"John\" })\n  @IsNotEmpty()\n  @IsString()\n  firstName: string;\n\n  @ApiProperty({ description: \"User last name\", example: \"Doe\" })\n  @IsNotEmpty()\n  @IsString()\n  lastName: string;\n\n  @ApiProperty({ description: \"User phone number (optional)\", example: \"1234567890\", required: false })\n  @IsOptional()\n  @IsString()\n  phone?: string;\n\n  @ApiProperty({\n    description: \"User role\",\n    enum: UserRole,\n    example: UserRole.EMERGENCY_CENTER,\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(UserRole)\n  @IsIn([\n    UserRole.EMERGENCY_CENTER,\n    UserRole.HOSPITAL,\n    UserRole.RESCUE_TEAM,\n    UserRole.ADMIN,\n  ])\n  role?: UserRole; // จำกัดบทบาทสำหรับเจ้าหน้าที่\n}\n\n/**\n * DTO for user login (email/password)\n */\nexport class LoginDto {\n  @ApiProperty({ description: \"User email\", example: \"user@example.com\" })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: \"User password\", example: \"password123\" })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n/**\n * DTO for refreshing tokens\n */\nexport class RefreshTokenDto {\n  @ApiProperty({ description: \"Refresh token\" })\n  @IsNotEmpty()\n  @IsString()\n  refreshToken: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthLoginDto.html":{"url":"classes/OAuthLoginDto.html","title":"class - OAuthLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for initiating an OAuth login flow\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                provider\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'OAuth provider', enum: undefined})@IsNotEmpty()@IsString()@IsIn(['google', 'facebook', 'apple'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Redirect URL after login (optional)', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsEmail,\n  IsIn,\n  IsOptional,\n  IsEnum,\n} from \"class-validator\";\nimport { UserRole } from \"@prisma/client\";\nimport { ApiProperty } from \"@nestjs/swagger\"; // เพิ่ม import\n\n/**\n * DTO for initiating an OAuth login flow\n */\nexport class OAuthLoginDto {\n  @ApiProperty({ description: \"OAuth provider\", enum: [\"google\", \"facebook\", \"apple\"] })\n  @IsNotEmpty()\n  @IsString()\n  @IsIn([\"google\", \"facebook\", \"apple\"])\n  provider: string;\n\n  @ApiProperty({ description: \"Redirect URL after login (optional)\", required: false })\n  @IsOptional()\n  @IsString()\n  redirectUrl?: string;\n}\n\n/**\n * DTO for handling OAuth callback\n */\nexport class OAuthCallbackDto {\n  @ApiProperty({ description: \"Authorization code from OAuth provider\" })\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n}\n\n/**\n * DTO for user registration (email/password)\n */\nexport class RegisterDto {\n  @ApiProperty({ description: \"User email\", example: \"user@example.com\" })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: \"User password\", example: \"password123\" })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @ApiProperty({ description: \"User first name\", example: \"John\" })\n  @IsNotEmpty()\n  @IsString()\n  firstName: string;\n\n  @ApiProperty({ description: \"User last name\", example: \"Doe\" })\n  @IsNotEmpty()\n  @IsString()\n  lastName: string;\n\n  @ApiProperty({ description: \"User phone number (optional)\", example: \"1234567890\", required: false })\n  @IsOptional()\n  @IsString()\n  phone?: string;\n\n  @ApiProperty({\n    description: \"User role\",\n    enum: UserRole,\n    example: UserRole.EMERGENCY_CENTER,\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(UserRole)\n  @IsIn([\n    UserRole.EMERGENCY_CENTER,\n    UserRole.HOSPITAL,\n    UserRole.RESCUE_TEAM,\n    UserRole.ADMIN,\n  ])\n  role?: UserRole; // จำกัดบทบาทสำหรับเจ้าหน้าที่\n}\n\n/**\n * DTO for user login (email/password)\n */\nexport class LoginDto {\n  @ApiProperty({ description: \"User email\", example: \"user@example.com\" })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: \"User password\", example: \"password123\" })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n/**\n * DTO for refreshing tokens\n */\nexport class RefreshTokenDto {\n  @ApiProperty({ description: \"Refresh token\" })\n  @IsNotEmpty()\n  @IsString()\n  refreshToken: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from \"@nestjs/common\";\nimport { PrismaService } from \"./prisma.service\";\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cleanDatabase\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cleanDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    cleanDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit, OnModuleDestroy } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n\n@Injectable()\nexport class PrismaService\n  extends PrismaClient\n  implements OnModuleInit, OnModuleDestroy\n{\n  constructor() {\n    super({\n      log:\n        process.env.NODE_ENV === \"development\"\n          ? [\"query\", \"info\", \"warn\", \"error\"]\n          : [\"error\"],\n    });\n    // Log DATABASE_URL เพื่อยืนยันการเชื่อมต่อ\n    console.log('PrismaService - DATABASE_URL:', process.env.DATABASE_URL);\n  }\n\n  async onModuleInit() {\n    try {\n      console.log('PrismaService - Connecting to database...');\n      await this.$connect();\n      console.log('PrismaService - Database connected successfully');\n    } catch (error) {\n      console.error('PrismaService - Error connecting to database:', error.message);\n      throw error;\n    }\n  }\n\n  async onModuleDestroy() {\n    try {\n      console.log('PrismaService - Disconnecting from database...');\n      await this.$disconnect();\n      console.log('PrismaService - Database disconnected successfully');\n    } catch (error) {\n      console.error('PrismaService - Error disconnecting from database:', error.message);\n    }\n  }\n\n  async cleanDatabase() {\n    if (process.env.NODE_ENV !== \"production\") {\n      const tables = [\n        \"notifications\",\n        \"emergency_responses\",\n        \"emergency_requests\",\n        \"users\",\n        \"organizations\",\n      ];\n\n      try {\n        console.log('PrismaService - Cleaning database...');\n        await this.$transaction(\n          tables.map((table) =>\n            this.$executeRawUnsafe(`TRUNCATE TABLE \"${table}\" CASCADE;`),\n          ),\n        );\n        console.log('PrismaService - Database cleaned successfully');\n      } catch (error) {\n        console.error('PrismaService - Error cleaning database:', error.message);\n        throw error;\n      }\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for refreshing tokens\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Refresh token'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:106\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsEmail,\n  IsIn,\n  IsOptional,\n  IsEnum,\n} from \"class-validator\";\nimport { UserRole } from \"@prisma/client\";\nimport { ApiProperty } from \"@nestjs/swagger\"; // เพิ่ม import\n\n/**\n * DTO for initiating an OAuth login flow\n */\nexport class OAuthLoginDto {\n  @ApiProperty({ description: \"OAuth provider\", enum: [\"google\", \"facebook\", \"apple\"] })\n  @IsNotEmpty()\n  @IsString()\n  @IsIn([\"google\", \"facebook\", \"apple\"])\n  provider: string;\n\n  @ApiProperty({ description: \"Redirect URL after login (optional)\", required: false })\n  @IsOptional()\n  @IsString()\n  redirectUrl?: string;\n}\n\n/**\n * DTO for handling OAuth callback\n */\nexport class OAuthCallbackDto {\n  @ApiProperty({ description: \"Authorization code from OAuth provider\" })\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n}\n\n/**\n * DTO for user registration (email/password)\n */\nexport class RegisterDto {\n  @ApiProperty({ description: \"User email\", example: \"user@example.com\" })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: \"User password\", example: \"password123\" })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @ApiProperty({ description: \"User first name\", example: \"John\" })\n  @IsNotEmpty()\n  @IsString()\n  firstName: string;\n\n  @ApiProperty({ description: \"User last name\", example: \"Doe\" })\n  @IsNotEmpty()\n  @IsString()\n  lastName: string;\n\n  @ApiProperty({ description: \"User phone number (optional)\", example: \"1234567890\", required: false })\n  @IsOptional()\n  @IsString()\n  phone?: string;\n\n  @ApiProperty({\n    description: \"User role\",\n    enum: UserRole,\n    example: UserRole.EMERGENCY_CENTER,\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(UserRole)\n  @IsIn([\n    UserRole.EMERGENCY_CENTER,\n    UserRole.HOSPITAL,\n    UserRole.RESCUE_TEAM,\n    UserRole.ADMIN,\n  ])\n  role?: UserRole; // จำกัดบทบาทสำหรับเจ้าหน้าที่\n}\n\n/**\n * DTO for user login (email/password)\n */\nexport class LoginDto {\n  @ApiProperty({ description: \"User email\", example: \"user@example.com\" })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: \"User password\", example: \"password123\" })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n/**\n * DTO for refreshing tokens\n */\nexport class RefreshTokenDto {\n  @ApiProperty({ description: \"Refresh token\" })\n  @IsNotEmpty()\n  @IsString()\n  refreshToken: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for user registration (email/password)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User email', example: 'user@example.com'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User first name', example: 'John'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User last name', example: 'Doe'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User password', example: 'password123'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User phone number (optional)', example: '1234567890', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User role', enum: UserRole, example: undefined, required: false})@IsOptional()@IsEnum(UserRole)@IsIn(['undefined', 'undefined', 'undefined', 'undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:81\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsEmail,\n  IsIn,\n  IsOptional,\n  IsEnum,\n} from \"class-validator\";\nimport { UserRole } from \"@prisma/client\";\nimport { ApiProperty } from \"@nestjs/swagger\"; // เพิ่ม import\n\n/**\n * DTO for initiating an OAuth login flow\n */\nexport class OAuthLoginDto {\n  @ApiProperty({ description: \"OAuth provider\", enum: [\"google\", \"facebook\", \"apple\"] })\n  @IsNotEmpty()\n  @IsString()\n  @IsIn([\"google\", \"facebook\", \"apple\"])\n  provider: string;\n\n  @ApiProperty({ description: \"Redirect URL after login (optional)\", required: false })\n  @IsOptional()\n  @IsString()\n  redirectUrl?: string;\n}\n\n/**\n * DTO for handling OAuth callback\n */\nexport class OAuthCallbackDto {\n  @ApiProperty({ description: \"Authorization code from OAuth provider\" })\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n}\n\n/**\n * DTO for user registration (email/password)\n */\nexport class RegisterDto {\n  @ApiProperty({ description: \"User email\", example: \"user@example.com\" })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: \"User password\", example: \"password123\" })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @ApiProperty({ description: \"User first name\", example: \"John\" })\n  @IsNotEmpty()\n  @IsString()\n  firstName: string;\n\n  @ApiProperty({ description: \"User last name\", example: \"Doe\" })\n  @IsNotEmpty()\n  @IsString()\n  lastName: string;\n\n  @ApiProperty({ description: \"User phone number (optional)\", example: \"1234567890\", required: false })\n  @IsOptional()\n  @IsString()\n  phone?: string;\n\n  @ApiProperty({\n    description: \"User role\",\n    enum: UserRole,\n    example: UserRole.EMERGENCY_CENTER,\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(UserRole)\n  @IsIn([\n    UserRole.EMERGENCY_CENTER,\n    UserRole.HOSPITAL,\n    UserRole.RESCUE_TEAM,\n    UserRole.ADMIN,\n  ])\n  role?: UserRole; // จำกัดบทบาทสำหรับเจ้าหน้าที่\n}\n\n/**\n * DTO for user login (email/password)\n */\nexport class LoginDto {\n  @ApiProperty({ description: \"User email\", example: \"user@example.com\" })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: \"User password\", example: \"password123\" })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n/**\n * DTO for refreshing tokens\n */\nexport class RefreshTokenDto {\n  @ApiProperty({ description: \"Refresh token\" })\n  @IsNotEmpty()\n  @IsString()\n  refreshToken: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReportQueryDto.html":{"url":"classes/ReportQueryDto.html","title":"class - ReportQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReportQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dto/dashboard.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                region\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                startDate\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/dashboard.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/dashboard.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/dashboard.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/dashboard.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReportType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(ReportType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/dashboard.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsDateString, IsEnum } from \"class-validator\";\n\nenum ReportType {\n  DAILY = \"DAILY\",\n  WEEKLY = \"WEEKLY\",\n  MONTHLY = \"MONTHLY\",\n  CUSTOM = \"CUSTOM\",\n}\n\nexport class ReportQueryDto {\n  @IsEnum(ReportType)\n  type: ReportType;\n\n  @IsOptional()\n  @IsDateString()\n  startDate?: string;\n\n  @IsOptional()\n  @IsDateString()\n  endDate?: string;\n\n  @IsOptional()\n  @IsString()\n  region?: string;\n\n  @IsOptional()\n  @IsString()\n  category?: string;\n}\n\nexport class DashboardStatsResponseDto {\n  totalEmergencies: number;\n  activeEmergencies: number;\n  completedEmergencies: number;\n  cancelledEmergencies: number;\n  averageResponseTime: number;\n  activeTeams: number;\n  availableHospitalBeds: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RescueController.html":{"url":"controllers/RescueController.html","title":"controller - RescueController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RescueController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rescue/rescue.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rescue-teams\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findAvailableTeams\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRescueTeamDto: CreateRescueTeamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(UserRole.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in src/rescue/rescue.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRescueTeamDto\n                                            \n                                                            CreateRescueTeamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(search?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Roles(UserRole.ADMIN, UserRole.EMERGENCY_CENTER)\n                \n            \n\n                    \n                        \n                            Defined in src/rescue/rescue.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAvailableTeams\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAvailableTeams(latitude: number, longitude: number, radius: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('available')@Roles(UserRole.EMERGENCY_CENTER)\n                \n            \n\n                    \n                        \n                            Defined in src/rescue/rescue.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                latitude\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                longitude\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                radius\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Roles(UserRole.ADMIN, UserRole.EMERGENCY_CENTER, UserRole.RESCUE_TEAM)\n                \n            \n\n                    \n                        \n                            Defined in src/rescue/rescue.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRescueTeamDto: UpdateRescueTeamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@Roles(UserRole.ADMIN, UserRole.RESCUE_TEAM)\n                \n            \n\n                    \n                        \n                            Defined in src/rescue/rescue.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRescueTeamDto\n                                            \n                                                            UpdateRescueTeamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, updateStatusDto: UpdateRescueTeamStatusDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id/status')@Roles(UserRole.RESCUE_TEAM)\n                \n            \n\n                    \n                        \n                            Defined in src/rescue/rescue.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStatusDto\n                                            \n                                                            UpdateRescueTeamStatusDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Param,\n  Body,\n  Query,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { RescueService } from \"./rescue.service\";\nimport { JwtAuthGuard } from \"../auth/guards/jwt-auth.guard\";\nimport { RolesGuard } from \"../auth/guards/roles.guard\";\nimport { Roles } from \"../auth/decorators/roles.decorator\";\nimport { UserRole } from \"@prisma/client\";\nimport {\n  CreateRescueTeamDto,\n  UpdateRescueTeamDto,\n  UpdateRescueTeamStatusDto,\n} from \"./dto/rescue.dto\";\n\n@Controller(\"rescue-teams\")\n@UseGuards(JwtAuthGuard, RolesGuard)\nexport class RescueController {\n  constructor(private readonly rescueService: RescueService) {}\n\n  @Post()\n  @Roles(UserRole.ADMIN)\n  create(@Body() createRescueTeamDto: CreateRescueTeamDto) {\n    return this.rescueService.create(createRescueTeamDto);\n  }\n\n  @Get()\n  @Roles(UserRole.ADMIN, UserRole.EMERGENCY_CENTER)\n  findAll(@Query(\"search\") search?: string) {\n    return this.rescueService.findAll(search);\n  }\n\n  @Get(\":id\")\n  @Roles(UserRole.ADMIN, UserRole.EMERGENCY_CENTER, UserRole.RESCUE_TEAM)\n  findOne(@Param(\"id\") id: string) {\n    return this.rescueService.findOne(id);\n  }\n\n  @Put(\":id\")\n  @Roles(UserRole.ADMIN, UserRole.RESCUE_TEAM)\n  update(\n    @Param(\"id\") id: string,\n    @Body() updateRescueTeamDto: UpdateRescueTeamDto,\n  ) {\n    return this.rescueService.update(id, updateRescueTeamDto);\n  }\n\n  @Put(\":id/status\")\n  @Roles(UserRole.RESCUE_TEAM)\n  updateStatus(\n    @Param(\"id\") id: string,\n    @Body() updateStatusDto: UpdateRescueTeamStatusDto,\n  ) {\n    return this.rescueService.updateStatus(id, updateStatusDto);\n  }\n\n  @Get(\"available\")\n  @Roles(UserRole.EMERGENCY_CENTER)\n  findAvailableTeams(\n    @Query(\"latitude\") latitude: number,\n    @Query(\"longitude\") longitude: number,\n    @Query(\"radius\") radius: number = 10,\n  ) {\n    return this.rescueService.findAvailableTeams(latitude, longitude, radius);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RescueModule.html":{"url":"modules/RescueModule.html","title":"module - RescueModule","body":"\n                   \n\n\n\n\n    Modules\n    RescueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RescueModule\n\n\n\ncluster_RescueModule_exports\n\n\n\ncluster_RescueModule_imports\n\n\n\ncluster_RescueModule_providers\n\n\n\n\nNotificationModule\n\nNotificationModule\n\n\n\nRescueModule\n\nRescueModule\n\nRescueModule -->\n\nNotificationModule->RescueModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nRescueModule -->\n\nPrismaModule->RescueModule\n\n\n\n\n\nRescueService \n\nRescueService \n\nRescueService  -->\n\nRescueModule->RescueService \n\n\n\n\n\nRescueService\n\nRescueService\n\nRescueModule -->\n\nRescueService->RescueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rescue/rescue.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RescueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RescueController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NotificationModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RescueService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { RescueController } from \"./rescue.controller\";\nimport { RescueService } from \"./rescue.service\";\nimport { PrismaModule } from \"../prisma/prisma.module\";\nimport { NotificationModule } from \"../notification/notification.module\";\n\n@Module({\n  imports: [\n    PrismaModule,\n    NotificationModule, // เพิ่มเพื่อให้ RescueService ใช้ NotificationService ได้\n  ],\n  controllers: [RescueController],\n  providers: [RescueService],\n  exports: [RescueService],\n})\nexport class RescueModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RescueService.html":{"url":"injectables/RescueService.html","title":"injectable - RescueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RescueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rescue/rescue.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAvailableTeams\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/rescue/rescue.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRescueTeamDto: CreateRescueTeamDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rescue/rescue.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRescueTeamDto\n                                            \n                                                            CreateRescueTeamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(search?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rescue/rescue.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAvailableTeams\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAvailableTeams(latitude: number, longitude: number, radius: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rescue/rescue.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                latitude\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                longitude\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                radius\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rescue/rescue.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRescueTeamDto: UpdateRescueTeamDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rescue/rescue.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRescueTeamDto\n                                            \n                                                            UpdateRescueTeamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, updateStatusDto: UpdateRescueTeamStatusDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rescue/rescue.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStatusDto\n                                            \n                                                            UpdateRescueTeamStatusDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n} from \"@nestjs/common\";\nimport { PrismaService } from \"../prisma/prisma.service\";\nimport { NotificationService } from \"../notification/notification.service\";\nimport {\n  CreateRescueTeamDto,\n  UpdateRescueTeamDto,\n  UpdateRescueTeamStatusDto,\n} from \"./dto/rescue.dto\";\nimport { EmergencyStatus } from \"../sos/dto/sos.dto\";\n\n// กำหนด type สำหรับ QueryMode\ntype QueryMode = \"default\" | \"insensitive\";\n\n@Injectable()\nexport class RescueService {\n  constructor(\n    private prisma: PrismaService,\n    private notificationService: NotificationService,\n  ) {}\n\n  async create(createRescueTeamDto: CreateRescueTeamDto) {\n    return this.prisma.organization.create({\n      data: {\n        ...createRescueTeamDto,\n        type: \"RESCUE_TEAM\",\n      },\n    });\n  }\n\n  async findAll(search?: string) {\n    const where = {\n      type: \"RESCUE_TEAM\",\n      ...(search && {\n        OR: [\n          { name: { contains: search, mode: \"insensitive\" as QueryMode } },\n          { city: { contains: search, mode: \"insensitive\" as QueryMode } },\n        ],\n      }),\n    };\n\n    return this.prisma.organization.findMany({\n      where,\n      include: {\n        users: {\n          select: {\n            id: true,\n            firstName: true,\n            lastName: true,\n            role: true,\n          },\n        },\n      },\n    });\n  }\n\n  async findOne(id: string) {\n    const rescueTeam = await this.prisma.organization.findFirst({\n      where: {\n        id,\n        type: \"RESCUE_TEAM\",\n      },\n      include: {\n        users: {\n          select: {\n            id: true,\n            firstName: true,\n            lastName: true,\n            role: true,\n          },\n        },\n        emergencyResponses: {\n          include: {\n            emergencyRequest: true,\n          },\n        },\n      },\n    });\n\n    if (!rescueTeam) {\n      throw new NotFoundException(\"Rescue team not found\");\n    }\n\n    return {\n      ...rescueTeam,\n      medicalInfo: rescueTeam.medicalInfo || {},\n    };\n  }\n\n  async update(id: string, updateRescueTeamDto: UpdateRescueTeamDto) {\n    await this.findOne(id);\n\n    return this.prisma.organization.update({\n      where: { id },\n      data: updateRescueTeamDto,\n    });\n  }\n\n  async updateStatus(id: string, updateStatusDto: UpdateRescueTeamStatusDto) {\n    const rescueTeam = await this.findOne(id);\n\n    const medicalInfo = rescueTeam.medicalInfo as Record | null;\n\n    return this.prisma.organization.update({\n      where: { id },\n      data: {\n        status: updateStatusDto.status,\n        medicalInfo: {\n          ...(medicalInfo || {}),\n          currentEmergencyId: updateStatusDto.currentEmergencyId,\n          notes: updateStatusDto.notes,\n        },\n      },\n    });\n  }\n\n  async findAvailableTeams(\n    latitude: number,\n    longitude: number,\n    radius: number = 10,\n  ) {\n    // Using Haversine formula to calculate distance\n    const teams = await this.prisma.$queryRaw`\n      SELECT \n        id,\n        name,\n        address,\n        city,\n        latitude,\n        longitude,\n        status,\n        (\n          6371 * acos(\n            cos(radians(${latitude})) * cos(radians(latitude)) *\n            cos(radians(longitude) - radians(${longitude})) +\n            sin(radians(${latitude})) * sin(radians(latitude))\n          )\n        ) AS distance\n      FROM \"organizations\"\n      WHERE \n        type = 'RESCUE_TEAM'\n        AND status = 'AVAILABLE'\n      HAVING distance \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from \"@nestjs/common\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nexport interface Response {\n  data: T;\n  statusCode: number;\n  timestamp: string;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    const httpContext = context.switchToHttp();\n    const response = httpContext.getResponse();\n\n    return next.handle().pipe(\n      map((data) => ({\n        data,\n        statusCode: response.statusCode || 200,\n        timestamp: new Date().toISOString(),\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/roles.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { UserRole } from \"@prisma/client\";\nimport { ROLES_KEY } from \"../decorators/roles.decorator\";\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    try {\n      const methodName = context.getHandler().name;\n      console.log('RolesGuard - Method being called:', methodName);\n\n      const requiredRoles = this.reflector.getAllAndOverride(\n        ROLES_KEY,\n        [context.getHandler(), context.getClass()],\n      );\n      console.log('RolesGuard - Required Roles:', requiredRoles);\n\n      if (!requiredRoles || requiredRoles.length === 0) {\n        console.log('RolesGuard - No required roles, allowing access');\n        return true;\n      }\n\n      const request = context.switchToHttp().getRequest();\n      const { user } = request;\n      console.log('RolesGuard - User from request:', user);\n\n      if (!user) {\n        console.error('RolesGuard - Error: No user found in request');\n        return false;\n      }\n\n      console.log('RolesGuard - User Role:', user.role);\n      console.log('RolesGuard - Type of User Role:', typeof user.role);\n      console.log('RolesGuard - Type of Required Roles:', requiredRoles.map(role => typeof role));\n\n      const match = requiredRoles.some(\n        (role) => user.role && String(user.role).toUpperCase() === String(role).toUpperCase()\n      );\n      console.log('RolesGuard - Role Match:', match);\n\n      if (!match) {\n        console.error('RolesGuard - Error: Role does not match. User Role:', user.role, 'Required Roles:', requiredRoles);\n      }\n\n      return match;\n    } catch (error) {\n      console.error('RolesGuard - Error during role validation:', error.message);\n      return false;\n    }\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SosController.html":{"url":"controllers/SosController.html","title":"controller - SosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sos/sos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createEmergencyRequest\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllEmergencyRequests\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getEmergencyRequestById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getEmergencyRequests\n                            \n                            \n                                    \n                                    \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createEmergencyRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmergencyRequest(createSosDto: CreateEmergencyRequestDto, user: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Roles(UserRole.PATIENT)\n                \n            \n\n                    \n                        \n                            Defined in src/sos/sos.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSosDto\n                                            \n                                                            CreateEmergencyRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllEmergencyRequests\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllEmergencyRequests()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all')@Roles(UserRole.EMERGENCY_CENTER, UserRole.HOSPITAL, UserRole.RESCUE_TEAM)\n                \n            \n\n                    \n                        \n                            Defined in src/sos/sos.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getEmergencyRequestById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmergencyRequestById(id: string, user: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Roles(UserRole.PATIENT)\n                \n            \n\n                    \n                        \n                            Defined in src/sos/sos.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getEmergencyRequests\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmergencyRequests(user: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Roles(UserRole.PATIENT)\n                \n            \n\n                    \n                        \n                            Defined in src/sos/sos.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, updateStatusDto: UpdateEmergencyStatusDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id/status')@Roles(UserRole.EMERGENCY_CENTER, UserRole.HOSPITAL, UserRole.RESCUE_TEAM)\n                \n            \n\n                    \n                        \n                            Defined in src/sos/sos.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStatusDto\n                                            \n                                                            UpdateEmergencyStatusDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Get, Put, Param, Body, UseGuards } from \"@nestjs/common\";\nimport { SosService } from \"./sos.service\";\nimport { JwtAuthGuard } from \"../auth/guards/jwt-auth.guard\";\nimport { RolesGuard } from \"../auth/guards/roles.guard\";\nimport { Roles } from \"../auth/decorators/roles.decorator\";\nimport { CurrentUser } from \"../auth/decorators/current-user.decorator\";\nimport { UserRole } from \"@prisma/client\";\nimport {\n  CreateEmergencyRequestDto,\n  UpdateEmergencyStatusDto,\n} from \"./dto/sos.dto\";\n\n@Controller(\"sos\")\n@UseGuards(JwtAuthGuard, RolesGuard)\nexport class SosController {\n  constructor(private readonly sosService: SosService) {}\n\n  @Post()\n  @Roles(UserRole.PATIENT)\n  createEmergencyRequest(\n    @Body() createSosDto: CreateEmergencyRequestDto,\n    @CurrentUser() user: any,\n  ) {\n    console.log('createEmergencyRequest called');\n    return this.sosService.createEmergencyRequest(createSosDto, user.id);\n  }\n\n  @Put(\":id/status\")\n  @Roles(UserRole.EMERGENCY_CENTER, UserRole.HOSPITAL, UserRole.RESCUE_TEAM)\n  updateStatus(\n    @Param(\"id\") id: string,\n    @Body() updateStatusDto: UpdateEmergencyStatusDto,\n  ) {\n    console.log('updateStatus called with id:', id);\n    return this.sosService.updateStatus(id, updateStatusDto);\n  }\n\n  @Get()\n  @Roles(UserRole.PATIENT)\n  async getEmergencyRequests(@CurrentUser() user: any) {\n    console.log('getEmergencyRequests called for user:', user.id);\n    return this.sosService.getEmergencyRequests(user.id);\n  }\n\n  @Get('all')\n  @Roles(UserRole.EMERGENCY_CENTER, UserRole.HOSPITAL, UserRole.RESCUE_TEAM)\n  async getAllEmergencyRequests() {\n    console.log('getAllEmergencyRequests called');\n    console.log('Expected roles:', [UserRole.EMERGENCY_CENTER, UserRole.HOSPITAL, UserRole.RESCUE_TEAM]);\n    return this.sosService.getAllEmergencyRequests();\n  }\n\n  @Get(':id')\n  @Roles(UserRole.PATIENT)\n  async getEmergencyRequestById(@Param('id') id: string, @CurrentUser() user: any) {\n    console.log('getEmergencyRequestById called with id:', id);\n    return this.sosService.getEmergencyRequestById(id, user.id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SosModule.html":{"url":"modules/SosModule.html","title":"module - SosModule","body":"\n                   \n\n\n\n\n    Modules\n    SosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SosModule\n\n\n\ncluster_SosModule_exports\n\n\n\ncluster_SosModule_providers\n\n\n\ncluster_SosModule_imports\n\n\n\n\nNotificationModule\n\nNotificationModule\n\n\n\nSosModule\n\nSosModule\n\nSosModule -->\n\nNotificationModule->SosModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nSosModule -->\n\nPrismaModule->SosModule\n\n\n\n\n\nSosService \n\nSosService \n\nSosService  -->\n\nSosModule->SosService \n\n\n\n\n\nSosService\n\nSosService\n\nSosModule -->\n\nSosService->SosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sos/sos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SosController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NotificationModule\n                        \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SosService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SosController } from \"./sos.controller\";\nimport { SosService } from \"./sos.service\";\nimport { PrismaModule } from \"../prisma/prisma.module\";\nimport { NotificationModule } from \"../notification/notification.module\";\n\n@Module({\n  imports: [PrismaModule, NotificationModule],\n  controllers: [SosController],\n  providers: [SosService],\n  exports: [SosService],\n})\nexport class SosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SosService.html":{"url":"injectables/SosService.html","title":"injectable - SosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sos/sos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEmergencyRequest\n                            \n                            \n                                    Async\n                                getAllEmergencyRequests\n                            \n                            \n                                    Async\n                                getEmergencyRequestById\n                            \n                            \n                                    Async\n                                getEmergencyRequests\n                            \n                            \n                                    Async\n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, notificationService: NotificationService, notificationGateway: NotificationGateway)\n                    \n                \n                        \n                            \n                                Defined in src/sos/sos.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationGateway\n                                                  \n                                                        \n                                                                        NotificationGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createEmergencyRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmergencyRequest(createSosDto: CreateEmergencyRequestDto, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sos/sos.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSosDto\n                                            \n                                                            CreateEmergencyRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllEmergencyRequests\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllEmergencyRequests()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sos/sos.service.ts:227\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getEmergencyRequestById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmergencyRequestById(id: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sos/sos.service.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getEmergencyRequests\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmergencyRequests(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sos/sos.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, updateStatusDto: UpdateEmergencyStatusDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sos/sos.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStatusDto\n                                            \n                                                            UpdateEmergencyStatusDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { PrismaService } from \"../prisma/prisma.service\";\nimport { NotificationService } from \"../notification/notification.service\";\nimport { NotificationGateway } from \"../notification/notification.gateway\";\nimport {\n  CreateEmergencyRequestDto,\n  UpdateEmergencyStatusDto,\n  EmergencyStatus,\n} from \"./dto/sos.dto\";\nimport { UserRole } from \"@prisma/client\";\n\n@Injectable()\nexport class SosService {\n  constructor(\n    private prisma: PrismaService,\n    private notificationService: NotificationService,\n    private notificationGateway: NotificationGateway,\n  ) {}\n\n  async createEmergencyRequest(\n    createSosDto: CreateEmergencyRequestDto,\n    userId: string,\n  ) {\n    const emergencyRequest = await this.prisma.emergencyRequest.create({\n      data: {\n        status: EmergencyStatus.PENDING,\n        description: createSosDto.description,\n        location: createSosDto.location,\n        latitude: createSosDto.latitude,\n        longitude: createSosDto.longitude,\n        medicalInfo: {\n          ...createSosDto.medicalInfo,\n          grade: createSosDto.grade,\n          type: createSosDto.type,\n        },\n        patientId: userId,\n      },\n      include: {\n        patient: true,\n      },\n    });\n\n    const responders = await this.prisma.user.findMany({\n      where: {\n        role: {\n          in: [\n            UserRole.EMERGENCY_CENTER,\n            UserRole.HOSPITAL,\n            UserRole.RESCUE_TEAM,\n          ],\n        },\n        status: \"ACTIVE\",\n      },\n    });\n\n    for (const responder of responders) {\n      await this.notificationService.createNotification({\n        type: \"EMERGENCY\",\n        title: \"New Emergency Request\",\n        body: `Emergency ${createSosDto.type} - ${createSosDto.grade} grade`,\n        userId: responder.id,\n        metadata: {\n          emergencyId: emergencyRequest.id,\n          grade: createSosDto.grade,\n          type: createSosDto.type,\n          location: emergencyRequest.location,\n          patientName: `${emergencyRequest.patient.firstName} ${emergencyRequest.patient.lastName}`,\n        },\n      });\n    }\n\n    this.notificationGateway.broadcastEmergency({\n      id: emergencyRequest.id,\n      type: createSosDto.type,\n      grade: createSosDto.grade,\n      location: emergencyRequest.location,\n      coordinates: {\n        latitude: emergencyRequest.latitude,\n        longitude: emergencyRequest.longitude,\n      },\n    });\n\n    return emergencyRequest;\n  }\n\n  async updateStatus(id: string, updateStatusDto: UpdateEmergencyStatusDto) {\n    const updatedEmergency = await this.prisma.$transaction(async (prisma) => {\n      const emergency = await prisma.emergencyRequest.findUnique({\n        where: { id },\n        include: {\n          patient: true,\n          responses: {\n            include: {\n              organization: {\n                include: {\n                  users: true,\n                },\n              },\n            },\n          },\n        },\n      });\n\n      if (!emergency) {\n        throw new NotFoundException(\"Emergency request not found\");\n      }\n\n      console.log(\"Before update - Emergency:\", emergency);\n\n      const updated = await prisma.emergencyRequest.update({\n        where: { id },\n        data: {\n          status: updateStatusDto.status,\n        },\n        include: {\n          patient: true,\n          responses: {\n            include: {\n              organization: {\n                include: {\n                  users: true,\n                },\n              },\n            },\n          },\n        },\n      });\n\n      console.log(\"After update - Updated emergency:\", updated);\n\n      await this.notificationService.createNotification({\n        type: \"STATUS_UPDATE\",\n        title: \"Emergency Status Update\",\n        body: `Your emergency request status has been updated to ${updateStatusDto.status}`,\n        userId: emergency.patientId,\n        metadata: {\n          emergencyId: emergency.id,\n          status: updateStatusDto.status,\n          notes: updateStatusDto.notes,\n        },\n      });\n\n      for (const response of emergency.responses) {\n        for (const user of response.organization.users) {\n          await this.notificationService.createNotification({\n            type: \"STATUS_UPDATE\",\n            title: \"Emergency Status Update\",\n            body: `Emergency request ${emergency.id} status updated to ${updateStatusDto.status}`,\n            userId: user.id,\n            metadata: {\n              emergencyId: emergency.id,\n              status: updateStatusDto.status,\n              notes: updateStatusDto.notes,\n            },\n          });\n        }\n      }\n\n      return updated;\n    });\n\n    this.notificationGateway.broadcastStatusUpdate({\n      emergencyId: updatedEmergency.id,\n      status: updateStatusDto.status,\n      notes: updateStatusDto.notes,\n    });\n\n    return updatedEmergency;\n  }\n\n  async getEmergencyRequests(userId: string) {\n    const emergencyRequests = await this.prisma.emergencyRequest.findMany({\n      where: {\n        patientId: userId,\n      },\n      include: {\n        patient: true,\n        responses: {\n          include: {\n            organization: true,\n          },\n        },\n      },\n    });\n\n    if (!emergencyRequests || emergencyRequests.length === 0) {\n      throw new NotFoundException(\"No emergency requests found for this user\");\n    }\n\n    return emergencyRequests;\n  }\n\n  async getEmergencyRequestById(id: string, userId: string) {\n    const emergencyRequest = await this.prisma.emergencyRequest.findUnique({\n      where: { id },\n      select: {\n        id: true,\n        status: true,\n        description: true,\n        location: true,\n        latitude: true,\n        longitude: true,\n        medicalInfo: true,\n        patientId: true,\n        patient: true,\n        responses: {\n          include: {\n            organization: true,\n          },\n        },\n      },\n    });\n\n    console.log(\"Fetched emergency request:\", emergencyRequest);\n\n    if (!emergencyRequest) {\n      throw new NotFoundException(\"Emergency request not found\");\n    }\n\n    if (emergencyRequest.patientId !== userId) {\n      throw new NotFoundException(\"Emergency request not found\");\n    }\n\n    return emergencyRequest;\n  }\n\n  async getAllEmergencyRequests() {\n    const emergencyRequests = await this.prisma.emergencyRequest.findMany({\n      include: {\n        patient: true,\n        responses: {\n          include: {\n            organization: true,\n          },\n        },\n      },\n    });\n\n    if (!emergencyRequests || emergencyRequests.length === 0) {\n      throw new NotFoundException(\"No emergency requests found\");\n    }\n\n    return emergencyRequests;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SupabaseModule.html":{"url":"modules/SupabaseModule.html","title":"module - SupabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    SupabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SupabaseModule\n\n\n\ncluster_SupabaseModule_exports\n\n\n\ncluster_SupabaseModule_providers\n\n\n\n\nSupabaseService \n\nSupabaseService \n\n\n\nSupabaseModule\n\nSupabaseModule\n\nSupabaseService  -->\n\nSupabaseModule->SupabaseService \n\n\n\n\n\nSupabaseService\n\nSupabaseService\n\nSupabaseModule -->\n\nSupabaseService->SupabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/supabase/supabase.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SupabaseService } from \"./supabase.service\";\n\n@Module({\n  providers: [SupabaseService],\n  exports: [SupabaseService],\n})\nexport class SupabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseService.html":{"url":"injectables/SupabaseService.html","title":"injectable - SupabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supabase/supabase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                client\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/supabase/supabase.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SupabaseClient\n\n                    \n                \n                    \n                        \n                                Defined in src/supabase/supabase.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { createClient, SupabaseClient } from \"@supabase/supabase-js\";\nimport { config } from \"dotenv\";\n\nconfig();\n\n@Injectable()\nexport class SupabaseService {\n  public client: SupabaseClient;\n\n  constructor() {\n    const supabaseUrl = process.env.SUPABASE_URL;\n    const SUPABASE_SERVICE_ROLE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\n    // Logging for debug\n    console.log(\"✅ Supabase URL:\", supabaseUrl);\n    console.log(\"✅ Supabase Key exists:\", !!SUPABASE_SERVICE_ROLE_KEY);\n\n    if (!supabaseUrl || !SUPABASE_SERVICE_ROLE_KEY) {\n      console.error(\n        \"❌ Missing SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY in .env\",\n      );\n      throw new Error(\"Supabase config missing\");\n    }\n\n    this.client = createClient(supabaseUrl, SUPABASE_SERVICE_ROLE_KEY);\n\n    // ตรวจสอบการเชื่อมต่อ\n    this.client.auth.getSession().then((session) => {\n      if (session) {\n        console.log(\"✅ Connected to Supabase\");\n      } else {\n        console.error(\"❌ Failed to connect to Supabase\");\n      }\n    });\n\n    console.log(\"✅ Supabase client created successfully\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SupabaseUser.html":{"url":"interfaces/SupabaseUser.html","title":"interface - SupabaseUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SupabaseUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            app_metadata\n                                        \n                                \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            user_metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        app_metadata:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_metadata:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  sub: string;\n  email: string;\n  role: string;\n  iat?: number;\n  exp?: number;\n}\n\nexport interface SupabaseUser {\n  id: string;\n  email: string;\n  app_metadata: {\n    provider?: string;\n    providers?: string[];\n  };\n  user_metadata: {\n    full_name?: string;\n    avatar_url?: string;\n    name?: string;\n    email?: string;\n    email_verified?: boolean;\n    phone?: string;\n    picture?: string;\n  };\n  role?: string;\n  aud: string;\n}\n\nexport interface AuthTokens {\n  access_token: string;\n  refresh_token?: string;\n  expires_in?: number;\n  token_type?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notification/notification.gateway.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  WebSocketGateway,\n  WebSocketServer,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  OnGatewayInit,\n} from \"@nestjs/websockets\";\nimport { Server, Socket } from \"socket.io\";\nimport { Logger } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { AuthService } from \"../auth/auth.service\";\nimport { PrismaService } from \"../prisma/prisma.service\";\n\n// กำหนด interface TokenPayload\ninterface TokenPayload {\n  id: string;\n  sub: string;\n  email: string;\n  role: string;\n  iat?: number;\n  exp?: number;\n}\n\n@WebSocketGateway({\n  cors: {\n    origin: \"*\", // In production, replace with actual frontend domain\n    methods: [\"GET\", \"POST\"],\n    credentials: true,\n  },\n  namespace: \"/notifications\",\n})\nexport class NotificationGateway\n  implements OnGatewayInit, OnGatewayConnection, OnGatewayDisconnect\n{\n  @WebSocketServer() server: Server;\n  private logger = new Logger(\"NotificationGateway\");\n  private userSocketMap: Map> = new Map();\n\n  constructor(\n    private jwtService: JwtService,\n    private authService: AuthService,\n    private prisma: PrismaService,\n  ) {}\n\n  afterInit(server: Server) {\n    this.logger.log(\"Notification WebSocket Gateway initialized\");\n  }\n\n  async handleConnection(client: Socket) {\n    try {\n      const token = this.extractToken(client);\n      if (!token) {\n        this.disconnect(client);\n        return;\n      }\n\n      const user = await this.validateToken(token);\n      if (!user) {\n        this.disconnect(client);\n        return;\n      }\n\n      // Store socket connection\n      this.storeUserSocket(user.id, client.id);\n\n      // Join user-specific room\n      client.join(`user:${user.id}`);\n\n      // Join role-based room\n      if (user.role) {\n        client.join(`role:${user.role}`);\n      }\n\n      this.logger.log(`Client connected: ${client.id} for user ${user.id}`);\n    } catch (error) {\n      this.logger.error(`Connection error: ${error.message}`);\n      this.disconnect(client);\n    }\n  }\n\n  handleDisconnect(client: Socket) {\n    this.removeUserSocket(client.id);\n    this.logger.log(`Client disconnected: ${client.id}`);\n  }\n\n  private extractToken(client: Socket): string | null {\n    const auth =\n      client.handshake.auth.token || client.handshake.headers.authorization;\n\n    if (!auth) return null;\n\n    return auth.replace(\"Bearer \", \"\");\n  }\n\n  private async validateToken(token: string): Promise {\n    try {\n      const payload = await this.authService.validateToken(token);\n      return payload as TokenPayload;\n    } catch {\n      return null;\n    }\n  }\n\n  private storeUserSocket(userId: string, socketId: string) {\n    if (!this.userSocketMap.has(userId)) {\n      this.userSocketMap.set(userId, new Set());\n    }\n    this.userSocketMap.get(userId).add(socketId);\n  }\n\n  private removeUserSocket(socketId: string) {\n    for (const [userId, sockets] of this.userSocketMap.entries()) {\n      if (sockets.has(socketId)) {\n        sockets.delete(socketId);\n        if (sockets.size === 0) {\n          this.userSocketMap.delete(userId);\n        }\n        break;\n      }\n    }\n  }\n\n  private disconnect(client: Socket) {\n    client.disconnect(true);\n  }\n\n  // Public methods for sending notifications\n  sendToUser(userId: string, event: string, data: any) {\n    this.server.to(`user:${userId}`).emit(event, data);\n  }\n\n  sendToRole(role: string, event: string, data: any) {\n    this.server.to(`role:${role}`).emit(event, data);\n  }\n\n  broadcastEmergency(data: any) {\n    this.server\n      .to(\"role:EMERGENCY_CENTER\")\n      .to(\"role:HOSPITAL\")\n      .to(\"role:RESCUE_TEAM\")\n      .emit(\"emergency\", data);\n  }\n\n  broadcastStatusUpdate(data: any) {\n    this.server.emit(\"status-update\", data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload-1.html":{"url":"interfaces/TokenPayload-1.html","title":"interface - TokenPayload-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  sub: string;\n  email: string;\n  role: string;\n  iat?: number;\n  exp?: number;\n}\n\nexport interface SupabaseUser {\n  id: string;\n  email: string;\n  app_metadata: {\n    provider?: string;\n    providers?: string[];\n  };\n  user_metadata: {\n    full_name?: string;\n    avatar_url?: string;\n    name?: string;\n    email?: string;\n    email_verified?: boolean;\n    phone?: string;\n    picture?: string;\n  };\n  role?: string;\n  aud: string;\n}\n\nexport interface AuthTokens {\n  access_token: string;\n  refresh_token?: string;\n  expires_in?: number;\n  token_type?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/transform.interceptor.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from \"@nestjs/common\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nexport interface Response {\n  data: T;\n  statusCode: number;\n  timestamp: string;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    const httpContext = context.switchToHttp();\n    const response = httpContext.getResponse();\n\n    return next.handle().pipe(\n      map((data) => ({\n        data,\n        statusCode: response.statusCode || 200,\n        timestamp: new Date().toISOString(),\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmergencyStatusDto.html":{"url":"classes/UpdateEmergencyStatusDto.html","title":"class - UpdateEmergencyStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmergencyStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sos/dto/sos.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                notes\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sos/dto/sos.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmergencyStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(EmergencyStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sos/dto/sos.dto.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsNumber,\n  IsEnum,\n  IsObject,\n} from \"class-validator\";\n\nexport enum EmergencyGrade {\n  CRITICAL = \"CRITICAL\",\n  URGENT = \"URGENT\",\n  NON_URGENT = \"NON_URGENT\",\n}\n\nexport enum EmergencyType {\n  ACCIDENT = \"ACCIDENT\",\n  MEDICAL = \"MEDICAL\",\n  FIRE = \"FIRE\",\n  CRIME = \"CRIME\",\n  OTHER = \"OTHER\",\n}\n\nexport enum EmergencyStatus {\n  PENDING = \"PENDING\",\n  ASSIGNED = \"ASSIGNED\",\n  IN_PROGRESS = \"IN_PROGRESS\",\n  COMPLETED = \"COMPLETED\",\n  CANCELLED = \"CANCELLED\",\n}\n\nexport class CreateEmergencyRequestDto {\n  @IsString()\n  description: string;\n\n  @IsOptional()\n  @IsString()\n  location?: string;\n\n  @IsOptional()\n  @IsNumber()\n  latitude?: number;\n\n  @IsOptional()\n  @IsNumber()\n  longitude?: number;\n\n  @IsEnum(EmergencyGrade)\n  grade: EmergencyGrade;\n\n  @IsEnum(EmergencyType)\n  type: EmergencyType;\n\n  @IsOptional()\n  @IsObject()\n  medicalInfo?: Record;\n}\n\nexport class UpdateEmergencyStatusDto {\n  @IsEnum(EmergencyStatus)\n  status: EmergencyStatus;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateHospitalCapacityDto.html":{"url":"classes/UpdateHospitalCapacityDto.html","title":"class - UpdateHospitalCapacityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateHospitalCapacityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hospital/dto/hospital.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                availableBeds\n                            \n                            \n                                    \n                                availableIcuBeds\n                            \n                            \n                                    \n                                icuBeds\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                notes\n                            \n                            \n                                    \n                                totalBeds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        availableBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        availableIcuBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icuBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsNumber,\n  IsEmail,\n  IsUUID,\n  IsEnum,\n} from \"class-validator\";\n\nexport enum HospitalStatus {\n  ACTIVE = \"ACTIVE\",\n  INACTIVE = \"INACTIVE\",\n  MAINTENANCE = \"MAINTENANCE\",\n}\n\nexport class CreateHospitalDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  address: string;\n\n  @IsString()\n  city: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsString()\n  postalCode: string;\n\n  @IsNumber()\n  latitude: number;\n\n  @IsNumber()\n  longitude: number;\n\n  @IsString()\n  contactPhone: string;\n\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @IsOptional()\n  @IsNumber()\n  totalBeds?: number;\n\n  @IsOptional()\n  @IsNumber()\n  availableBeds?: number;\n\n  @IsOptional()\n  @IsNumber()\n  icuBeds?: number;\n\n  @IsOptional()\n  @IsNumber()\n  availableIcuBeds?: number;\n}\n\nexport class UpdateHospitalDto extends CreateHospitalDto {\n  @IsOptional()\n  @IsEnum(HospitalStatus)\n  status?: HospitalStatus;\n}\n\nexport class UpdateHospitalCapacityDto {\n  @IsNumber()\n  totalBeds: number;\n\n  @IsNumber()\n  availableBeds: number;\n\n  @IsNumber()\n  icuBeds: number;\n\n  @IsNumber()\n  availableIcuBeds: number;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n}\n\nexport class AcceptEmergencyDto {\n  @IsUUID()\n  emergencyId: string;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateHospitalDto.html":{"url":"classes/UpdateHospitalDto.html","title":"class - UpdateHospitalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateHospitalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hospital/dto/hospital.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateHospitalDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                availableBeds\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                availableIcuBeds\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                contactPhone\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                icuBeds\n                            \n                            \n                                    \n                                latitude\n                            \n                            \n                                    \n                                longitude\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                postalCode\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                totalBeds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HospitalStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(HospitalStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/hospital/dto/hospital.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        availableBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        availableIcuBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contactPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        icuBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        totalBeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateHospitalDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateHospitalDto:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsNumber,\n  IsEmail,\n  IsUUID,\n  IsEnum,\n} from \"class-validator\";\n\nexport enum HospitalStatus {\n  ACTIVE = \"ACTIVE\",\n  INACTIVE = \"INACTIVE\",\n  MAINTENANCE = \"MAINTENANCE\",\n}\n\nexport class CreateHospitalDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  address: string;\n\n  @IsString()\n  city: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsString()\n  postalCode: string;\n\n  @IsNumber()\n  latitude: number;\n\n  @IsNumber()\n  longitude: number;\n\n  @IsString()\n  contactPhone: string;\n\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @IsOptional()\n  @IsNumber()\n  totalBeds?: number;\n\n  @IsOptional()\n  @IsNumber()\n  availableBeds?: number;\n\n  @IsOptional()\n  @IsNumber()\n  icuBeds?: number;\n\n  @IsOptional()\n  @IsNumber()\n  availableIcuBeds?: number;\n}\n\nexport class UpdateHospitalDto extends CreateHospitalDto {\n  @IsOptional()\n  @IsEnum(HospitalStatus)\n  status?: HospitalStatus;\n}\n\nexport class UpdateHospitalCapacityDto {\n  @IsNumber()\n  totalBeds: number;\n\n  @IsNumber()\n  availableBeds: number;\n\n  @IsNumber()\n  icuBeds: number;\n\n  @IsNumber()\n  availableIcuBeds: number;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n}\n\nexport class AcceptEmergencyDto {\n  @IsUUID()\n  emergencyId: string;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                medicalInfo\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        medicalInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsEmail,\n  IsOptional,\n  IsEnum,\n  IsObject,\n} from \"class-validator\";\nimport { UserRole, UserStatus } from \"@prisma/client\";\n\nexport class UpdateProfileDto {\n  @IsOptional()\n  @IsString()\n  firstName?: string;\n\n  @IsOptional()\n  @IsString()\n  lastName?: string;\n\n  @IsOptional()\n  @IsString()\n  phone?: string;\n\n  @IsOptional()\n  @IsObject()\n  medicalInfo?: {\n    bloodType?: string;\n    allergies?: string[];\n    medications?: string[];\n    conditions?: string[];\n    emergencyContact?: {\n      name: string;\n      phone: string;\n      relationship: string;\n    };\n  };\n}\n\nexport class UserProfileResponseDto {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  phone?: string;\n  role: UserRole;\n  status: UserStatus;\n  profileImageUrl?: string;\n  medicalInfo?: any;\n  createdAt: Date;\n  updatedAt: Date;\n  organizationId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRescueTeamDto.html":{"url":"classes/UpdateRescueTeamDto.html","title":"class - UpdateRescueTeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRescueTeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rescue/dto/rescue.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                contactPhone\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                latitude\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                longitude\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                postalCode\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                vehicleTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        contactPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        vehicleTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:94\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsNumber,\n  IsEmail,\n  IsEnum,\n  IsArray,\n  IsUUID,\n} from \"class-validator\";\n\nexport enum RescueTeamStatus {\n  AVAILABLE = \"AVAILABLE\",\n  BUSY = \"BUSY\",\n  OFF_DUTY = \"OFF_DUTY\",\n  MAINTENANCE = \"MAINTENANCE\",\n}\n\nexport class CreateRescueTeamDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  address: string;\n\n  @IsString()\n  city: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsString()\n  postalCode: string;\n\n  @IsOptional()\n  @IsNumber()\n  latitude?: number;\n\n  @IsOptional()\n  @IsNumber()\n  longitude?: number;\n\n  @IsString()\n  contactPhone: string;\n\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @IsOptional()\n  @IsArray()\n  vehicleTypes?: string[];\n}\n\nexport class UpdateRescueTeamDto {\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @IsOptional()\n  @IsString()\n  address?: string;\n\n  @IsOptional()\n  @IsString()\n  city?: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsOptional()\n  @IsString()\n  postalCode?: string;\n\n  @IsOptional()\n  @IsNumber()\n  latitude?: number;\n\n  @IsOptional()\n  @IsNumber()\n  longitude?: number;\n\n  @IsOptional()\n  @IsString()\n  contactPhone?: string;\n\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @IsOptional()\n  @IsArray()\n  vehicleTypes?: string[];\n}\n\nexport class UpdateRescueTeamStatusDto {\n  @IsEnum(RescueTeamStatus)\n  status: RescueTeamStatus;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n\n  @IsOptional()\n  @IsUUID()\n  currentEmergencyId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRescueTeamStatusDto.html":{"url":"classes/UpdateRescueTeamStatusDto.html","title":"class - UpdateRescueTeamStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRescueTeamStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rescue/dto/rescue.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                currentEmergencyId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                notes\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        currentEmergencyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RescueTeamStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(RescueTeamStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rescue/dto/rescue.dto.ts:99\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsNumber,\n  IsEmail,\n  IsEnum,\n  IsArray,\n  IsUUID,\n} from \"class-validator\";\n\nexport enum RescueTeamStatus {\n  AVAILABLE = \"AVAILABLE\",\n  BUSY = \"BUSY\",\n  OFF_DUTY = \"OFF_DUTY\",\n  MAINTENANCE = \"MAINTENANCE\",\n}\n\nexport class CreateRescueTeamDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  address: string;\n\n  @IsString()\n  city: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsString()\n  postalCode: string;\n\n  @IsOptional()\n  @IsNumber()\n  latitude?: number;\n\n  @IsOptional()\n  @IsNumber()\n  longitude?: number;\n\n  @IsString()\n  contactPhone: string;\n\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @IsOptional()\n  @IsArray()\n  vehicleTypes?: string[];\n}\n\nexport class UpdateRescueTeamDto {\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @IsOptional()\n  @IsString()\n  address?: string;\n\n  @IsOptional()\n  @IsString()\n  city?: string;\n\n  @IsOptional()\n  @IsString()\n  state?: string;\n\n  @IsOptional()\n  @IsString()\n  postalCode?: string;\n\n  @IsOptional()\n  @IsNumber()\n  latitude?: number;\n\n  @IsOptional()\n  @IsNumber()\n  longitude?: number;\n\n  @IsOptional()\n  @IsString()\n  contactPhone?: string;\n\n  @IsOptional()\n  @IsEmail()\n  contactEmail?: string;\n\n  @IsOptional()\n  @IsArray()\n  vehicleTypes?: string[];\n}\n\nexport class UpdateRescueTeamStatusDto {\n  @IsEnum(RescueTeamStatus)\n  status: RescueTeamStatus;\n\n  @IsOptional()\n  @IsString()\n  notes?: string;\n\n  @IsOptional()\n  @IsUUID()\n  currentEmergencyId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getProfile\n                            \n                            \n                                    \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(user: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(user: any, updateProfileDto: UpdateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('me')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProfileDto\n                                            \n                                                            UpdateProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Put, Body, UseGuards } from \"@nestjs/common\";\nimport { UserService } from \"./user.service\";\nimport { JwtAuthGuard } from \"../auth/guards/jwt-auth.guard\";\nimport { CurrentUser } from \"../auth/decorators/current-user.decorator\";\nimport { UpdateProfileDto, UserProfileResponseDto } from \"./dto/user.dto\";\n\n@Controller(\"users\")\n@UseGuards(JwtAuthGuard)\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Get(\"me\")\n  async getProfile(@CurrentUser() user: any): Promise {\n    return this.userService.findOne(user.id);\n  }\n\n  @Put(\"me\")\n  async updateProfile(\n    @CurrentUser() user: any,\n    @Body() updateProfileDto: UpdateProfileDto,\n  ): Promise {\n    return this.userService.updateProfile(user.id, updateProfileDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { UserController } from \"./user.controller\";\nimport { UserService } from \"./user.service\";\nimport { PrismaModule } from \"../prisma/prisma.module\";\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileResponseDto.html":{"url":"classes/UserProfileResponseDto.html","title":"class - UserProfileResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                medicalInfo\n                            \n                            \n                                    Optional\n                                organizationId\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profileImageUrl\n                            \n                            \n                                role\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        medicalInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profileImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserRole\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserStatus\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsEmail,\n  IsOptional,\n  IsEnum,\n  IsObject,\n} from \"class-validator\";\nimport { UserRole, UserStatus } from \"@prisma/client\";\n\nexport class UpdateProfileDto {\n  @IsOptional()\n  @IsString()\n  firstName?: string;\n\n  @IsOptional()\n  @IsString()\n  lastName?: string;\n\n  @IsOptional()\n  @IsString()\n  phone?: string;\n\n  @IsOptional()\n  @IsObject()\n  medicalInfo?: {\n    bloodType?: string;\n    allergies?: string[];\n    medications?: string[];\n    conditions?: string[];\n    emergencyContact?: {\n      name: string;\n      phone: string;\n      relationship: string;\n    };\n  };\n}\n\nexport class UserProfileResponseDto {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  phone?: string;\n  role: UserRole;\n  status: UserStatus;\n  profileImageUrl?: string;\n  medicalInfo?: any;\n  createdAt: Date;\n  updatedAt: Date;\n  organizationId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(id: string, updateProfileDto: UpdateProfileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProfileDto\n                                            \n                                                            UpdateProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { PrismaService } from \"../prisma/prisma.service\";\nimport { UpdateProfileDto, UserProfileResponseDto } from \"./dto/user.dto\";\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n\n  async findOne(id: string): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { id },\n    });\n\n    if (!user) {\n      throw new NotFoundException(\"User not found\");\n    }\n\n    return user;\n  }\n\n  async findByEmail(email: string): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { email },\n    });\n\n    if (!user) {\n      throw new NotFoundException(\"User not found\");\n    }\n\n    return user;\n  }\n\n  async updateProfile(\n    id: string,\n    updateProfileDto: UpdateProfileDto,\n  ): Promise {\n    const user = await this.prisma.user.findUnique({\n      where: { id },\n    });\n\n    if (!user) {\n      throw new NotFoundException(\"User not found\");\n    }\n\n    // Update user profile\n    const updatedUser = await this.prisma.user.update({\n      where: { id },\n      data: {\n        firstName: updateProfileDto.firstName ?? user.firstName,\n        lastName: updateProfileDto.lastName ?? user.lastName,\n        phone: updateProfileDto.phone ?? user.phone,\n      },\n    });\n\n    return updatedUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                        src/auth/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            LoginDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            OAuthCallbackDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            OAuthLoginDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            RegisterDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/interfaces/auth.interface.ts\n            \n            interface\n            AuthTokens\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/interfaces/auth.interface.ts\n            \n            interface\n            SupabaseUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/interfaces/auth.interface.ts\n            \n            interface\n            TokenPayload\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/dashboard/dashboard.controller.ts\n            \n            controller\n            DashboardController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dashboard/dashboard.service.ts\n            \n            injectable\n            DashboardService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/dashboard/dto/dashboard.dto.ts\n            \n            class\n            DashboardStatsResponseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/dashboard/dto/dashboard.dto.ts\n            \n            class\n            ReportQueryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/hospital/dto/hospital.dto.ts\n            \n            class\n            AcceptEmergencyDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/hospital/dto/hospital.dto.ts\n            \n            class\n            CreateHospitalDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/hospital/dto/hospital.dto.ts\n            \n            class\n            UpdateHospitalCapacityDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/hospital/dto/hospital.dto.ts\n            \n            class\n            UpdateHospitalDto\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/hospital/hospital.controller.ts\n            \n            controller\n            HospitalController\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/hospital/hospital.service.ts\n            \n            injectable\n            HospitalService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/hospital/hospital.service.ts\n            \n            type alias\n            QueryMode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notification/dto/notification.dto.ts\n            \n            class\n            CreateNotificationDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/notification/dto/notification.dto.ts\n            \n            class\n            MarkAsReadDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/notification/notification.controller.ts\n            \n            controller\n            NotificationController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/notification/notification.gateway.ts\n            \n            class\n            NotificationGateway\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/notification/notification.gateway.ts\n            \n            interface\n            TokenPayload\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/rescue/dto/rescue.dto.ts\n            \n            class\n            CreateRescueTeamDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/rescue/dto/rescue.dto.ts\n            \n            class\n            UpdateRescueTeamDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/rescue/dto/rescue.dto.ts\n            \n            class\n            UpdateRescueTeamStatusDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/rescue/rescue.controller.ts\n            \n            controller\n            RescueController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/rescue/rescue.service.ts\n            \n            injectable\n            RescueService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/rescue/rescue.service.ts\n            \n            type alias\n            QueryMode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sos/dto/sos.dto.ts\n            \n            class\n            CreateEmergencyRequestDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/sos/dto/sos.dto.ts\n            \n            class\n            UpdateEmergencyStatusDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/sos/sos.controller.ts\n            \n            controller\n            SosController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/sos/sos.service.ts\n            \n            injectable\n            SosService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/supabase/supabase.service.ts\n            \n            injectable\n            SupabaseService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            UserProfileResponseDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.4.17\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.4.17\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.0.0\n        \n            @nestjs/swagger : ^11.1.5\n        \n            @nestjs/websockets : ^10.4.17\n        \n            @prisma/client : ^6.6.0\n        \n            @supabase/supabase-js : ^2.49.4\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            dotenv : ^16.5.0\n        \n            express : ^4.21.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^5.0.1\n        \n            rxjs : ^7.8.2\n        \n            socket.io : ^4.8.1\n        \n            swagger-ui-express : ^5.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EmergencyGrade   (src/.../sos.dto.ts)\n                        \n                        \n                            EmergencyStatus   (src/.../sos.dto.ts)\n                        \n                        \n                            EmergencyType   (src/.../sos.dto.ts)\n                        \n                        \n                            HospitalStatus   (src/.../hospital.dto.ts)\n                        \n                        \n                            ReportType   (src/.../dashboard.dto.ts)\n                        \n                        \n                            RescueTeamStatus   (src/.../rescue.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/sos/dto/sos.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        EmergencyGrade\n                    \n                \n                        \n                            \n                                 CRITICAL\n                            \n                        \n                        \n                            \n                                Value : CRITICAL\n                            \n                        \n                        \n                            \n                                 URGENT\n                            \n                        \n                        \n                            \n                                Value : URGENT\n                            \n                        \n                        \n                            \n                                 NON_URGENT\n                            \n                        \n                        \n                            \n                                Value : NON_URGENT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EmergencyStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 ASSIGNED\n                            \n                        \n                        \n                            \n                                Value : ASSIGNED\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : CANCELLED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EmergencyType\n                    \n                \n                        \n                            \n                                 ACCIDENT\n                            \n                        \n                        \n                            \n                                Value : ACCIDENT\n                            \n                        \n                        \n                            \n                                 MEDICAL\n                            \n                        \n                        \n                            \n                                Value : MEDICAL\n                            \n                        \n                        \n                            \n                                 FIRE\n                            \n                        \n                        \n                            \n                                Value : FIRE\n                            \n                        \n                        \n                            \n                                 CRIME\n                            \n                        \n                        \n                            \n                                Value : CRIME\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/hospital/dto/hospital.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        HospitalStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 MAINTENANCE\n                            \n                        \n                        \n                            \n                                Value : MAINTENANCE\n                            \n                        \n            \n        \n\n    src/dashboard/dto/dashboard.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        ReportType\n                    \n                \n                        \n                            \n                                 DAILY\n                            \n                        \n                        \n                            \n                                Value : DAILY\n                            \n                        \n                        \n                            \n                                 WEEKLY\n                            \n                        \n                        \n                            \n                                Value : WEEKLY\n                            \n                        \n                        \n                            \n                                 MONTHLY\n                            \n                        \n                        \n                            \n                                Value : MONTHLY\n                            \n                        \n                        \n                            \n                                 CUSTOM\n                            \n                        \n                        \n                            \n                                Value : CUSTOM\n                            \n                        \n            \n        \n\n    src/rescue/dto/rescue.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        RescueTeamStatus\n                    \n                \n                        \n                            \n                                 AVAILABLE\n                            \n                        \n                        \n                            \n                                Value : AVAILABLE\n                            \n                        \n                        \n                            \n                                 BUSY\n                            \n                        \n                        \n                            \n                                Value : BUSY\n                            \n                        \n                        \n                            \n                                 OFF_DUTY\n                            \n                        \n                        \n                            \n                                Value : OFF_DUTY\n                            \n                        \n                        \n                            \n                                 MAINTENANCE\n                            \n                        \n                        \n                            \n                                Value : MAINTENANCE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEmergency Response System Backend (1669 Thailand)\nThis NestJS backend serves as the foundation for the 1669 Thailand Emergency Response System, designed to connect patients, emergency response centers, hospitals, and rescue teams through a secure, real-time platform.\nTech Stack\n\nNestJS: Main backend framework\nPostgreSQL: Database\nPrisma: ORM for database interactions\nSupabase: For OAuth 2.0 authentication (Google, Facebook, Apple)\nSocket.IO: Real-time communication for emergency notifications\n\nUser Types\nThe system supports four main types of users:\n\nGeneral Users / Patients: Can request emergency assistance\n1669 Emergency Response Center: Coordinates emergency responses\nHospitals: Receive and manage emergency cases\nRescue Teams: Respond to emergencies on the ground\n\nGetting Started\nPrerequisites\n\nNode.js (v14 or later)\nnpm or yarn\nPostgreSQL database\nSupabase account with OAuth providers configured\n\nInstallation\n\nClone the repository\nInstall dependencies:Example :npm install\nCopy .env.example to .env and configure environment variables\nRun database migrations:Example :npx prisma migrate dev\nStart the development server:Example :npm run start:dev\n\nProject Structure\nExample :src/\n├── auth/               # Authentication module (OAuth2 via Supabase)\n├── user/               # User management module\n├── sos/                # Emergency request handling\n├── hospital/           # Hospital management\n├── rescue/             # Rescue team management\n├── dashboard/          # Admin & stats dashboard\n├── notification/       # Real-time notifications (Socket.IO)\n├── prisma/             # Database connection & models\n└── common/             # Shared utilities, filters, guards, etc.Key Features\n\nOAuth 2.0 authentication via Supabase\nRole-based access control\nReal-time emergency notifications\nGeolocation-based emergency response\nHospital capacity management\nRescue team status and availability tracking\nComprehensive admin dashboard and reporting\n\nAPI Documentation\nThe API follows RESTful conventions with these main endpoints:\n\n/api/auth/*: Authentication endpoints\n/api/users/*: User management\n/api/sos/*: Emergency request endpoints\n/api/hospitals/*: Hospital management\n/api/rescue-teams/*: Rescue team management\n/api/dashboard/*: Statistics and reporting\n/api/notifications/*: User notifications\n\nSocket.IO Events\nReal-time communication uses these main event channels:\n\nemergency: Broadcasts new emergency requests\nstatus-update: Updates on emergency status changes\nassignment: Notifies teams of new assignments\nlocation-update: Real-time location updates for rescue teams\n\nAuthentication Flow\n\nFrontend initiates OAuth flow via /api/auth/login with desired provider\nUser is redirected to provider (Google, Facebook, Apple)\nAfter authentication, provider redirects to our callback URL\nBackend exchanges code for tokens and creates/updates user record\nJWT token is issued for subsequent API calls\n\nLicense\nThis project is privately licensed and not for distribution.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HospitalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RescueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SupabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_HospitalModule\n\n\n\ncluster_HospitalModule_exports\n\n\n\ncluster_HospitalModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_exports\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_RescueModule\n\n\n\ncluster_RescueModule_exports\n\n\n\ncluster_RescueModule_providers\n\n\n\ncluster_SosModule\n\n\n\ncluster_SosModule_exports\n\n\n\ncluster_SosModule_providers\n\n\n\ncluster_SupabaseModule\n\n\n\ncluster_SupabaseModule_exports\n\n\n\ncluster_SupabaseModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nAuthModule->NotificationModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nHospitalModule\n\nHospitalModule\n\nDashboardModule -->\n\nHospitalModule->DashboardModule\n\n\n\nAppModule -->\n\nHospitalModule->AppModule\n\n\n\n\n\nHospitalService \n\nHospitalService \n\nHospitalService  -->\n\nHospitalModule->HospitalService \n\n\n\nHospitalModule -->\n\nNotificationModule->HospitalModule\n\n\n\n\n\nRescueModule\n\nRescueModule\n\nRescueModule -->\n\nNotificationModule->RescueModule\n\n\n\n\n\nSosModule\n\nSosModule\n\nSosModule -->\n\nNotificationModule->SosModule\n\n\n\nAppModule -->\n\nNotificationModule->AppModule\n\n\n\n\n\nNotificationGateway \n\nNotificationGateway \n\nNotificationGateway  -->\n\nNotificationModule->NotificationGateway \n\n\n\n\n\nNotificationService \n\nNotificationService \n\nNotificationService  -->\n\nNotificationModule->NotificationService \n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nDashboardModule -->\n\nPrismaModule->DashboardModule\n\n\n\nHospitalModule -->\n\nPrismaModule->HospitalModule\n\n\n\nNotificationModule -->\n\nPrismaModule->NotificationModule\n\n\n\nRescueModule -->\n\nPrismaModule->RescueModule\n\n\n\nSosModule -->\n\nPrismaModule->SosModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nDashboardModule -->\n\nRescueModule->DashboardModule\n\n\n\nAppModule -->\n\nRescueModule->AppModule\n\n\n\n\n\nRescueService \n\nRescueService \n\nRescueService  -->\n\nRescueModule->RescueService \n\n\n\nDashboardModule -->\n\nSosModule->DashboardModule\n\n\n\nAppModule -->\n\nSosModule->AppModule\n\n\n\n\n\nSosService \n\nSosService \n\nSosService  -->\n\nSosModule->SosService \n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nAppModule -->\n\nSupabaseModule->AppModule\n\n\n\n\n\nSupabaseService \n\nSupabaseService \n\nSupabaseService  -->\n\nSupabaseModule->SupabaseService \n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\nHospitalService\n\nHospitalService\n\nHospitalModule -->\n\nHospitalService->HospitalModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nRescueService\n\nRescueService\n\nRescueModule -->\n\nRescueService->RescueModule\n\n\n\n\n\nSosService\n\nSosService\n\nSosModule -->\n\nSosService->SosModule\n\n\n\n\n\nSupabaseService\n\nSupabaseService\n\nSupabaseModule -->\n\nSupabaseService->SupabaseModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : Emergency Response System Backend (1669 Thailand)\n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            QueryMode   (src/.../hospital.service.ts)\n                        \n                        \n                            QueryMode   (src/.../rescue.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/hospital/hospital.service.ts\n    \n    \n        \n            \n                \n                    \n                    QueryMode\n                \n            \n            \n                \n                        \"default\" | \"insensitive\"\n\n                \n            \n        \n    \n    src/rescue/rescue.service.ts\n    \n    \n        \n            \n                \n                    \n                    QueryMode\n                \n            \n            \n                \n                        \"default\" | \"insensitive\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n            \n                \n                    Parameter decorator to extract the current user from the request\n\n                \n            \n\n        \n    \n\n    src/auth/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"isPublic\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n            \n                \n                    Decorator for marking routes as public (no authentication required)\n\n                \n            \n\n        \n    \n\n    src/auth/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: UserRole[]) => {\n  console.log('Roles decorator called with:', roles);\n  return SetMetadata(ROLES_KEY, roles);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"roles\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
